/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Universalconnectormanagerv3DatasourceType } from '../models/Universalconnectormanagerv3DatasourceType';
import { Universalconnectormanagerv3PluginDefinition } from '../models/Universalconnectormanagerv3PluginDefinition';
import { HttpFile } from '../http/http';

/**
* Part of GetConnectors response. Contains details about a Universal connector connection configuration.
*/
export class Universalconnectormanagerv3ConnectorSummary {
    /**
    * Connector configuration parameters. A union of Input and Filter parameters.
    */
    'combinedConfiguration'?: string;
    /**
    * Connector configuration parameters strings, for UI.
    */
    'combinedConfigurationStrings'?: string;
    /**
    * ID of connector.
    */
    'connectorName'?: string;
    /**
    * The developer who developed the manifest.
    */
    'developer'?: string;
    'filterPlugin'?: Universalconnectormanagerv3PluginDefinition;
    /**
    * ID of filter plugin.
    */
    'filterPluginName'?: string;
    'inputPlugin'?: Universalconnectormanagerv3PluginDefinition;
    /**
    * ID of input plugin.
    */
    'inputPluginName'?: string;
    /**
    * Supported data source types, according to the Filter plugin.
    */
    'supportedDatasources'?: Array<Universalconnectormanagerv3DatasourceType>;
    /**
    * Array of supported platforms/environments. Examples: \"on-premise\", \"AWS\", \"Azure\", \"GCP\".
    */
    'supportedPlatforms'?: Array<string>;
    /**
    * Date connector manifest was uploaded.
    */
    'uploadDate'?: Date;
    /**
    * User who uploaded the manifest.
    */
    'uploadUser'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "combinedConfiguration",
            "baseName": "combined_configuration",
            "type": "string",
            "format": ""
        },
        {
            "name": "combinedConfigurationStrings",
            "baseName": "combined_configuration_strings",
            "type": "string",
            "format": ""
        },
        {
            "name": "connectorName",
            "baseName": "connector_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "developer",
            "baseName": "developer",
            "type": "string",
            "format": ""
        },
        {
            "name": "filterPlugin",
            "baseName": "filter_plugin",
            "type": "Universalconnectormanagerv3PluginDefinition",
            "format": ""
        },
        {
            "name": "filterPluginName",
            "baseName": "filter_plugin_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "inputPlugin",
            "baseName": "input_plugin",
            "type": "Universalconnectormanagerv3PluginDefinition",
            "format": ""
        },
        {
            "name": "inputPluginName",
            "baseName": "input_plugin_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "supportedDatasources",
            "baseName": "supported_datasources",
            "type": "Array<Universalconnectormanagerv3DatasourceType>",
            "format": ""
        },
        {
            "name": "supportedPlatforms",
            "baseName": "supported_platforms",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "uploadDate",
            "baseName": "upload_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "uploadUser",
            "baseName": "upload_user",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Universalconnectormanagerv3ConnectorSummary.attributeTypeMap;
    }

    public constructor() {
    }
}

