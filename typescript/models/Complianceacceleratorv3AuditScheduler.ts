/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Schedulerv3DayOfWeek } from '../models/Schedulerv3DayOfWeek';
import { Schedulerv3DayOrder } from '../models/Schedulerv3DayOrder';
import { Schedulerv3Frequency } from '../models/Schedulerv3Frequency';
import { Schedulerv3Month } from '../models/Schedulerv3Month';
import { Schedulerv3RepeatBegin } from '../models/Schedulerv3RepeatBegin';
import { Schedulerv3RepeatEnd } from '../models/Schedulerv3RepeatEnd';
import { HttpFile } from '../http/http';

/**
* Audit scheduler.
*/
export class Complianceacceleratorv3AuditScheduler {
    /**
    * Begin the schedule on.
    */
    'beginSchedule'?: Date;
    /**
    * Either by day of month or date of the week of month.
    */
    'byDayOfMonth'?: boolean;
    /**
    * The day of the month, combined with frequency = 4 because there last day of the month the data type is string.
    */
    'dayOfMonth'?: string;
    /**
    * What day do you want to run , combined with frequency= 3, such as Monday, Tuesday.
    */
    'dayOfWeek'?: Array<Schedulerv3DayOfWeek>;
    'dayOrder'?: Schedulerv3DayOrder;
    'dayOrderDayOfWeek'?: Schedulerv3DayOfWeek;
    /**
    * End the schedule on , if it is null means never ends.
    */
    'endSchedule'?: Date;
    'frequency'?: Schedulerv3Frequency;
    /**
    * Month value.
    */
    'months'?: Array<Schedulerv3Month>;
    /**
    * Never end schedule or not.
    */
    'neverEnd'?: boolean;
    /**
    * Combined with frequency to define how often to run the job. ie, if frequncy =1 and repeat =3 means run the job every 3 hours.
    */
    'repeat'?: number;
    'repeatBegin'?: Schedulerv3RepeatBegin;
    'repeatEnd'?: Schedulerv3RepeatEnd;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "beginSchedule",
            "baseName": "begin_schedule",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "byDayOfMonth",
            "baseName": "by_day_of_month",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "dayOfMonth",
            "baseName": "day_of_month",
            "type": "string",
            "format": ""
        },
        {
            "name": "dayOfWeek",
            "baseName": "day_of_week",
            "type": "Array<Schedulerv3DayOfWeek>",
            "format": ""
        },
        {
            "name": "dayOrder",
            "baseName": "day_order",
            "type": "Schedulerv3DayOrder",
            "format": ""
        },
        {
            "name": "dayOrderDayOfWeek",
            "baseName": "day_order_day_of_week",
            "type": "Schedulerv3DayOfWeek",
            "format": ""
        },
        {
            "name": "endSchedule",
            "baseName": "end_schedule",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "frequency",
            "baseName": "frequency",
            "type": "Schedulerv3Frequency",
            "format": ""
        },
        {
            "name": "months",
            "baseName": "months",
            "type": "Array<Schedulerv3Month>",
            "format": ""
        },
        {
            "name": "neverEnd",
            "baseName": "never_end",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "repeat",
            "baseName": "repeat",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "repeatBegin",
            "baseName": "repeat_begin",
            "type": "Schedulerv3RepeatBegin",
            "format": ""
        },
        {
            "name": "repeatEnd",
            "baseName": "repeat_end",
            "type": "Schedulerv3RepeatEnd",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Complianceacceleratorv3AuditScheduler.attributeTypeMap;
    }

    public constructor() {
    }
}



