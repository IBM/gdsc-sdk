/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Assetsv3AccountVertex } from '../models/Assetsv3AccountVertex';
import { Assetsv3ApplicationVertex } from '../models/Assetsv3ApplicationVertex';
import { Assetsv3DatabaseVertex } from '../models/Assetsv3DatabaseVertex';
import { Assetsv3DeploymentVertex } from '../models/Assetsv3DeploymentVertex';
import { Assetsv3EndpointVertex } from '../models/Assetsv3EndpointVertex';
import { Assetsv3HostVertex } from '../models/Assetsv3HostVertex';
import { Assetsv3IPVertex } from '../models/Assetsv3IPVertex';
import { Assetsv3ModelVertex } from '../models/Assetsv3ModelVertex';
import { Assetsv3PortVertex } from '../models/Assetsv3PortVertex';
import { Assetsv3ResourcesVertex } from '../models/Assetsv3ResourcesVertex';
import { Assetsv3StorageVertex } from '../models/Assetsv3StorageVertex';
import { Assetsv3SubscriptionVertex } from '../models/Assetsv3SubscriptionVertex';
import { HttpFile } from '../http/http';

export class Assetsv3AssetIngestionRequest {
    'accounts'?: Array<Assetsv3AccountVertex>;
    'applications'?: Array<Assetsv3ApplicationVertex>;
    'databases'?: Array<Assetsv3DatabaseVertex>;
    'deployments'?: Array<Assetsv3DeploymentVertex>;
    'endpoints'?: Array<Assetsv3EndpointVertex>;
    'hosts'?: Array<Assetsv3HostVertex>;
    'ips'?: Array<Assetsv3IPVertex>;
    'models'?: Array<Assetsv3ModelVertex>;
    'origin'?: string;
    'ports'?: Array<Assetsv3PortVertex>;
    'resources'?: Array<Assetsv3ResourcesVertex>;
    'storages'?: Array<Assetsv3StorageVertex>;
    'subscriptions'?: Array<Assetsv3SubscriptionVertex>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accounts",
            "baseName": "accounts",
            "type": "Array<Assetsv3AccountVertex>",
            "format": ""
        },
        {
            "name": "applications",
            "baseName": "applications",
            "type": "Array<Assetsv3ApplicationVertex>",
            "format": ""
        },
        {
            "name": "databases",
            "baseName": "databases",
            "type": "Array<Assetsv3DatabaseVertex>",
            "format": ""
        },
        {
            "name": "deployments",
            "baseName": "deployments",
            "type": "Array<Assetsv3DeploymentVertex>",
            "format": ""
        },
        {
            "name": "endpoints",
            "baseName": "endpoints",
            "type": "Array<Assetsv3EndpointVertex>",
            "format": ""
        },
        {
            "name": "hosts",
            "baseName": "hosts",
            "type": "Array<Assetsv3HostVertex>",
            "format": ""
        },
        {
            "name": "ips",
            "baseName": "ips",
            "type": "Array<Assetsv3IPVertex>",
            "format": ""
        },
        {
            "name": "models",
            "baseName": "models",
            "type": "Array<Assetsv3ModelVertex>",
            "format": ""
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "string",
            "format": ""
        },
        {
            "name": "ports",
            "baseName": "ports",
            "type": "Array<Assetsv3PortVertex>",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "Array<Assetsv3ResourcesVertex>",
            "format": ""
        },
        {
            "name": "storages",
            "baseName": "storages",
            "type": "Array<Assetsv3StorageVertex>",
            "format": ""
        },
        {
            "name": "subscriptions",
            "baseName": "subscriptions",
            "type": "Array<Assetsv3SubscriptionVertex>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Assetsv3AssetIngestionRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

