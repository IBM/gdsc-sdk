/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Datamartprocessorv3DatamartFileInfo } from '../models/Datamartprocessorv3DatamartFileInfo';
import { HttpFile } from '../http/http';

/**
* DatamartInfo is the object containing all info of a datamart.
*/
export class Datamartprocessorv3DatamartInfo {
    /**
    * Timestamp in UTC when the entry was made.
    */
    'currentTs'?: Date;
    /**
    * Type of datamart.
    */
    'dataType'?: string;
    /**
    * Errors if any.
    */
    'error'?: string;
    /**
    * Total records exported from gdp.
    */
    'exportRecordCount'?: number;
    /**
    * Export status of datamart.
    */
    'exportStatus'?: number;
    /**
    * Total failed files in a datamart.
    */
    'failureFileCount'?: number;
    /**
    * File info inside a datamart.
    */
    'files'?: Array<Datamartprocessorv3DatamartFileInfo>;
    /**
    * GDP hostname.
    */
    'gdpHostname'?: string;
    /**
    * Total numbers of records ingested for this datamart.
    */
    'ingestRecordCount'?: number;
    /**
    * Ingest status of datamart.
    */
    'ingestStatus'?: number;
    /**
    * Ingestion id.
    */
    'ingestionId'?: string;
    /**
    * Wnding time period of data in datamart.
    */
    'periodEnd'?: Date;
    /**
    * Starting time period of data in datamart.
    */
    'periodStart'?: Date;
    /**
    * Total successful files in a datamart.
    */
    'successFileCount'?: number;
    /**
    * Total file count inside a datamart.
    */
    'totalFileCount'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currentTs",
            "baseName": "current_ts",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "dataType",
            "baseName": "data_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string",
            "format": ""
        },
        {
            "name": "exportRecordCount",
            "baseName": "export_record_count",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "exportStatus",
            "baseName": "export_status",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "failureFileCount",
            "baseName": "failure_file_count",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "files",
            "baseName": "files",
            "type": "Array<Datamartprocessorv3DatamartFileInfo>",
            "format": ""
        },
        {
            "name": "gdpHostname",
            "baseName": "gdp_hostname",
            "type": "string",
            "format": ""
        },
        {
            "name": "ingestRecordCount",
            "baseName": "ingest_record_count",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "ingestStatus",
            "baseName": "ingest_status",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "ingestionId",
            "baseName": "ingestion_id",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "periodEnd",
            "baseName": "period_end",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "periodStart",
            "baseName": "period_start",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "successFileCount",
            "baseName": "success_file_count",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalFileCount",
            "baseName": "total_file_count",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return Datamartprocessorv3DatamartInfo.attributeTypeMap;
    }

    public constructor() {
    }
}

