/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Tenantuserv3UserState } from '../models/Tenantuserv3UserState';
import { HttpFile } from '../http/http';

export class Tenantuserv3FullUser {
    /**
    * Datetime of last access.
    */
    'activationDate'?: Date;
    /**
    * Which directory did this user come from?.
    */
    'directoryId'?: string;
    /**
    * Disabled.
    */
    'disabled'?: boolean;
    /**
    * LDAP cn.
    */
    'displayName'?: string;
    /**
    * LDAP dn=  (needed to import user from LDAP into TenantUser).
    */
    'distinguishedName'?: string;
    /**
    * The email address of the user for communication.
    */
    'email'?: string;
    /**
    * External id of this user. E.g. ISV id.
    */
    'externalId'?: string;
    /**
    * Metadata will contain all preferences   --> this will contain all user-specific settings, including session time out.
    */
    'metadata'?: { [key: string]: string; };
    /**
    * Cumulative privileges base on all roles.
    */
    'privileges'?: { [key: string]: boolean; };
    /**
    * Roles.
    */
    'roles'?: Array<string>;
    'state'?: Tenantuserv3UserState;
    /**
    * Tenant this user belongs to.
    */
    'tenantId'?: string;
    /**
    * Email.
    */
    'uid'?: string;
    /**
    * Unique id for user.
    */
    'userId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "activationDate",
            "baseName": "activation_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "directoryId",
            "baseName": "directory_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "distinguishedName",
            "baseName": "distinguished_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalId",
            "baseName": "external_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "privileges",
            "baseName": "privileges",
            "type": "{ [key: string]: boolean; }",
            "format": ""
        },
        {
            "name": "roles",
            "baseName": "roles",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "Tenantuserv3UserState",
            "format": ""
        },
        {
            "name": "tenantId",
            "baseName": "tenant_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "uid",
            "baseName": "uid",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Tenantuserv3FullUser.attributeTypeMap;
    }

    public constructor() {
    }
}



