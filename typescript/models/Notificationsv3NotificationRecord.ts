/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Notificationsv3NotificationSeverity } from '../models/Notificationsv3NotificationSeverity';
import { Notificationsv3NotificationState } from '../models/Notificationsv3NotificationState';
import { HttpFile } from '../http/http';

/**
* A notifications record indicates who, what, when, where, and why something happened and presents it  to the user in a meaningful way.
*/
export class Notificationsv3NotificationRecord {
    /**
    * The time the notification record was created (when).
    */
    'creationTime'?: Date;
    /**
    * The time the associated event(s) completed.
    */
    'eventEndTime'?: Date;
    /**
    * The time the associated event(s) were initiated.
    */
    'eventStartTime'?: Date;
    /**
    * URL for details of the notification.
    */
    'href'?: string;
    /**
    * Unique ID for notification, \"\" for new records, required for update.
    */
    'id'?: string;
    /**
    * Source of the notification (Predictive Analytics, Outlier Analytics, Analytic Preferences Changed, User Administration, etc).
    */
    'origin'?: string;
    /**
    * Data specifically related to the origin (an ID or description needed for further action).
    */
    'originData'?: string;
    'severity'?: Notificationsv3NotificationSeverity;
    'state'?: Notificationsv3NotificationState;
    /**
    * For future use: \"\", info, error, criticalAnalysis, normalAnalysis, infoAnalysis.
    */
    'style'?: string;
    /**
    * The unique id for the Tenant the notification is associated with.
    */
    'tenantId'?: string;
    /**
    * Detailed description of the notification in HTML format (to be embedded in HTML container).
    */
    'text'?: string;
    /**
    * Brief title used to quickly describe the notification.
    */
    'title'?: string;
    /**
    * For future use: batches of events that are related to each other may be grouped together when shown to the user.
    */
    'transactionId'?: string;
    /**
    * For future use: type will be used to determine how and when a user is notified of an event.
    */
    'type'?: string;
    /**
    * The user unique ID in tenant user db of the user that requested the operation (who).
    */
    'userId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "creationTime",
            "baseName": "creation_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "eventEndTime",
            "baseName": "event_end_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "eventStartTime",
            "baseName": "event_start_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "string",
            "format": ""
        },
        {
            "name": "originData",
            "baseName": "origin_data",
            "type": "string",
            "format": ""
        },
        {
            "name": "severity",
            "baseName": "severity",
            "type": "Notificationsv3NotificationSeverity",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "Notificationsv3NotificationState",
            "format": ""
        },
        {
            "name": "style",
            "baseName": "style",
            "type": "string",
            "format": ""
        },
        {
            "name": "tenantId",
            "baseName": "tenant_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionId",
            "baseName": "transaction_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Notificationsv3NotificationRecord.attributeTypeMap;
    }

    public constructor() {
    }
}



