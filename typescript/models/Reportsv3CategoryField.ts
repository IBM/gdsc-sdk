/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Reportsv3HeaderDataType } from '../models/Reportsv3HeaderDataType';
import { Reportsv3HeaderType } from '../models/Reportsv3HeaderType';
import { HttpFile } from '../http/http';

export class Reportsv3CategoryField {
    /**
    * If the header can be used in charts.
    */
    'canBeUsedInChart'?: boolean;
    /**
    * Field name\'s NLS translation key and translated value.
    */
    'fieldName'?: string;
    /**
    * Group type id for the filter.
    */
    'groupTypeId'?: number;
    /**
    * The category of the header.
    */
    'headerCategory'?: string;
    'headerDataType'?: Reportsv3HeaderDataType;
    /**
    * Header description\'s NLS translation key and translated value.
    */
    'headerDescription'?: string;
    /**
    * The header name.
    */
    'headerName'?: string;
    /**
    * If the header is recommended.
    */
    'isRecommended'?: boolean;
    'isVisible'?: boolean;
    /**
    * Table name.
    */
    'tableName'?: string;
    'type'?: Reportsv3HeaderType;
    /**
    * Header type length.
    */
    'typeLength'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "canBeUsedInChart",
            "baseName": "can_be_used_in_chart",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "fieldName",
            "baseName": "field_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupTypeId",
            "baseName": "group_type_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "headerCategory",
            "baseName": "header_category",
            "type": "string",
            "format": ""
        },
        {
            "name": "headerDataType",
            "baseName": "header_data_type",
            "type": "Reportsv3HeaderDataType",
            "format": ""
        },
        {
            "name": "headerDescription",
            "baseName": "header_description",
            "type": "string",
            "format": ""
        },
        {
            "name": "headerName",
            "baseName": "header_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "isRecommended",
            "baseName": "is_recommended",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isVisible",
            "baseName": "is_visible",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "tableName",
            "baseName": "table_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Reportsv3HeaderType",
            "format": ""
        },
        {
            "name": "typeLength",
            "baseName": "type_length",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return Reportsv3CategoryField.attributeTypeMap;
    }

    public constructor() {
    }
}



