/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Reportsv3DisplayHeader } from '../models/Reportsv3DisplayHeader';
import { Reportsv3InReportAdditionalParameter } from '../models/Reportsv3InReportAdditionalParameter';
import { Reportsv3ReportTag } from '../models/Reportsv3ReportTag';
import { Reportsv3RunTimeParameter } from '../models/Reportsv3RunTimeParameter';
import { HttpFile } from '../http/http';

/**
* ReportDisplayLayout has report matadata , rows and headers.
*/
export class Reportsv3ReportDisplayLayout {
    /**
    * The default timestamp header id.
    */
    'defaultTimestampHeaderId'?: string;
    /**
    * Report data fetch size.
    */
    'fetchSize'?: number;
    /**
    * Additional Parameters for in report.
    */
    'inReportAdditionalParameter'?: Array<Reportsv3InReportAdditionalParameter>;
    /**
    * If a report is auditable.
    */
    'isAuditable'?: boolean;
    /**
    * Is predefined report.
    */
    'isPredefined'?: boolean;
    /**
    * Total count of the report results.
    */
    'numberOfEvents'?: string;
    /**
    * Report data offset.
    */
    'offset'?: number;
    /**
    * Report refresh rate.
    */
    'refreshRate'?: number;
    /**
    * Report description.
    */
    'reportDescription'?: string;
    /**
    * The report headers.
    */
    'reportHeaders'?: Array<Reportsv3DisplayHeader>;
    /**
    * The report ID.
    */
    'reportId'?: string;
    /**
    * Report name.
    */
    'reportName'?: string;
    /**
    * Report tags.
    */
    'reportTags'?: Array<Reportsv3ReportTag>;
    /**
    * Runtime Parameter list.
    */
    'runtimeParamList'?: Array<Reportsv3RunTimeParameter>;
    /**
    * The selected timestamp header id- in case the user override the default.
    */
    'selectedTimestampHeaderId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "defaultTimestampHeaderId",
            "baseName": "default_timestamp_header_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "fetchSize",
            "baseName": "fetch_size",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "inReportAdditionalParameter",
            "baseName": "in_report_additional_parameter",
            "type": "Array<Reportsv3InReportAdditionalParameter>",
            "format": ""
        },
        {
            "name": "isAuditable",
            "baseName": "is_auditable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPredefined",
            "baseName": "is_predefined",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "numberOfEvents",
            "baseName": "number_of_events",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "offset",
            "baseName": "offset",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "refreshRate",
            "baseName": "refresh_rate",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "reportDescription",
            "baseName": "report_description",
            "type": "string",
            "format": ""
        },
        {
            "name": "reportHeaders",
            "baseName": "report_headers",
            "type": "Array<Reportsv3DisplayHeader>",
            "format": ""
        },
        {
            "name": "reportId",
            "baseName": "report_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "reportName",
            "baseName": "report_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "reportTags",
            "baseName": "report_tags",
            "type": "Array<Reportsv3ReportTag>",
            "format": ""
        },
        {
            "name": "runtimeParamList",
            "baseName": "runtime_param_list",
            "type": "Array<Reportsv3RunTimeParameter>",
            "format": ""
        },
        {
            "name": "selectedTimestampHeaderId",
            "baseName": "selected_timestamp_header_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Reportsv3ReportDisplayLayout.attributeTypeMap;
    }

    public constructor() {
    }
}

