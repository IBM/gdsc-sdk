/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Resourcecontrollerk8v3App } from '../models/Resourcecontrollerk8v3App';
import { Resourcecontrollerk8v3ControllerResources } from '../models/Resourcecontrollerk8v3ControllerResources';
import { Resourcecontrollerk8v3KeyPair } from '../models/Resourcecontrollerk8v3KeyPair';
import { Resourcecontrollerk8v3TextContent } from '../models/Resourcecontrollerk8v3TextContent';
import { Resourcecontrollerk8v3Version } from '../models/Resourcecontrollerk8v3Version';
import { HttpFile } from '../http/http';

/**
* Controller contains the information about a controller.
*/
export class Resourcecontrollerk8v3Controller {
    /**
    * Optional: The list of internal IDs of the apps for the controller.
    */
    'appIds'?: Array<string>;
    /**
    * Optional: The controller\'s apps.
    */
    'apps'?: Array<Resourcecontrollerk8v3App>;
    /**
    * Optional: The controller capability like protected secret. If absence, app manager assumes all capabilities are false.
    */
    'capability'?: { [key: string]: boolean; };
    /**
    * Optional: The date this controller was created (ms since epoch).
    */
    'created'?: string;
    'description'?: Resourcecontrollerk8v3TextContent;
    /**
    * Optional: The internal ID of the controller.
    */
    'id'?: string;
    'keypair'?: Resourcecontrollerk8v3KeyPair;
    /**
    * Optional: The last date when a heartbeat was applied to this controller (ms since epoch).
    */
    'lastHeartbeat'?: string;
    /**
    * Is the controller \\\"local\\\"? \\\"Local\\\" controllers may not be unpaired, removed, or renewed.
    */
    'local'?: boolean;
    /**
    * Optional: The date this controller was modified (ms since epoch).
    */
    'modified'?: string;
    /**
    * The name of the controller.
    */
    'name'?: string;
    'resources'?: Resourcecontrollerk8v3ControllerResources;
    /**
    * Optional: The number of ms since the last heartbeat.
    */
    'sinceLastHeartbeat'?: string;
    /**
    * Optional: The status of the controller. Currently supported values are unpaired, paired, uninstalling.
    */
    'status'?: string;
    /**
    * Optional: The tenant id for the controller.
    */
    'tenantId'?: string;
    /**
    * Optional: The internal ID of the tenant for the controller.
    */
    'tenantUuid'?: string;
    'version'?: Resourcecontrollerk8v3Version;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "appIds",
            "baseName": "app_ids",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "apps",
            "baseName": "apps",
            "type": "Array<Resourcecontrollerk8v3App>",
            "format": ""
        },
        {
            "name": "capability",
            "baseName": "capability",
            "type": "{ [key: string]: boolean; }",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "Resourcecontrollerk8v3TextContent",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "keypair",
            "baseName": "keypair",
            "type": "Resourcecontrollerk8v3KeyPair",
            "format": ""
        },
        {
            "name": "lastHeartbeat",
            "baseName": "last_heartbeat",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "local",
            "baseName": "local",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "modified",
            "baseName": "modified",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "Resourcecontrollerk8v3ControllerResources",
            "format": ""
        },
        {
            "name": "sinceLastHeartbeat",
            "baseName": "since_last_heartbeat",
            "type": "string",
            "format": "int64"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "tenantId",
            "baseName": "tenant_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "tenantUuid",
            "baseName": "tenant_uuid",
            "type": "string",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "Resourcecontrollerk8v3Version",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Resourcecontrollerk8v3Controller.attributeTypeMap;
    }

    public constructor() {
    }
}

