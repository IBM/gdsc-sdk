/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Templatesv3Integration } from '../models/Templatesv3Integration';
import { Templatesv3MIMEType } from '../models/Templatesv3MIMEType';
import { Templatesv3Origin } from '../models/Templatesv3Origin';
import { Templatesv3SimpleRecipient } from '../models/Templatesv3SimpleRecipient';
import { HttpFile } from '../http/http';

/**
* The contents of a specific template.
*/
export class Templatesv3Template {
    /**
    * Content of the message with field substitution sequences.
    */
    'content'?: string;
    'defaultRecipient'?: Templatesv3SimpleRecipient;
    'integration'?: Templatesv3Integration;
    /**
    * Integration ID specifies the specific integration this template is associated.
    */
    'integrationId'?: string;
    /**
    * Name associated with the integration; optionally added based on need and performance.
    */
    'integrationName'?: string;
    /**
    * Specifies the default template for the associated data source.
    */
    'isDefault'?: boolean;
    /**
    * Enabled defines the set of templates that are actively used.
    */
    'isEnabled'?: boolean;
    'mimeType'?: Templatesv3MIMEType;
    /**
    * User friendly name associated with the template.
    */
    'name'?: string;
    /**
    * Order by most significant origin.
    */
    'order'?: number;
    'origin'?: Templatesv3Origin;
    /**
    * User defined tags that can be used to filter templates.
    */
    'tags'?: Array<string>;
    /**
    * Template unique ID.
    */
    'templateId'?: string;
    /**
    * Title is a brief summary of the data; may be empty based on integration type.
    */
    'title'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "content",
            "baseName": "content",
            "type": "string",
            "format": ""
        },
        {
            "name": "defaultRecipient",
            "baseName": "default_recipient",
            "type": "Templatesv3SimpleRecipient",
            "format": ""
        },
        {
            "name": "integration",
            "baseName": "integration",
            "type": "Templatesv3Integration",
            "format": ""
        },
        {
            "name": "integrationId",
            "baseName": "integration_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "integrationName",
            "baseName": "integration_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "isDefault",
            "baseName": "is_default",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isEnabled",
            "baseName": "is_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "mimeType",
            "baseName": "mime_type",
            "type": "Templatesv3MIMEType",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "Templatesv3Origin",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "templateId",
            "baseName": "template_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Templatesv3Template.attributeTypeMap;
    }

    public constructor() {
    }
}



