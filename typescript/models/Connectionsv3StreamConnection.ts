/**
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Connectionsv3Status } from '../models/Connectionsv3Status';
import { HttpFile } from '../http/http';

/**
* Structure for AWS/Azure Connection.
*/
export class Connectionsv3StreamConnection {
    /**
    * Account id.
    */
    'accountId'?: string;
    /**
    * Account name.
    */
    'accountName'?: string;
    /**
    * Cluster resource ID.
    */
    'clusterResourceId'?: string;
    /**
    * Consumer group name.
    */
    'consumerGroupName'?: string;
    /**
    * Database DNS endpoint OR Database host.
    */
    'dbDnsEndpoint'?: string;
    /**
    * Database name.
    */
    'dbName'?: string;
    /**
    * Database type.
    */
    'dbType'?: string;
    /**
    * Event Hub name || Stream name.
    */
    'name'?: string;
    /**
    * Optional: Namespace provided if the coonnection type is Azure.
    */
    'namespace'?: string;
    /**
    * Database credential password.
    */
    'password'?: string;
    /**
    * Port.
    */
    'port'?: string;
    /**
    * Optional: the provider provided if the coonnection type is Azure.
    */
    'provider'?: string;
    /**
    * Optional: the region provided if the coonnection type is AWS.
    */
    'region'?: string;
    /**
    * Connection Monitoring.
    */
    'startMonitor'?: string;
    'status'?: Connectionsv3Status;
    /**
    * If status is not OK, details what\'s wrong (non-localized).
    */
    'statusText'?: string;
    /**
    * The time stamp of status.
    */
    'statusTimestamp'?: string;
    /**
    * Optional: Storage connection string must be proovided if the coonnection type is Azure.
    */
    'storageConnectionString'?: string;
    /**
    * Database credential username.
    */
    'username'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountName",
            "baseName": "account_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "clusterResourceId",
            "baseName": "cluster_resource_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "consumerGroupName",
            "baseName": "consumer_group_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "dbDnsEndpoint",
            "baseName": "db_dns_endpoint",
            "type": "string",
            "format": ""
        },
        {
            "name": "dbName",
            "baseName": "db_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "dbType",
            "baseName": "db_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "namespace",
            "baseName": "namespace",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "string",
            "format": ""
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "string",
            "format": ""
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "startMonitor",
            "baseName": "start_monitor",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Connectionsv3Status",
            "format": ""
        },
        {
            "name": "statusText",
            "baseName": "status_text",
            "type": "string",
            "format": ""
        },
        {
            "name": "statusTimestamp",
            "baseName": "status_timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "storageConnectionString",
            "baseName": "storage_connection_string",
            "type": "string",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Connectionsv3StreamConnection.attributeTypeMap;
    }

    public constructor() {
    }
}



