/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Reportsrunnerv3DataRow } from '../models/Reportsrunnerv3DataRow';
import { Reportsrunnerv3FilterHeaders } from '../models/Reportsrunnerv3FilterHeaders';
import { Reportsv3ReportDisplayLayout } from '../models/Reportsv3ReportDisplayLayout';
import { HttpFile } from '../http/http';

/**
* RunReportResponse is the return type of RunReport API.
*/
export class Reportsrunnerv3RunReportResponse {
    /**
    * Report data.
    */
    'data'?: Array<Reportsrunnerv3DataRow>;
    /**
    * Facets.
    */
    'facets'?: Array<Reportsrunnerv3FilterHeaders>;
    /**
    * Final Result - signifies that the total count&facts are final. When set to false, it means that the results are partial, there are more records but they were not read yet, or the limit was reached.
    */
    'finalResult'?: boolean;
    /**
    * limit_reached - signifies if the query limit reached. When set to true, it means that the limit was reached and there are more records on DB which were not read yet.
    */
    'limitReached'?: boolean;
    'reportLayout'?: Reportsv3ReportDisplayLayout;
    /**
    * Total Rows Count.
    */
    'totalNumberOfRows'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "data",
            "baseName": "data",
            "type": "Array<Reportsrunnerv3DataRow>",
            "format": ""
        },
        {
            "name": "facets",
            "baseName": "facets",
            "type": "Array<Reportsrunnerv3FilterHeaders>",
            "format": ""
        },
        {
            "name": "finalResult",
            "baseName": "final_result",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "limitReached",
            "baseName": "limit_reached",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "reportLayout",
            "baseName": "report_layout",
            "type": "Reportsv3ReportDisplayLayout",
            "format": ""
        },
        {
            "name": "totalNumberOfRows",
            "baseName": "total_number_of_rows",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return Reportsrunnerv3RunReportResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

