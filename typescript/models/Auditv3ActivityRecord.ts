/**
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization\'s Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* An activity log record indicates who, what, when, where, and why something happened.  For the purposes of this service: who   = The unique user ID for the user that performed the operation. what  = The operation performed (CRUD operation or other action taken). when  = The time the operation, request, or event occurred. where = The context in which the operation was performed. why   = Details about the operation being performed. which = The unique service record id for the service that recorded the event. actor = When available track the actor that performed the activity.
*/
export class Auditv3ActivityRecord {
    /**
    * The operation peformed (CRUD or other operation) (what).
    */
    'actionTaken'?: string;
    /**
    * Further info about the request (why).
    */
    'changesMade'?: string;
    /**
    * The entity (collection name) upon which the operation was performed (where).
    */
    'context'?: string;
    /**
    * Contains a brief description of the Activity record.
    */
    'contextDescription'?: string;
    /**
    * The time the Activity record was created (when).
    */
    'creationTime'?: Date;
    /**
    * UserID if the request originated from an external context (who).
    */
    'performedBy'?: string;
    /**
    * The record ID that the operation was performed upon (which).
    */
    'uid'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "actionTaken",
            "baseName": "action_taken",
            "type": "string",
            "format": ""
        },
        {
            "name": "changesMade",
            "baseName": "changes_made",
            "type": "string",
            "format": ""
        },
        {
            "name": "context",
            "baseName": "context",
            "type": "string",
            "format": ""
        },
        {
            "name": "contextDescription",
            "baseName": "context_description",
            "type": "string",
            "format": ""
        },
        {
            "name": "creationTime",
            "baseName": "creation_time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "performedBy",
            "baseName": "performed_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "uid",
            "baseName": "uid",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Auditv3ActivityRecord.attributeTypeMap;
    }

    public constructor() {
    }
}

