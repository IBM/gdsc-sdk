/*
 * IBM Guardium Data Security Center
 *
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * API version: 3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

// Part of GetConnectors response. Contains details about a Universal connector connection configuration.
type Universalconnectormanagerv3ConnectorSummary struct {
	// Connector configuration parameters. A union of Input and Filter parameters.
	CombinedConfiguration string `json:"combined_configuration,omitempty"`
	// Connector configuration parameters strings, for UI.
	CombinedConfigurationStrings string `json:"combined_configuration_strings,omitempty"`
	// ID of connector.
	ConnectorName string `json:"connector_name,omitempty"`
	// The developer who developed the manifest.
	Developer string `json:"developer,omitempty"`
	FilterPlugin *Universalconnectormanagerv3PluginDefinition `json:"filter_plugin,omitempty"`
	// ID of filter plugin.
	FilterPluginName string `json:"filter_plugin_name,omitempty"`
	InputPlugin *Universalconnectormanagerv3PluginDefinition `json:"input_plugin,omitempty"`
	// ID of input plugin.
	InputPluginName string `json:"input_plugin_name,omitempty"`
	// Supported data source types, according to the Filter plugin.
	SupportedDatasources []Universalconnectormanagerv3DatasourceType `json:"supported_datasources,omitempty"`
	// Array of supported platforms/environments. Examples: \"on-premise\", \"AWS\", \"Azure\", \"GCP\".
	SupportedPlatforms []string `json:"supported_platforms,omitempty"`
	// Date connector manifest was uploaded.
	UploadDate time.Time `json:"upload_date,omitempty"`
	// User who uploaded the manifest.
	UploadUser string `json:"upload_user,omitempty"`
}
