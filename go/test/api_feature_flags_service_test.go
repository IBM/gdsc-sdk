/*
IBM Guardium Data Security Center

Testing FeatureFlagsServiceAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package guardiumsdkgo

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_guardiumsdkgo_FeatureFlagsServiceAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FeatureFlagsServiceAPIService FeatureFlagsServiceDeleteFeatureFlagOverrides", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FeatureFlagsServiceAPI.FeatureFlagsServiceDeleteFeatureFlagOverrides(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagsServiceAPIService FeatureFlagsServiceGetFeatureFlagOverrides", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FeatureFlagsServiceAPI.FeatureFlagsServiceGetFeatureFlagOverrides(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagsServiceAPIService FeatureFlagsServiceGetFeatureFlags", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FeatureFlagsServiceAPI.FeatureFlagsServiceGetFeatureFlags(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagsServiceAPIService FeatureFlagsServiceUpdateFeatureFlagOverrides", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FeatureFlagsServiceAPI.FeatureFlagsServiceUpdateFeatureFlagOverrides(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
