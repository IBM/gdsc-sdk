/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Auditv3GetActivityRecordsResponse;
import org.openapitools.client.model.Auditv3PutActivityRecordRequest;
import org.openapitools.client.model.Auditv3PutActivityRecordResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuditServiceApi
 */
@Disabled
public class AuditServiceApiTest {

    private final AuditServiceApi api = new AuditServiceApi();

    /**
     * Summary: Get activity records Description: Return activity records that match the arguments passed in the request.  Multiple values can be passed to the (UID, Context, ActionTaken, PerformedBy) fields by supplying a  comma-separated list to the corresponding fields in the request.  For instance to check for  multiple Contexts set the field to \&quot;op1, op2, op3\&quot;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditServiceGetActivityRecordsTest() throws ApiException {
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        String uid = null;
        String actionTaken = null;
        String context = null;
        String changesMade = null;
        String performedBy = null;
        String contextDescription = null;
        String query = null;
        Long offset = null;
        Long limit = null;
        Boolean filter = null;
        Auditv3GetActivityRecordsResponse response = api.auditServiceGetActivityRecords(startTime, endTime, uid, actionTaken, context, changesMade, performedBy, contextDescription, query, offset, limit, filter);
        // TODO: test validations
    }

    /**
     * Summary: Put download activity record Description: Create an activity log record with the arguments passed in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditServicePutDownloadActivityRecordTest() throws ApiException {
        Auditv3PutActivityRecordRequest auditv3PutActivityRecordRequest = null;
        Auditv3PutActivityRecordResponse response = api.auditServicePutDownloadActivityRecord(auditv3PutActivityRecordRequest);
        // TODO: test validations
    }

}
