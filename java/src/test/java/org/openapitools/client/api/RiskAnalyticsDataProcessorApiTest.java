/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Riskanalyticsdataprocessorv3GetRiskContextResponse;
import org.openapitools.client.model.Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse;
import org.openapitools.client.model.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RiskAnalyticsDataProcessorApi
 */
@Disabled
public class RiskAnalyticsDataProcessorApiTest {

    private final RiskAnalyticsDataProcessorApi api = new RiskAnalyticsDataProcessorApi();

    /**
     * Summary: Get Risk Event Context Description: Retrieve the context of the given risk ID. This context will be used for LLM interactions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void riskAnalyticsDataProcessorGetRiskContextTest() throws ApiException {
        Integer riskId = null;
        String timezone = null;
        Riskanalyticsdataprocessorv3GetRiskContextResponse response = api.riskAnalyticsDataProcessorGetRiskContext(riskId, timezone);
        // TODO: test validations
    }

    /**
     * Summary: Get Risk Event Predefined Questions Description: Retrieve the Predefined Questions of the given risk ID. This Predefined Questions will be used quick actions recommendations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void riskAnalyticsDataProcessorGetRiskPredefinedQuestionsTest() throws ApiException {
        Integer riskId = null;
        Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse response = api.riskAnalyticsDataProcessorGetRiskPredefinedQuestions(riskId);
        // TODO: test validations
    }

}
