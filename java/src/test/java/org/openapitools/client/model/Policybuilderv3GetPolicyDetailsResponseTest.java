/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Policybuilderv3ControlFlow;
import org.openapitools.client.model.Policybuilderv3ImportIssue;
import org.openapitools.client.model.Policybuilderv3ImportState;
import org.openapitools.client.model.Policybuilderv3Rule;
import org.openapitools.client.model.Policybuilderv3StatusResponseBase;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Policybuilderv3GetPolicyDetailsResponse
 */
public class Policybuilderv3GetPolicyDetailsResponseTest {
    private final Policybuilderv3GetPolicyDetailsResponse model = new Policybuilderv3GetPolicyDetailsResponse();

    /**
     * Model tests for Policybuilderv3GetPolicyDetailsResponse
     */
    @Test
    public void testPolicybuilderv3GetPolicyDetailsResponse() {
        // TODO: test Policybuilderv3GetPolicyDetailsResponse
    }

    /**
     * Test the property 'activationStatus'
     */
    @Test
    public void activationStatusTest() {
        // TODO: test activationStatus
    }

    /**
     * Test the property 'controlFlow'
     */
    @Test
    public void controlFlowTest() {
        // TODO: test controlFlow
    }

    /**
     * Test the property 'installedFlag'
     */
    @Test
    public void installedFlagTest() {
        // TODO: test installedFlag
    }

    /**
     * Test the property 'policyImportIssue'
     */
    @Test
    public void policyImportIssueTest() {
        // TODO: test policyImportIssue
    }

    /**
     * Test the property 'policyImportState'
     */
    @Test
    public void policyImportStateTest() {
        // TODO: test policyImportState
    }

    /**
     * Test the property 'policyName'
     */
    @Test
    public void policyNameTest() {
        // TODO: test policyName
    }

    /**
     * Test the property 'rules'
     */
    @Test
    public void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
