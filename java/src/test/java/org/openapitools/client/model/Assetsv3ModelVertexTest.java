/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Assetsv3ConnectionEdge;
import org.openapitools.client.model.Assetsv3CustomProperty;
import org.openapitools.client.model.Assetsv3Level;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3ModelVertex
 */
public class Assetsv3ModelVertexTest {
    private final Assetsv3ModelVertex model = new Assetsv3ModelVertex();

    /**
     * Model tests for Assetsv3ModelVertex
     */
    @Test
    public void testAssetsv3ModelVertex() {
        // TODO: test Assetsv3ModelVertex
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'extendedProperties'
     */
    @Test
    public void extendedPropertiesTest() {
        // TODO: test extendedProperties
    }

    /**
     * Test the property 'hasTrainingData'
     */
    @Test
    public void hasTrainingDataTest() {
        // TODO: test hasTrainingData
    }

    /**
     * Test the property 'lastTrained'
     */
    @Test
    public void lastTrainedTest() {
        // TODO: test lastTrained
    }

    /**
     * Test the property 'modelApplication'
     */
    @Test
    public void modelApplicationTest() {
        // TODO: test modelApplication
    }

    /**
     * Test the property 'modelDeployment'
     */
    @Test
    public void modelDeploymentTest() {
        // TODO: test modelDeployment
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'modelName'
     */
    @Test
    public void modelNameTest() {
        // TODO: test modelName
    }

    /**
     * Test the property 'modelResources'
     */
    @Test
    public void modelResourcesTest() {
        // TODO: test modelResources
    }

    /**
     * Test the property 'modelSubType'
     */
    @Test
    public void modelSubTypeTest() {
        // TODO: test modelSubType
    }

    /**
     * Test the property 'modelType'
     */
    @Test
    public void modelTypeTest() {
        // TODO: test modelType
    }

    /**
     * Test the property 'publisher'
     */
    @Test
    public void publisherTest() {
        // TODO: test publisher
    }

    /**
     * Test the property 'resolutionKey'
     */
    @Test
    public void resolutionKeyTest() {
        // TODO: test resolutionKey
    }

    /**
     * Test the property 'riskLevel'
     */
    @Test
    public void riskLevelTest() {
        // TODO: test riskLevel
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
