/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Assetsv3ConnectionEdge;
import org.openapitools.client.model.Assetsv3CustomProperty;
import org.openapitools.client.model.Assetsv3Level;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3StorageVertex
 */
public class Assetsv3StorageVertexTest {
    private final Assetsv3StorageVertex model = new Assetsv3StorageVertex();

    /**
     * Model tests for Assetsv3StorageVertex
     */
    @Test
    public void testAssetsv3StorageVertex() {
        // TODO: test Assetsv3StorageVertex
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'dataCenter'
     */
    @Test
    public void dataCenterTest() {
        // TODO: test dataCenter
    }

    /**
     * Test the property 'dns'
     */
    @Test
    public void dnsTest() {
        // TODO: test dns
    }

    /**
     * Test the property 'extendedProperties'
     */
    @Test
    public void extendedPropertiesTest() {
        // TODO: test extendedProperties
    }

    /**
     * Test the property 'folderPath'
     */
    @Test
    public void folderPathTest() {
        // TODO: test folderPath
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'resolutionKey'
     */
    @Test
    public void resolutionKeyTest() {
        // TODO: test resolutionKey
    }

    /**
     * Test the property 'riskLevel'
     */
    @Test
    public void riskLevelTest() {
        // TODO: test riskLevel
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'storageAccount'
     */
    @Test
    public void storageAccountTest() {
        // TODO: test storageAccount
    }

    /**
     * Test the property 'storageHost'
     */
    @Test
    public void storageHostTest() {
        // TODO: test storageHost
    }

    /**
     * Test the property 'storageId'
     */
    @Test
    public void storageIdTest() {
        // TODO: test storageId
    }

    /**
     * Test the property 'storageIp'
     */
    @Test
    public void storageIpTest() {
        // TODO: test storageIp
    }

    /**
     * Test the property 'storageName'
     */
    @Test
    public void storageNameTest() {
        // TODO: test storageName
    }

    /**
     * Test the property 'storageResources'
     */
    @Test
    public void storageResourcesTest() {
        // TODO: test storageResources
    }

    /**
     * Test the property 'storageSubType'
     */
    @Test
    public void storageSubTypeTest() {
        // TODO: test storageSubType
    }

    /**
     * Test the property 'storageSubscription'
     */
    @Test
    public void storageSubscriptionTest() {
        // TODO: test storageSubscription
    }

    /**
     * Test the property 'storageType'
     */
    @Test
    public void storageTypeTest() {
        // TODO: test storageType
    }

}
