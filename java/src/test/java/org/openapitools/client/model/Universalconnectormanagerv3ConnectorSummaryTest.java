/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Universalconnectormanagerv3DatasourceType;
import org.openapitools.client.model.Universalconnectormanagerv3PluginDefinition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Universalconnectormanagerv3ConnectorSummary
 */
public class Universalconnectormanagerv3ConnectorSummaryTest {
    private final Universalconnectormanagerv3ConnectorSummary model = new Universalconnectormanagerv3ConnectorSummary();

    /**
     * Model tests for Universalconnectormanagerv3ConnectorSummary
     */
    @Test
    public void testUniversalconnectormanagerv3ConnectorSummary() {
        // TODO: test Universalconnectormanagerv3ConnectorSummary
    }

    /**
     * Test the property 'combinedConfiguration'
     */
    @Test
    public void combinedConfigurationTest() {
        // TODO: test combinedConfiguration
    }

    /**
     * Test the property 'combinedConfigurationStrings'
     */
    @Test
    public void combinedConfigurationStringsTest() {
        // TODO: test combinedConfigurationStrings
    }

    /**
     * Test the property 'connectorName'
     */
    @Test
    public void connectorNameTest() {
        // TODO: test connectorName
    }

    /**
     * Test the property 'developer'
     */
    @Test
    public void developerTest() {
        // TODO: test developer
    }

    /**
     * Test the property 'filterPlugin'
     */
    @Test
    public void filterPluginTest() {
        // TODO: test filterPlugin
    }

    /**
     * Test the property 'filterPluginName'
     */
    @Test
    public void filterPluginNameTest() {
        // TODO: test filterPluginName
    }

    /**
     * Test the property 'inputPlugin'
     */
    @Test
    public void inputPluginTest() {
        // TODO: test inputPlugin
    }

    /**
     * Test the property 'inputPluginName'
     */
    @Test
    public void inputPluginNameTest() {
        // TODO: test inputPluginName
    }

    /**
     * Test the property 'supportedDatasources'
     */
    @Test
    public void supportedDatasourcesTest() {
        // TODO: test supportedDatasources
    }

    /**
     * Test the property 'supportedPlatforms'
     */
    @Test
    public void supportedPlatformsTest() {
        // TODO: test supportedPlatforms
    }

    /**
     * Test the property 'uploadDate'
     */
    @Test
    public void uploadDateTest() {
        // TODO: test uploadDate
    }

    /**
     * Test the property 'uploadUser'
     */
    @Test
    public void uploadUserTest() {
        // TODO: test uploadUser
    }

}
