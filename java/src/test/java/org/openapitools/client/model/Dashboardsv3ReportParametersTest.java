/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Dashboardsv3TimeRange;
import org.openapitools.client.model.Reportsv3ReportTag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dashboardsv3ReportParameters
 */
public class Dashboardsv3ReportParametersTest {
    private final Dashboardsv3ReportParameters model = new Dashboardsv3ReportParameters();

    /**
     * Model tests for Dashboardsv3ReportParameters
     */
    @Test
    public void testDashboardsv3ReportParameters() {
        // TODO: test Dashboardsv3ReportParameters
    }

    /**
     * Test the property 'end'
     */
    @Test
    public void endTest() {
        // TODO: test end
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'localTimeFilter'
     */
    @Test
    public void localTimeFilterTest() {
        // TODO: test localTimeFilter
    }

    /**
     * Test the property 'menuItem'
     */
    @Test
    public void menuItemTest() {
        // TODO: test menuItem
    }

    /**
     * Test the property 'override'
     */
    @Test
    public void overrideTest() {
        // TODO: test override
    }

    /**
     * Test the property 'range'
     */
    @Test
    public void rangeTest() {
        // TODO: test range
    }

    /**
     * Test the property 'regulation'
     */
    @Test
    public void regulationTest() {
        // TODO: test regulation
    }

    /**
     * Test the property 'start'
     */
    @Test
    public void startTest() {
        // TODO: test start
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

}
