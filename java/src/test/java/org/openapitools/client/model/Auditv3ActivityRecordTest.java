/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Auditv3ActivityRecord
 */
public class Auditv3ActivityRecordTest {
    private final Auditv3ActivityRecord model = new Auditv3ActivityRecord();

    /**
     * Model tests for Auditv3ActivityRecord
     */
    @Test
    public void testAuditv3ActivityRecord() {
        // TODO: test Auditv3ActivityRecord
    }

    /**
     * Test the property 'actionTaken'
     */
    @Test
    public void actionTakenTest() {
        // TODO: test actionTaken
    }

    /**
     * Test the property 'changesMade'
     */
    @Test
    public void changesMadeTest() {
        // TODO: test changesMade
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'contextDescription'
     */
    @Test
    public void contextDescriptionTest() {
        // TODO: test contextDescription
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'performedBy'
     */
    @Test
    public void performedByTest() {
        // TODO: test performedBy
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

}
