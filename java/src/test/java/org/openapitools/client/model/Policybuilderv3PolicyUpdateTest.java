/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Policybuilderv3ControlFlow;
import org.openapitools.client.model.Policybuilderv3PolicyType;
import org.openapitools.client.model.Policybuilderv3Rule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Policybuilderv3PolicyUpdate
 */
public class Policybuilderv3PolicyUpdateTest {
    private final Policybuilderv3PolicyUpdate model = new Policybuilderv3PolicyUpdate();

    /**
     * Model tests for Policybuilderv3PolicyUpdate
     */
    @Test
    public void testPolicybuilderv3PolicyUpdate() {
        // TODO: test Policybuilderv3PolicyUpdate
    }

    /**
     * Test the property 'activationStatus'
     */
    @Test
    public void activationStatusTest() {
        // TODO: test activationStatus
    }

    /**
     * Test the property 'controlFlow'
     */
    @Test
    public void controlFlowTest() {
        // TODO: test controlFlow
    }

    /**
     * Test the property 'deletedRuleIds'
     */
    @Test
    public void deletedRuleIdsTest() {
        // TODO: test deletedRuleIds
    }

    /**
     * Test the property 'installedFlag'
     */
    @Test
    public void installedFlagTest() {
        // TODO: test installedFlag
    }

    /**
     * Test the property 'installedOrder'
     */
    @Test
    public void installedOrderTest() {
        // TODO: test installedOrder
    }

    /**
     * Test the property 'installedTimestamp'
     */
    @Test
    public void installedTimestampTest() {
        // TODO: test installedTimestamp
    }

    /**
     * Test the property 'lastEditedTimestamp'
     */
    @Test
    public void lastEditedTimestampTest() {
        // TODO: test lastEditedTimestamp
    }

    /**
     * Test the property 'logFlat'
     */
    @Test
    public void logFlatTest() {
        // TODO: test logFlat
    }

    /**
     * Test the property 'policyId'
     */
    @Test
    public void policyIdTest() {
        // TODO: test policyId
    }

    /**
     * Test the property 'policyName'
     */
    @Test
    public void policyNameTest() {
        // TODO: test policyName
    }

    /**
     * Test the property 'policyType'
     */
    @Test
    public void policyTypeTest() {
        // TODO: test policyType
    }

    /**
     * Test the property 'rules'
     */
    @Test
    public void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'rulesOnFlat'
     */
    @Test
    public void rulesOnFlatTest() {
        // TODO: test rulesOnFlat
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
