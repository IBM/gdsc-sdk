/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Riskanalyticsenginev3AdditionalInfo;
import org.openapitools.client.model.Riskanalyticsenginev3LeadType;
import org.openapitools.client.model.Riskanalyticsenginev3Pivot;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticsenginev3Lead
 */
public class Riskanalyticsenginev3LeadTest {
    private final Riskanalyticsenginev3Lead model = new Riskanalyticsenginev3Lead();

    /**
     * Model tests for Riskanalyticsenginev3Lead
     */
    @Test
    public void testRiskanalyticsenginev3Lead() {
        // TODO: test Riskanalyticsenginev3Lead
    }

    /**
     * Test the property 'count'
     */
    @Test
    public void countTest() {
        // TODO: test count
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'info'
     */
    @Test
    public void infoTest() {
        // TODO: test info
    }

    /**
     * Test the property 'isObservation'
     */
    @Test
    public void isObservationTest() {
        // TODO: test isObservation
    }

    /**
     * Test the property 'leadKey'
     */
    @Test
    public void leadKeyTest() {
        // TODO: test leadKey
    }

    /**
     * Test the property 'pivot'
     */
    @Test
    public void pivotTest() {
        // TODO: test pivot
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'severity'
     */
    @Test
    public void severityTest() {
        // TODO: test severity
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
