/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Riskanalyticscontrollerv3EmergingRiskDetails;
import org.openapitools.client.model.Riskanalyticscontrollerv3Observation;
import org.openapitools.client.model.Riskanalyticscontrollerv3RiskEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticscontrollerv3GetRiskEventDetailsResponse
 */
public class Riskanalyticscontrollerv3GetRiskEventDetailsResponseTest {
    private final Riskanalyticscontrollerv3GetRiskEventDetailsResponse model = new Riskanalyticscontrollerv3GetRiskEventDetailsResponse();

    /**
     * Model tests for Riskanalyticscontrollerv3GetRiskEventDetailsResponse
     */
    @Test
    public void testRiskanalyticscontrollerv3GetRiskEventDetailsResponse() {
        // TODO: test Riskanalyticscontrollerv3GetRiskEventDetailsResponse
    }

    /**
     * Test the property 'emergingRiskDetails'
     */
    @Test
    public void emergingRiskDetailsTest() {
        // TODO: test emergingRiskDetails
    }

    /**
     * Test the property 'observations'
     */
    @Test
    public void observationsTest() {
        // TODO: test observations
    }

    /**
     * Test the property 'riskEvent'
     */
    @Test
    public void riskEventTest() {
        // TODO: test riskEvent
    }

}
