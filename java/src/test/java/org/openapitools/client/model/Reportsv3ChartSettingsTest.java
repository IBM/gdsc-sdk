/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Reportsv3ChartType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3ChartSettings
 */
public class Reportsv3ChartSettingsTest {
    private final Reportsv3ChartSettings model = new Reportsv3ChartSettings();

    /**
     * Model tests for Reportsv3ChartSettings
     */
    @Test
    public void testReportsv3ChartSettings() {
        // TODO: test Reportsv3ChartSettings
    }

    /**
     * Test the property 'chartId'
     */
    @Test
    public void chartIdTest() {
        // TODO: test chartId
    }

    /**
     * Test the property 'chartTitle'
     */
    @Test
    public void chartTitleTest() {
        // TODO: test chartTitle
    }

    /**
     * Test the property 'chartType'
     */
    @Test
    public void chartTypeTest() {
        // TODO: test chartType
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'creatorUserId'
     */
    @Test
    public void creatorUserIdTest() {
        // TODO: test creatorUserId
    }

    /**
     * Test the property 'datasetHeaderId'
     */
    @Test
    public void datasetHeaderIdTest() {
        // TODO: test datasetHeaderId
    }

    /**
     * Test the property 'datasetMaxValues'
     */
    @Test
    public void datasetMaxValuesTest() {
        // TODO: test datasetMaxValues
    }

    /**
     * Test the property 'defaultChartExpanded'
     */
    @Test
    public void defaultChartExpandedTest() {
        // TODO: test defaultChartExpanded
    }

    /**
     * Test the property 'isDefaultChart'
     */
    @Test
    public void isDefaultChartTest() {
        // TODO: test isDefaultChart
    }

    /**
     * Test the property 'isPredefined'
     */
    @Test
    public void isPredefinedTest() {
        // TODO: test isPredefined
    }

    /**
     * Test the property 'refreshRate'
     */
    @Test
    public void refreshRateTest() {
        // TODO: test refreshRate
    }

    /**
     * Test the property 'reportId'
     */
    @Test
    public void reportIdTest() {
        // TODO: test reportId
    }

    /**
     * Test the property 'xaxisHeaderId'
     */
    @Test
    public void xaxisHeaderIdTest() {
        // TODO: test xaxisHeaderId
    }

    /**
     * Test the property 'xaxisMaxValues'
     */
    @Test
    public void xaxisMaxValuesTest() {
        // TODO: test xaxisMaxValues
    }

    /**
     * Test the property 'yaxisHeaderId'
     */
    @Test
    public void yaxisHeaderIdTest() {
        // TODO: test yaxisHeaderId
    }

}
