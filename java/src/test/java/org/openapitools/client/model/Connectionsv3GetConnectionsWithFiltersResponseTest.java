/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Connectionsv3Connector;
import org.openapitools.client.model.Connectionsv3ConnectorFilterHeader;
import org.openapitools.client.model.Connectionsv3ConnectorSettingStat;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Connectionsv3GetConnectionsWithFiltersResponse
 */
public class Connectionsv3GetConnectionsWithFiltersResponseTest {
    private final Connectionsv3GetConnectionsWithFiltersResponse model = new Connectionsv3GetConnectionsWithFiltersResponse();

    /**
     * Model tests for Connectionsv3GetConnectionsWithFiltersResponse
     */
    @Test
    public void testConnectionsv3GetConnectionsWithFiltersResponse() {
        // TODO: test Connectionsv3GetConnectionsWithFiltersResponse
    }

    /**
     * Test the property 'connectors'
     */
    @Test
    public void connectorsTest() {
        // TODO: test connectors
    }

    /**
     * Test the property 'facets'
     */
    @Test
    public void facetsTest() {
        // TODO: test facets
    }

    /**
     * Test the property 'presetStats'
     */
    @Test
    public void presetStatsTest() {
        // TODO: test presetStats
    }

    /**
     * Test the property 'totalConnectors'
     */
    @Test
    public void totalConnectorsTest() {
        // TODO: test totalConnectors
    }

}
