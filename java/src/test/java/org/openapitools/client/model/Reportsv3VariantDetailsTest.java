/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Reportsv3VariantRule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3VariantDetails
 */
public class Reportsv3VariantDetailsTest {
    private final Reportsv3VariantDetails model = new Reportsv3VariantDetails();

    /**
     * Model tests for Reportsv3VariantDetails
     */
    @Test
    public void testReportsv3VariantDetails() {
        // TODO: test Reportsv3VariantDetails
    }

    /**
     * Test the property 'headerId'
     */
    @Test
    public void headerIdTest() {
        // TODO: test headerId
    }

    /**
     * Test the property 'lastRun'
     */
    @Test
    public void lastRunTest() {
        // TODO: test lastRun
    }

    /**
     * Test the property 'lastRunError'
     */
    @Test
    public void lastRunErrorTest() {
        // TODO: test lastRunError
    }

    /**
     * Test the property 'rules'
     */
    @Test
    public void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'totalCount'
     */
    @Test
    public void totalCountTest() {
        // TODO: test totalCount
    }

    /**
     * Test the property 'variantId'
     */
    @Test
    public void variantIdTest() {
        // TODO: test variantId
    }

    /**
     * Test the property 'variantName'
     */
    @Test
    public void variantNameTest() {
        // TODO: test variantName
    }

    /**
     * Test the property 'variantTable'
     */
    @Test
    public void variantTableTest() {
        // TODO: test variantTable
    }

}
