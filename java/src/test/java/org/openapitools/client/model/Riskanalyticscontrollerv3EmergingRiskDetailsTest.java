/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticscontrollerv3EmergingRiskDetails
 */
public class Riskanalyticscontrollerv3EmergingRiskDetailsTest {
    private final Riskanalyticscontrollerv3EmergingRiskDetails model = new Riskanalyticscontrollerv3EmergingRiskDetails();

    /**
     * Model tests for Riskanalyticscontrollerv3EmergingRiskDetails
     */
    @Test
    public void testRiskanalyticscontrollerv3EmergingRiskDetails() {
        // TODO: test Riskanalyticscontrollerv3EmergingRiskDetails
    }

    /**
     * Test the property 'endMaxTime'
     */
    @Test
    public void endMaxTimeTest() {
        // TODO: test endMaxTime
    }

    /**
     * Test the property 'endMaxValue'
     */
    @Test
    public void endMaxValueTest() {
        // TODO: test endMaxValue
    }

    /**
     * Test the property 'peakMaxTime'
     */
    @Test
    public void peakMaxTimeTest() {
        // TODO: test peakMaxTime
    }

    /**
     * Test the property 'peakMaxValue'
     */
    @Test
    public void peakMaxValueTest() {
        // TODO: test peakMaxValue
    }

    /**
     * Test the property 'previousMaxValue'
     */
    @Test
    public void previousMaxValueTest() {
        // TODO: test previousMaxValue
    }

    /**
     * Test the property 'riskFeatures'
     */
    @Test
    public void riskFeaturesTest() {
        // TODO: test riskFeatures
    }

    /**
     * Test the property 'startMaxTime'
     */
    @Test
    public void startMaxTimeTest() {
        // TODO: test startMaxTime
    }

    /**
     * Test the property 'startMaxValue'
     */
    @Test
    public void startMaxValueTest() {
        // TODO: test startMaxValue
    }

}
