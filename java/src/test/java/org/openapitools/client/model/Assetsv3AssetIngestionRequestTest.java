/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Assetsv3AccountVertex;
import org.openapitools.client.model.Assetsv3ApplicationVertex;
import org.openapitools.client.model.Assetsv3DatabaseVertex;
import org.openapitools.client.model.Assetsv3DeploymentVertex;
import org.openapitools.client.model.Assetsv3EndpointVertex;
import org.openapitools.client.model.Assetsv3HostVertex;
import org.openapitools.client.model.Assetsv3IPVertex;
import org.openapitools.client.model.Assetsv3ModelVertex;
import org.openapitools.client.model.Assetsv3PortVertex;
import org.openapitools.client.model.Assetsv3ResourcesVertex;
import org.openapitools.client.model.Assetsv3StorageVertex;
import org.openapitools.client.model.Assetsv3SubscriptionVertex;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3AssetIngestionRequest
 */
public class Assetsv3AssetIngestionRequestTest {
    private final Assetsv3AssetIngestionRequest model = new Assetsv3AssetIngestionRequest();

    /**
     * Model tests for Assetsv3AssetIngestionRequest
     */
    @Test
    public void testAssetsv3AssetIngestionRequest() {
        // TODO: test Assetsv3AssetIngestionRequest
    }

    /**
     * Test the property 'accounts'
     */
    @Test
    public void accountsTest() {
        // TODO: test accounts
    }

    /**
     * Test the property 'applications'
     */
    @Test
    public void applicationsTest() {
        // TODO: test applications
    }

    /**
     * Test the property 'databases'
     */
    @Test
    public void databasesTest() {
        // TODO: test databases
    }

    /**
     * Test the property 'deployments'
     */
    @Test
    public void deploymentsTest() {
        // TODO: test deployments
    }

    /**
     * Test the property 'endpoints'
     */
    @Test
    public void endpointsTest() {
        // TODO: test endpoints
    }

    /**
     * Test the property 'hosts'
     */
    @Test
    public void hostsTest() {
        // TODO: test hosts
    }

    /**
     * Test the property 'ips'
     */
    @Test
    public void ipsTest() {
        // TODO: test ips
    }

    /**
     * Test the property 'models'
     */
    @Test
    public void modelsTest() {
        // TODO: test models
    }

    /**
     * Test the property 'origin'
     */
    @Test
    public void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'ports'
     */
    @Test
    public void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'storages'
     */
    @Test
    public void storagesTest() {
        // TODO: test storages
    }

    /**
     * Test the property 'subscriptions'
     */
    @Test
    public void subscriptionsTest() {
        // TODO: test subscriptions
    }

}
