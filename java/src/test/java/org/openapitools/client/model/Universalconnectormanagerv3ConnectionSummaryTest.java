/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Universalconnectormanagerv3ConnectionRoute;
import org.openapitools.client.model.Universalconnectormanagerv3ConnectionStatus;
import org.openapitools.client.model.Universalconnectormanagerv3User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Universalconnectormanagerv3ConnectionSummary
 */
public class Universalconnectormanagerv3ConnectionSummaryTest {
    private final Universalconnectormanagerv3ConnectionSummary model = new Universalconnectormanagerv3ConnectionSummary();

    /**
     * Model tests for Universalconnectormanagerv3ConnectionSummary
     */
    @Test
    public void testUniversalconnectormanagerv3ConnectionSummary() {
        // TODO: test Universalconnectormanagerv3ConnectionSummary
    }

    /**
     * Test the property 'connectionAlias'
     */
    @Test
    public void connectionAliasTest() {
        // TODO: test connectionAlias
    }

    /**
     * Test the property 'connectionChanged'
     */
    @Test
    public void connectionChangedTest() {
        // TODO: test connectionChanged
    }

    /**
     * Test the property 'connectionConfigId'
     */
    @Test
    public void connectionConfigIdTest() {
        // TODO: test connectionConfigId
    }

    /**
     * Test the property 'connectionConfigurationNote'
     */
    @Test
    public void connectionConfigurationNoteTest() {
        // TODO: test connectionConfigurationNote
    }

    /**
     * Test the property 'connectionFilterAlias'
     */
    @Test
    public void connectionFilterAliasTest() {
        // TODO: test connectionFilterAlias
    }

    /**
     * Test the property 'connectionId'
     */
    @Test
    public void connectionIdTest() {
        // TODO: test connectionId
    }

    /**
     * Test the property 'connectionInputAlias'
     */
    @Test
    public void connectionInputAliasTest() {
        // TODO: test connectionInputAlias
    }

    /**
     * Test the property 'connectionRoute'
     */
    @Test
    public void connectionRouteTest() {
        // TODO: test connectionRoute
    }

    /**
     * Test the property 'connectionStatus'
     */
    @Test
    public void connectionStatusTest() {
        // TODO: test connectionStatus
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

}
