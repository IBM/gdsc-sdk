/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Reportsv3OptionType;
import org.openapitools.client.model.Reportsv3ReportAggFilter;
import org.openapitools.client.model.Reportsv3ReportFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3ReportFilterBrackets
 */
public class Reportsv3ReportFilterBracketsTest {
    private final Reportsv3ReportFilterBrackets model = new Reportsv3ReportFilterBrackets();

    /**
     * Model tests for Reportsv3ReportFilterBrackets
     */
    @Test
    public void testReportsv3ReportFilterBrackets() {
        // TODO: test Reportsv3ReportFilterBrackets
    }

    /**
     * Test the property 'bracketsId'
     */
    @Test
    public void bracketsIdTest() {
        // TODO: test bracketsId
    }

    /**
     * Test the property 'filterName'
     */
    @Test
    public void filterNameTest() {
        // TODO: test filterName
    }

    /**
     * Test the property 'filtersArray'
     */
    @Test
    public void filtersArrayTest() {
        // TODO: test filtersArray
    }

    /**
     * Test the property 'havingArray'
     */
    @Test
    public void havingArrayTest() {
        // TODO: test havingArray
    }

    /**
     * Test the property 'isCustom'
     */
    @Test
    public void isCustomTest() {
        // TODO: test isCustom
    }

    /**
     * Test the property 'optionType'
     */
    @Test
    public void optionTypeTest() {
        // TODO: test optionType
    }

    /**
     * Test the property 'sequence'
     */
    @Test
    public void sequenceTest() {
        // TODO: test sequence
    }

}
