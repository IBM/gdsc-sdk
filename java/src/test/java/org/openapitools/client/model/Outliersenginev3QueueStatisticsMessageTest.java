/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Outliersenginev3DatasourcesCoverageStats;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Outliersenginev3QueueStatisticsMessage
 */
public class Outliersenginev3QueueStatisticsMessageTest {
    private final Outliersenginev3QueueStatisticsMessage model = new Outliersenginev3QueueStatisticsMessage();

    /**
     * Model tests for Outliersenginev3QueueStatisticsMessage
     */
    @Test
    public void testOutliersenginev3QueueStatisticsMessage() {
        // TODO: test Outliersenginev3QueueStatisticsMessage
    }

    /**
     * Test the property 'coverage1h'
     */
    @Test
    public void coverage1hTest() {
        // TODO: test coverage1h
    }

    /**
     * Test the property 'coverage24h'
     */
    @Test
    public void coverage24hTest() {
        // TODO: test coverage24h
    }

    /**
     * Test the property 'coverage72h'
     */
    @Test
    public void coverage72hTest() {
        // TODO: test coverage72h
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

    /**
     * Test the property 'tasksDone'
     */
    @Test
    public void tasksDoneTest() {
        // TODO: test tasksDone
    }

    /**
     * Test the property 'tasksInProgress'
     */
    @Test
    public void tasksInProgressTest() {
        // TODO: test tasksInProgress
    }

    /**
     * Test the property 'tasksInProgress2h'
     */
    @Test
    public void tasksInProgress2hTest() {
        // TODO: test tasksInProgress2h
    }

    /**
     * Test the property 'tasksNew'
     */
    @Test
    public void tasksNewTest() {
        // TODO: test tasksNew
    }

    /**
     * Test the property 'tasksNew2h'
     */
    @Test
    public void tasksNew2hTest() {
        // TODO: test tasksNew2h
    }

}
