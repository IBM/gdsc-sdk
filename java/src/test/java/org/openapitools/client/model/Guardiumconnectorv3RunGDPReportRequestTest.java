/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Guardiumconnectorv3GDPReportParameter;
import org.openapitools.client.model.RunGDPReportRequestSortOrder;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Guardiumconnectorv3RunGDPReportRequest
 */
public class Guardiumconnectorv3RunGDPReportRequestTest {
    private final Guardiumconnectorv3RunGDPReportRequest model = new Guardiumconnectorv3RunGDPReportRequest();

    /**
     * Model tests for Guardiumconnectorv3RunGDPReportRequest
     */
    @Test
    public void testGuardiumconnectorv3RunGDPReportRequest() {
        // TODO: test Guardiumconnectorv3RunGDPReportRequest
    }

    /**
     * Test the property 'centralManagerId'
     */
    @Test
    public void centralManagerIdTest() {
        // TODO: test centralManagerId
    }

    /**
     * Test the property 'maxFetchSize'
     */
    @Test
    public void maxFetchSizeTest() {
        // TODO: test maxFetchSize
    }

    /**
     * Test the property 'reportName'
     */
    @Test
    public void reportNameTest() {
        // TODO: test reportName
    }

    /**
     * Test the property 'reportParameters'
     */
    @Test
    public void reportParametersTest() {
        // TODO: test reportParameters
    }

    /**
     * Test the property 'sortColumn'
     */
    @Test
    public void sortColumnTest() {
        // TODO: test sortColumn
    }

    /**
     * Test the property 'sortOrder'
     */
    @Test
    public void sortOrderTest() {
        // TODO: test sortOrder
    }

    /**
     * Test the property 'startFrom'
     */
    @Test
    public void startFromTest() {
        // TODO: test startFrom
    }

}
