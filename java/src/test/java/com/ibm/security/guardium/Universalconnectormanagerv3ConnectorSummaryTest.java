/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.Universalconnectormanagerv3DatasourceType;
import com.ibm.security.guardium.Universalconnectormanagerv3PluginDefinition;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Universalconnectormanagerv3ConnectorSummary
 */
public class Universalconnectormanagerv3ConnectorSummaryTest {
    private final Universalconnectormanagerv3ConnectorSummary model = new Universalconnectormanagerv3ConnectorSummary();

    /**
     * Model tests for Universalconnectormanagerv3ConnectorSummary
     */
    @Test
    public void testUniversalconnectormanagerv3ConnectorSummary() {
        // TODO: test Universalconnectormanagerv3ConnectorSummary
    }

    /**
     * Test the property 'combinedConfiguration'
     */
    @Test
    public void combinedConfigurationTest() {
        // TODO: test combinedConfiguration
    }

    /**
     * Test the property 'combinedConfigurationStrings'
     */
    @Test
    public void combinedConfigurationStringsTest() {
        // TODO: test combinedConfigurationStrings
    }

    /**
     * Test the property 'connectorName'
     */
    @Test
    public void connectorNameTest() {
        // TODO: test connectorName
    }

    /**
     * Test the property 'developer'
     */
    @Test
    public void developerTest() {
        // TODO: test developer
    }

    /**
     * Test the property 'filterPlugin'
     */
    @Test
    public void filterPluginTest() {
        // TODO: test filterPlugin
    }

    /**
     * Test the property 'filterPluginName'
     */
    @Test
    public void filterPluginNameTest() {
        // TODO: test filterPluginName
    }

    /**
     * Test the property 'inputPlugin'
     */
    @Test
    public void inputPluginTest() {
        // TODO: test inputPlugin
    }

    /**
     * Test the property 'inputPluginName'
     */
    @Test
    public void inputPluginNameTest() {
        // TODO: test inputPluginName
    }

    /**
     * Test the property 'supportedDatasources'
     */
    @Test
    public void supportedDatasourcesTest() {
        // TODO: test supportedDatasources
    }

    /**
     * Test the property 'supportedPlatforms'
     */
    @Test
    public void supportedPlatformsTest() {
        // TODO: test supportedPlatforms
    }

    /**
     * Test the property 'uploadDate'
     */
    @Test
    public void uploadDateTest() {
        // TODO: test uploadDate
    }

    /**
     * Test the property 'uploadUser'
     */
    @Test
    public void uploadUserTest() {
        // TODO: test uploadUser
    }

}
