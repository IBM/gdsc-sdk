/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.Assetsv3ConnectionEdge;
import com.ibm.security.guardium.Assetsv3CustomProperty;
import com.ibm.security.guardium.Assetsv3Level;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3DatabaseVertex
 */
public class Assetsv3DatabaseVertexTest {
    private final Assetsv3DatabaseVertex model = new Assetsv3DatabaseVertex();

    /**
     * Model tests for Assetsv3DatabaseVertex
     */
    @Test
    public void testAssetsv3DatabaseVertex() {
        // TODO: test Assetsv3DatabaseVertex
    }

    /**
     * Test the property 'catalog'
     */
    @Test
    public void catalogTest() {
        // TODO: test catalog
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'databaseHost'
     */
    @Test
    public void databaseHostTest() {
        // TODO: test databaseHost
    }

    /**
     * Test the property 'databaseIp'
     */
    @Test
    public void databaseIpTest() {
        // TODO: test databaseIp
    }

    /**
     * Test the property 'databaseName'
     */
    @Test
    public void databaseNameTest() {
        // TODO: test databaseName
    }

    /**
     * Test the property 'databaseSubType'
     */
    @Test
    public void databaseSubTypeTest() {
        // TODO: test databaseSubType
    }

    /**
     * Test the property 'databaseSubscription'
     */
    @Test
    public void databaseSubscriptionTest() {
        // TODO: test databaseSubscription
    }

    /**
     * Test the property 'databaseType'
     */
    @Test
    public void databaseTypeTest() {
        // TODO: test databaseType
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'extendedProperties'
     */
    @Test
    public void extendedPropertiesTest() {
        // TODO: test extendedProperties
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'resolutionKey'
     */
    @Test
    public void resolutionKeyTest() {
        // TODO: test resolutionKey
    }

    /**
     * Test the property 'riskLevel'
     */
    @Test
    public void riskLevelTest() {
        // TODO: test riskLevel
    }

    /**
     * Test the property 'schemaName'
     */
    @Test
    public void schemaNameTest() {
        // TODO: test schemaName
    }

    /**
     * Test the property 'serviceName'
     */
    @Test
    public void serviceNameTest() {
        // TODO: test serviceName
    }

}
