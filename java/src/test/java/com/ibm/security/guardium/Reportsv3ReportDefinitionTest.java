/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.Reportsv3DateRange;
import com.ibm.security.guardium.Reportsv3ReportFilterBrackets;
import com.ibm.security.guardium.Reportsv3ReportHeader;
import com.ibm.security.guardium.Reportsv3ReportTag;
import com.ibm.security.guardium.Reportsv3RunTimeParameter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3ReportDefinition
 */
public class Reportsv3ReportDefinitionTest {
    private final Reportsv3ReportDefinition model = new Reportsv3ReportDefinition();

    /**
     * Model tests for Reportsv3ReportDefinition
     */
    @Test
    public void testReportsv3ReportDefinition() {
        // TODO: test Reportsv3ReportDefinition
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'creatorUserId'
     */
    @Test
    public void creatorUserIdTest() {
        // TODO: test creatorUserId
    }

    /**
     * Test the property 'dateRange'
     */
    @Test
    public void dateRangeTest() {
        // TODO: test dateRange
    }

    /**
     * Test the property 'defaultTimestampHeaderId'
     */
    @Test
    public void defaultTimestampHeaderIdTest() {
        // TODO: test defaultTimestampHeaderId
    }

    /**
     * Test the property 'isAuditable'
     */
    @Test
    public void isAuditableTest() {
        // TODO: test isAuditable
    }

    /**
     * Test the property 'isHidden'
     */
    @Test
    public void isHiddenTest() {
        // TODO: test isHidden
    }

    /**
     * Test the property 'isPinned'
     */
    @Test
    public void isPinnedTest() {
        // TODO: test isPinned
    }

    /**
     * Test the property 'isPredefined'
     */
    @Test
    public void isPredefinedTest() {
        // TODO: test isPredefined
    }

    /**
     * Test the property 'refreshRate'
     */
    @Test
    public void refreshRateTest() {
        // TODO: test refreshRate
    }

    /**
     * Test the property 'reportDescription'
     */
    @Test
    public void reportDescriptionTest() {
        // TODO: test reportDescription
    }

    /**
     * Test the property 'reportFilters'
     */
    @Test
    public void reportFiltersTest() {
        // TODO: test reportFilters
    }

    /**
     * Test the property 'reportHeaders'
     */
    @Test
    public void reportHeadersTest() {
        // TODO: test reportHeaders
    }

    /**
     * Test the property 'reportId'
     */
    @Test
    public void reportIdTest() {
        // TODO: test reportId
    }

    /**
     * Test the property 'reportName'
     */
    @Test
    public void reportNameTest() {
        // TODO: test reportName
    }

    /**
     * Test the property 'reportTags'
     */
    @Test
    public void reportTagsTest() {
        // TODO: test reportTags
    }

    /**
     * Test the property 'runtimeParameters'
     */
    @Test
    public void runtimeParametersTest() {
        // TODO: test runtimeParameters
    }

    /**
     * Test the property 'selectedTimestampHeaderId'
     */
    @Test
    public void selectedTimestampHeaderIdTest() {
        // TODO: test selectedTimestampHeaderId
    }

    /**
     * Test the property 'shouldAddCount'
     */
    @Test
    public void shouldAddCountTest() {
        // TODO: test shouldAddCount
    }

    /**
     * Test the property 'shouldAddDistinct'
     */
    @Test
    public void shouldAddDistinctTest() {
        // TODO: test shouldAddDistinct
    }

    /**
     * Test the property 'sqlLastVersion'
     */
    @Test
    public void sqlLastVersionTest() {
        // TODO: test sqlLastVersion
    }

    /**
     * Test the property 'tableJoinOptimization'
     */
    @Test
    public void tableJoinOptimizationTest() {
        // TODO: test tableJoinOptimization
    }

    /**
     * Test the property 'usePipelineQueries'
     */
    @Test
    public void usePipelineQueriesTest() {
        // TODO: test usePipelineQueries
    }

}
