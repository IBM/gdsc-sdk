/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticscontrollerv3EmergingRiskDetails
 */
public class Riskanalyticscontrollerv3EmergingRiskDetailsTest {
    private final Riskanalyticscontrollerv3EmergingRiskDetails model = new Riskanalyticscontrollerv3EmergingRiskDetails();

    /**
     * Model tests for Riskanalyticscontrollerv3EmergingRiskDetails
     */
    @Test
    public void testRiskanalyticscontrollerv3EmergingRiskDetails() {
        // TODO: test Riskanalyticscontrollerv3EmergingRiskDetails
    }

    /**
     * Test the property 'endMaxTime'
     */
    @Test
    public void endMaxTimeTest() {
        // TODO: test endMaxTime
    }

    /**
     * Test the property 'endMaxValue'
     */
    @Test
    public void endMaxValueTest() {
        // TODO: test endMaxValue
    }

    /**
     * Test the property 'peakMaxTime'
     */
    @Test
    public void peakMaxTimeTest() {
        // TODO: test peakMaxTime
    }

    /**
     * Test the property 'peakMaxValue'
     */
    @Test
    public void peakMaxValueTest() {
        // TODO: test peakMaxValue
    }

    /**
     * Test the property 'previousMaxValue'
     */
    @Test
    public void previousMaxValueTest() {
        // TODO: test previousMaxValue
    }

    /**
     * Test the property 'riskFeatures'
     */
    @Test
    public void riskFeaturesTest() {
        // TODO: test riskFeatures
    }

    /**
     * Test the property 'startMaxTime'
     */
    @Test
    public void startMaxTimeTest() {
        // TODO: test startMaxTime
    }

    /**
     * Test the property 'startMaxValue'
     */
    @Test
    public void startMaxValueTest() {
        // TODO: test startMaxValue
    }

}
