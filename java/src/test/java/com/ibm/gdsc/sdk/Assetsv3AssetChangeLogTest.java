/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Assetsv3BeforeAfter;
import com.ibm.gdsc.sdk.Assetsv3RuleLog;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3AssetChangeLog
 */
public class Assetsv3AssetChangeLogTest {
    private final Assetsv3AssetChangeLog model = new Assetsv3AssetChangeLog();

    /**
     * Model tests for Assetsv3AssetChangeLog
     */
    @Test
    public void testAssetsv3AssetChangeLog() {
        // TODO: test Assetsv3AssetChangeLog
    }

    /**
     * Test the property 'actionTaken'
     */
    @Test
    public void actionTakenTest() {
        // TODO: test actionTaken
    }

    /**
     * Test the property 'activity'
     */
    @Test
    public void activityTest() {
        // TODO: test activity
    }

    /**
     * Test the property 'after'
     */
    @Test
    public void afterTest() {
        // TODO: test after
    }

    /**
     * Test the property 'before'
     */
    @Test
    public void beforeTest() {
        // TODO: test before
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'performedBy'
     */
    @Test
    public void performedByTest() {
        // TODO: test performedBy
    }

    /**
     * Test the property 'rule'
     */
    @Test
    public void ruleTest() {
        // TODO: test rule
    }

}
