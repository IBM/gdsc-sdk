/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.SensitivitySummary;
import com.ibm.gdsc.sdk.VulnerabilitiesCriticalityCountInner;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DataStoreStats
 */
public class DataStoreStatsTest {
    private final DataStoreStats model = new DataStoreStats();

    /**
     * Model tests for DataStoreStats
     */
    @Test
    public void testDataStoreStats() {
        // TODO: test DataStoreStats
    }

    /**
     * Test the property 'resourcesCount'
     */
    @Test
    public void resourcesCountTest() {
        // TODO: test resourcesCount
    }

    /**
     * Test the property 'appFlowsCount'
     */
    @Test
    public void appFlowsCountTest() {
        // TODO: test appFlowsCount
    }

    /**
     * Test the property 'configFlowsCount'
     */
    @Test
    public void configFlowsCountTest() {
        // TODO: test configFlowsCount
    }

    /**
     * Test the property 'sensitivitiesCount'
     */
    @Test
    public void sensitivitiesCountTest() {
        // TODO: test sensitivitiesCount
    }

    /**
     * Test the property 'userAccessCount'
     */
    @Test
    public void userAccessCountTest() {
        // TODO: test userAccessCount
    }

    /**
     * Test the property 'sensitivitiesSummary'
     */
    @Test
    public void sensitivitiesSummaryTest() {
        // TODO: test sensitivitiesSummary
    }

    /**
     * Test the property 'vulnerabilitiesSummary'
     */
    @Test
    public void vulnerabilitiesSummaryTest() {
        // TODO: test vulnerabilitiesSummary
    }

}
