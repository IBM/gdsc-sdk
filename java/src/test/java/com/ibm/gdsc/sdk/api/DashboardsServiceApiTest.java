/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.api;

import com.ibm.gdsc.sdk.ApiException;
import com.ibm.gdsc.sdk.models.Dashboardsv3CreateDashboardResponse;
import com.ibm.gdsc.sdk.models.Dashboardsv3Dashboard;
import com.ibm.gdsc.sdk.models.Dashboardsv3DeleteDashboardRequest;
import com.ibm.gdsc.sdk.models.Dashboardsv3DeleteDashboardResponse;
import com.ibm.gdsc.sdk.models.Dashboardsv3GetDashboardsResponse;
import com.ibm.gdsc.sdk.models.Dashboardsv3UpdateDashboardRequest;
import com.ibm.gdsc.sdk.models.Dashboardsv3UpdateDashboardResponse;
import com.ibm.gdsc.sdk.models.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DashboardsServiceApi
 */
@Disabled
public class DashboardsServiceApiTest {

    private final DashboardsServiceApi api = new DashboardsServiceApi();

    /**
     * Summary: Create dashboard Description: Create a unique dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsServiceCreateDashboardTest() throws ApiException {
        Dashboardsv3Dashboard dashboardsv3Dashboard = null;
        Dashboardsv3CreateDashboardResponse response = api.dashboardsServiceCreateDashboard(dashboardsv3Dashboard);
        // TODO: test validations
    }

    /**
     * Summary: Delete dashboard Description: Delete a unique dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsServiceDeleteDashboardTest() throws ApiException {
        String dashboardId = null;
        Dashboardsv3DeleteDashboardRequest dashboardsv3DeleteDashboardRequest = null;
        Dashboardsv3DeleteDashboardResponse response = api.dashboardsServiceDeleteDashboard(dashboardId, dashboardsv3DeleteDashboardRequest);
        // TODO: test validations
    }

    /**
     * Summary: Get dashboards Description: Get a list of dashboards with all data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsServiceGetDashboardsTest() throws ApiException {
        Dashboardsv3GetDashboardsResponse response = api.dashboardsServiceGetDashboards();
        // TODO: test validations
    }

    /**
     * Summary: Update dashboard Description: Update a dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dashboardsServiceUpdateDashboardTest() throws ApiException {
        String dashboardId = null;
        Dashboardsv3UpdateDashboardRequest dashboardsv3UpdateDashboardRequest = null;
        Dashboardsv3UpdateDashboardResponse response = api.dashboardsServiceUpdateDashboard(dashboardId, dashboardsv3UpdateDashboardRequest);
        // TODO: test validations
    }

}
