/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Riskanalyticscontrollerv3ObservationType;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticscontrollerv3Observation
 */
public class Riskanalyticscontrollerv3ObservationTest {
    private final Riskanalyticscontrollerv3Observation model = new Riskanalyticscontrollerv3Observation();

    /**
     * Model tests for Riskanalyticscontrollerv3Observation
     */
    @Test
    public void testRiskanalyticscontrollerv3Observation() {
        // TODO: test Riskanalyticscontrollerv3Observation
    }

    /**
     * Test the property 'leadFeatureId'
     */
    @Test
    public void leadFeatureIdTest() {
        // TODO: test leadFeatureId
    }

    /**
     * Test the property 'observationDescription'
     */
    @Test
    public void observationDescriptionTest() {
        // TODO: test observationDescription
    }

    /**
     * Test the property 'observationId'
     */
    @Test
    public void observationIdTest() {
        // TODO: test observationId
    }

    /**
     * Test the property 'observationType'
     */
    @Test
    public void observationTypeTest() {
        // TODO: test observationType
    }

    /**
     * Test the property 'time'
     */
    @Test
    public void timeTest() {
        // TODO: test time
    }

}
