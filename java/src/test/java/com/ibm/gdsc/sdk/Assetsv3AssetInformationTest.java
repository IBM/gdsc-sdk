/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3AssetInformation
 */
public class Assetsv3AssetInformationTest {
    private final Assetsv3AssetInformation model = new Assetsv3AssetInformation();

    /**
     * Model tests for Assetsv3AssetInformation
     */
    @Test
    public void testAssetsv3AssetInformation() {
        // TODO: test Assetsv3AssetInformation
    }

    /**
     * Test the property 'application'
     */
    @Test
    public void applicationTest() {
        // TODO: test application
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'assetName'
     */
    @Test
    public void assetNameTest() {
        // TODO: test assetName
    }

    /**
     * Test the property 'assetType'
     */
    @Test
    public void assetTypeTest() {
        // TODO: test assetType
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'dataCenter'
     */
    @Test
    public void dataCenterTest() {
        // TODO: test dataCenter
    }

    /**
     * Test the property 'database'
     */
    @Test
    public void databaseTest() {
        // TODO: test database
    }

    /**
     * Test the property 'databaseProtocol'
     */
    @Test
    public void databaseProtocolTest() {
        // TODO: test databaseProtocol
    }

    /**
     * Test the property 'databaseType'
     */
    @Test
    public void databaseTypeTest() {
        // TODO: test databaseType
    }

    /**
     * Test the property 'deployment'
     */
    @Test
    public void deploymentTest() {
        // TODO: test deployment
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'folderPath'
     */
    @Test
    public void folderPathTest() {
        // TODO: test folderPath
    }

    /**
     * Test the property 'gdpDataSources'
     */
    @Test
    public void gdpDataSourcesTest() {
        // TODO: test gdpDataSources
    }

    /**
     * Test the property 'hasTrainingData'
     */
    @Test
    public void hasTrainingDataTest() {
        // TODO: test hasTrainingData
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'lastActivity'
     */
    @Test
    public void lastActivityTest() {
        // TODO: test lastActivity
    }

    /**
     * Test the property 'lastTrained'
     */
    @Test
    public void lastTrainedTest() {
        // TODO: test lastTrained
    }

    /**
     * Test the property 'macAddress'
     */
    @Test
    public void macAddressTest() {
        // TODO: test macAddress
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'os'
     */
    @Test
    public void osTest() {
        // TODO: test os
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'publisher'
     */
    @Test
    public void publisherTest() {
        // TODO: test publisher
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'riskLevel'
     */
    @Test
    public void riskLevelTest() {
        // TODO: test riskLevel
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'server'
     */
    @Test
    public void serverTest() {
        // TODO: test server
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'storage'
     */
    @Test
    public void storageTest() {
        // TODO: test storage
    }

    /**
     * Test the property 'storageId'
     */
    @Test
    public void storageIdTest() {
        // TODO: test storageId
    }

}
