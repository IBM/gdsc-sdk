/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticsenginev3ClassificationMatchDetails
 */
public class Riskanalyticsenginev3ClassificationMatchDetailsTest {
    private final Riskanalyticsenginev3ClassificationMatchDetails model = new Riskanalyticsenginev3ClassificationMatchDetails();

    /**
     * Model tests for Riskanalyticsenginev3ClassificationMatchDetails
     */
    @Test
    public void testRiskanalyticsenginev3ClassificationMatchDetails() {
        // TODO: test Riskanalyticsenginev3ClassificationMatchDetails
    }

    /**
     * Test the property 'classKey'
     */
    @Test
    public void classKeyTest() {
        // TODO: test classKey
    }

    /**
     * Test the property 'classValue'
     */
    @Test
    public void classValueTest() {
        // TODO: test classValue
    }

    /**
     * Test the property 'classificationConfidence'
     */
    @Test
    public void classificationConfidenceTest() {
        // TODO: test classificationConfidence
    }

    /**
     * Test the property 'classificationNls'
     */
    @Test
    public void classificationNlsTest() {
        // TODO: test classificationNls
    }

    /**
     * Test the property 'modelProbability'
     */
    @Test
    public void modelProbabilityTest() {
        // TODO: test modelProbability
    }

}
