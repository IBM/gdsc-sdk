/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Riskanalyticscontrollerv3Finding;
import com.ibm.gdsc.sdk.Riskanalyticscontrollerv3Indicator;
import com.ibm.gdsc.sdk.Riskanalyticsenginev3SeverityLevel;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Riskanalyticscontrollerv3RiskEventHourlyFindings
 */
public class Riskanalyticscontrollerv3RiskEventHourlyFindingsTest {
    private final Riskanalyticscontrollerv3RiskEventHourlyFindings model = new Riskanalyticscontrollerv3RiskEventHourlyFindings();

    /**
     * Model tests for Riskanalyticscontrollerv3RiskEventHourlyFindings
     */
    @Test
    public void testRiskanalyticscontrollerv3RiskEventHourlyFindings() {
        // TODO: test Riskanalyticscontrollerv3RiskEventHourlyFindings
    }

    /**
     * Test the property 'dateFrom'
     */
    @Test
    public void dateFromTest() {
        // TODO: test dateFrom
    }

    /**
     * Test the property 'dateTo'
     */
    @Test
    public void dateToTest() {
        // TODO: test dateTo
    }

    /**
     * Test the property 'findings'
     */
    @Test
    public void findingsTest() {
        // TODO: test findings
    }

    /**
     * Test the property 'hourlyCategory'
     */
    @Test
    public void hourlyCategoryTest() {
        // TODO: test hourlyCategory
    }

    /**
     * Test the property 'hourlyCategoryDescription'
     */
    @Test
    public void hourlyCategoryDescriptionTest() {
        // TODO: test hourlyCategoryDescription
    }

    /**
     * Test the property 'hourlyDescription'
     */
    @Test
    public void hourlyDescriptionTest() {
        // TODO: test hourlyDescription
    }

    /**
     * Test the property 'hourlySeverityLevel'
     */
    @Test
    public void hourlySeverityLevelTest() {
        // TODO: test hourlySeverityLevel
    }

    /**
     * Test the property 'indicators'
     */
    @Test
    public void indicatorsTest() {
        // TODO: test indicators
    }

}
