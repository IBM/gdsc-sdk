/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.models.Assetsv3AssetsWithOpenVulnerabilities;
import com.ibm.gdsc.sdk.models.Assetsv3ClassificationScanStatus;
import com.ibm.gdsc.sdk.models.Assetsv3FilterCatagory;
import com.ibm.gdsc.sdk.models.Assetsv3HighestAssetTagCounts;
import com.ibm.gdsc.sdk.models.Assetsv3TagCategoriesData;
import com.ibm.gdsc.sdk.models.Assetsv3TagsFilterData;
import com.ibm.gdsc.sdk.models.Assetsv3VulnerabilityScanStatus;
import com.ibm.gdsc.sdk.models.Assetsv3VulnerabilityTrend;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3FetchAssetDashboardResponse
 */
public class Assetsv3FetchAssetDashboardResponseTest {
    private final Assetsv3FetchAssetDashboardResponse model = new Assetsv3FetchAssetDashboardResponse();

    /**
     * Model tests for Assetsv3FetchAssetDashboardResponse
     */
    @Test
    public void testAssetsv3FetchAssetDashboardResponse() {
        // TODO: test Assetsv3FetchAssetDashboardResponse
    }

    /**
     * Test the property 'assetsWithOpenVulnerabilities'
     */
    @Test
    public void assetsWithOpenVulnerabilitiesTest() {
        // TODO: test assetsWithOpenVulnerabilities
    }

    /**
     * Test the property 'classificationScanStatus'
     */
    @Test
    public void classificationScanStatusTest() {
        // TODO: test classificationScanStatus
    }

    /**
     * Test the property 'count'
     */
    @Test
    public void countTest() {
        // TODO: test count
    }

    /**
     * Test the property 'highestAssetTagCounts'
     */
    @Test
    public void highestAssetTagCountsTest() {
        // TODO: test highestAssetTagCounts
    }

    /**
     * Test the property 'selectedFilters'
     */
    @Test
    public void selectedFiltersTest() {
        // TODO: test selectedFilters
    }

    /**
     * Test the property 'tagCategoriesData'
     */
    @Test
    public void tagCategoriesDataTest() {
        // TODO: test tagCategoriesData
    }

    /**
     * Test the property 'tagsFilterData'
     */
    @Test
    public void tagsFilterDataTest() {
        // TODO: test tagsFilterData
    }

    /**
     * Test the property 'templateId'
     */
    @Test
    public void templateIdTest() {
        // TODO: test templateId
    }

    /**
     * Test the property 'vulnerabilityScanStatus'
     */
    @Test
    public void vulnerabilityScanStatusTest() {
        // TODO: test vulnerabilityScanStatus
    }

    /**
     * Test the property 'vulnerabilityTrend'
     */
    @Test
    public void vulnerabilityTrendTest() {
        // TODO: test vulnerabilityTrend
    }

}
