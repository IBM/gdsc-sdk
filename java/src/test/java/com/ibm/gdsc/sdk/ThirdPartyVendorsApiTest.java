/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.ibm.gdsc.ApiException;
import com.ibm.gdsc.sdk.Authenticate400Response;
import java.math.BigDecimal;
import com.ibm.gdsc.sdk.LinkedVendor;
import com.ibm.gdsc.sdk.ListLinkedVendorDataStores200Response;
import com.ibm.gdsc.sdk.ListLinkedVendorDataStoresSortParameter;
import com.ibm.gdsc.sdk.ListTrusteesFilterParameter;
import com.ibm.gdsc.sdk.ListVendorDataStoresFilterParameter;
import com.ibm.gdsc.sdk.Trustee;
import com.ibm.gdsc.sdk.VendorSummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThirdPartyVendorsApi
 */
@Disabled
public class ThirdPartyVendorsApiTest {

    private final ThirdPartyVendorsApi api = new ThirdPartyVendorsApi();

    /**
     * Get additional details of a specific third party vendor
     *
     * Get additional details of a specific third party vendor, such as, customer account details, sensitivities summary, and so on.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLinkedVendorTest() throws ApiException {
        String vendorId = null;
        List<VendorSummary> response = api.getLinkedVendor(vendorId);
        // TODO: test validations
    }

    /**
     * Get the third party vendors list
     *
     * Get details about a third party vendor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleLinkedVendorTest() throws ApiException {
        String vendorId = null;
        LinkedVendor response = api.getSingleLinkedVendor(vendorId);
        // TODO: test validations
    }

    /**
     * Get the data stores associated with a third party vendor
     *
     * Get a list of all the data stores that a third party vendor can access. Find out whether the data stores have sensitivities and which role can access the data stores.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLinkedVendorDataStoresTest() throws ApiException {
        String vendorId = null;
        ListVendorDataStoresFilterParameter filter = null;
        ListLinkedVendorDataStoresSortParameter sort = null;
        BigDecimal pageSize = null;
        String nextToken = null;
        ListLinkedVendorDataStores200Response response = api.listLinkedVendorDataStores(vendorId, filter, sort, pageSize, nextToken);
        // TODO: test validations
    }

    /**
     * Get the summary of a third party vendor
     *
     * Get a list of all third party vendors associated to your cloud environments (relevant for the cloud environments connected to Guardium DSPM only).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLinkedVendorsTest() throws ApiException {
        List<LinkedVendor> response = api.listLinkedVendors();
        // TODO: test validations
    }

    /**
     * Get a list of all the actual trusted assets
     *
     * Get a list of roles, buckets or service principles, and their entitled permissions associated to your cloud environments connected to Guardium DSPM.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTrustedAssetsTest() throws ApiException {
        ListTrusteesFilterParameter filter = null;
        List<Trustee> response = api.listTrustedAssets(filter);
        // TODO: test validations
    }

}
