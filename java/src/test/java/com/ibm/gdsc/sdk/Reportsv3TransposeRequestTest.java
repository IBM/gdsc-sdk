/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Reportsv3ContributionPointersInfoObject;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3TransposeRequest
 */
public class Reportsv3TransposeRequestTest {
    private final Reportsv3TransposeRequest model = new Reportsv3TransposeRequest();

    /**
     * Model tests for Reportsv3TransposeRequest
     */
    @Test
    public void testReportsv3TransposeRequest() {
        // TODO: test Reportsv3TransposeRequest
    }

    /**
     * Test the property 'constructIds'
     */
    @Test
    public void constructIdsTest() {
        // TODO: test constructIds
    }

    /**
     * Test the property 'contributionIndicators'
     */
    @Test
    public void contributionIndicatorsTest() {
        // TODO: test contributionIndicators
    }

    /**
     * Test the property 'contributionPointers'
     */
    @Test
    public void contributionPointersTest() {
        // TODO: test contributionPointers
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'summary'
     */
    @Test
    public void summaryTest() {
        // TODO: test summary
    }

}
