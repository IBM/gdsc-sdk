/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GroupMember;
import com.ibm.gdsc.sdk.Guardiumconnectorv3NestedGroupMember;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Guardiumconnectorv3Group
 */
public class Guardiumconnectorv3GroupTest {
    private final Guardiumconnectorv3Group model = new Guardiumconnectorv3Group();

    /**
     * Model tests for Guardiumconnectorv3Group
     */
    @Test
    public void testGuardiumconnectorv3Group() {
        // TODO: test Guardiumconnectorv3Group
    }

    /**
     * Test the property 'application'
     */
    @Test
    public void applicationTest() {
        // TODO: test application
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'groupId'
     */
    @Test
    public void groupIdTest() {
        // TODO: test groupId
    }

    /**
     * Test the property 'groupTypeId'
     */
    @Test
    public void groupTypeIdTest() {
        // TODO: test groupTypeId
    }

    /**
     * Test the property 'hierarchical'
     */
    @Test
    public void hierarchicalTest() {
        // TODO: test hierarchical
    }

    /**
     * Test the property 'memberCount'
     */
    @Test
    public void memberCountTest() {
        // TODO: test memberCount
    }

    /**
     * Test the property 'members'
     */
    @Test
    public void membersTest() {
        // TODO: test members
    }

    /**
     * Test the property 'nestedGroupMembers'
     */
    @Test
    public void nestedGroupMembersTest() {
        // TODO: test nestedGroupMembers
    }

    /**
     * Test the property 'tupleCount'
     */
    @Test
    public void tupleCountTest() {
        // TODO: test tupleCount
    }

    /**
     * Test the property 'tuples'
     */
    @Test
    public void tuplesTest() {
        // TODO: test tuples
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
