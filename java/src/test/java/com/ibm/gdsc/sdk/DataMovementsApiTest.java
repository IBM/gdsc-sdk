/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.ibm.gdsc.ApiException;
import com.ibm.gdsc.sdk.ActualFlow;
import com.ibm.gdsc.sdk.ActualFlowsSummary;
import com.ibm.gdsc.sdk.Authenticate400Response;
import java.math.BigDecimal;
import com.ibm.gdsc.sdk.ListActualFlowPaths200Response;
import com.ibm.gdsc.sdk.ListActualFlowPathsFilterParameter;
import com.ibm.gdsc.sdk.ListActualFlowPathsSortParameter;
import com.ibm.gdsc.sdk.ListActualFlows200Response;
import com.ibm.gdsc.sdk.ListActualFlowsFilterParameter;
import com.ibm.gdsc.sdk.ListActualFlowsSortParameter;
import com.ibm.gdsc.sdk.ListPotentialFlows200Response;
import com.ibm.gdsc.sdk.ListPotentialFlowsPaths200Response;
import com.ibm.gdsc.sdk.PotentialFlow;
import com.ibm.gdsc.sdk.PotentialFlowPath;
import com.ibm.gdsc.sdk.PotentialFlowsFilterOptions;
import com.ibm.gdsc.sdk.PotentialFlowsPathsFilterOptions;
import com.ibm.gdsc.sdk.PotentialFlowsSummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataMovementsApi
 */
@Disabled
public class DataMovementsApiTest {

    private final DataMovementsApi api = new DataMovementsApi();

    /**
     * Get actual flow by providing its ID
     *
     * Get a detailed information about an actual flow by providing its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActualFlowTest() throws ApiException {
        String id = null;
        ActualFlow response = api.getActualFlow(id);
        // TODO: test validations
    }

    /**
     * Get summary of actual flows
     *
     * Get a summary of all the actual flows discovered by Guardium DSPM, that is, details about source and destination, and other information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActualFlowsSummaryTest() throws ApiException {
        ListActualFlowsFilterParameter filter = null;
        ActualFlowsSummary response = api.getActualFlowsSummary(filter);
        // TODO: test validations
    }

    /**
     * Get potential flow by providing its ID
     *
     * Get a detailed information about a potential flow by providing the flow ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPotentialFlowTest() throws ApiException {
        String flowId = null;
        PotentialFlow response = api.getPotentialFlow(flowId);
        // TODO: test validations
    }

    /**
     * Get potential flow path by providing its ID
     *
     * Get details of a specific potential flow of data by providing its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPotentialFlowPathTest() throws ApiException {
        String flowPathId = null;
        PotentialFlowPath response = api.getPotentialFlowPath(flowPathId);
        // TODO: test validations
    }

    /**
     * Get summary of potential flows according to the filter applied
     *
     * Get a summary of all the potential flows based on a filter applied.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPotentialFlowsSummaryTest() throws ApiException {
        PotentialFlowsFilterOptions filter = null;
        PotentialFlowsSummary response = api.getPotentialFlowsSummary(filter);
        // TODO: test validations
    }

    /**
     * Get summary of actual flows according to the filter applied
     *
     * Get detailed information about the actual flows according to the filter applied.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listActualFlowPathsTest() throws ApiException {
        ListActualFlowPathsSortParameter sort = null;
        ListActualFlowPathsFilterParameter filter = null;
        BigDecimal pageSize = null;
        String nextToken = null;
        ListActualFlowPaths200Response response = api.listActualFlowPaths(sort, filter, pageSize, nextToken);
        // TODO: test validations
    }

    /**
     * List actual flows
     *
     * List all the actual flows (based on logs) of users and services across your entire cloud accounts and SasS applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listActualFlowsTest() throws ApiException {
        ListActualFlowsSortParameter sort = null;
        ListActualFlowsFilterParameter filter = null;
        BigDecimal pageSize = null;
        String nextToken = null;
        ListActualFlows200Response response = api.listActualFlows(sort, filter, pageSize, nextToken);
        // TODO: test validations
    }

    /**
     * List potential flows
     *
     * List all the potential flows of users and services across your entire cloud accounts and SaaS applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPotentialFlowsTest() throws ApiException {
        PotentialFlowsFilterOptions filter = null;
        BigDecimal pageSize = null;
        String nextToken = null;
        ListPotentialFlows200Response response = api.listPotentialFlows(filter, pageSize, nextToken);
        // TODO: test validations
    }

    /**
     * List potential flow paths
     *
     * List all the potential flow paths based on an applied filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPotentialFlowsPathsTest() throws ApiException {
        PotentialFlowsPathsFilterOptions filter = null;
        BigDecimal pageSize = null;
        String nextToken = null;
        ListPotentialFlowsPaths200Response response = api.listPotentialFlowsPaths(filter, pageSize, nextToken);
        // TODO: test validations
    }

}
