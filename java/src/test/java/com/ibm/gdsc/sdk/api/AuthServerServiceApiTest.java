/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.api;

import com.ibm.gdsc.sdk.ApiException;
import com.ibm.gdsc.sdk.models.AuthserverCreateOauthClientRequest;
import com.ibm.gdsc.sdk.models.AuthserverCreateOauthClientResponse;
import com.ibm.gdsc.sdk.models.AuthserverGetAccessTokenResponse;
import com.ibm.gdsc.sdk.models.AuthserverGetOauthClientResponse;
import com.ibm.gdsc.sdk.models.AuthserverGetUserResponse;
import com.ibm.gdsc.sdk.models.AuthserverListOauthClientResponse;
import com.ibm.gdsc.sdk.models.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthServerServiceApi
 */
@Disabled
public class AuthServerServiceApiTest {

    private final AuthServerServiceApi api = new AuthServerServiceApi();

    /**
     * Summary: Create Oauth client Description: Create/register new Oauth client.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceCreateOauthClientTest() throws ApiException {
        AuthserverCreateOauthClientRequest authserverCreateOauthClientRequest = null;
        AuthserverCreateOauthClientResponse response = api.authServerServiceCreateOauthClient(authserverCreateOauthClientRequest);
        // TODO: test validations
    }

    /**
     * Summary: Delete Oauth client Description: Delete registered Oauth client by clientId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceDeleteOauthClientTest() throws ApiException {
        String clientId = null;
        Object response = api.authServerServiceDeleteOauthClient(clientId);
        // TODO: test validations
    }

    /**
     * Summary: Get access token Description: Get access token from passed clientId and secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceGetAccessTokenTest() throws ApiException {
        AuthserverGetAccessTokenResponse response = api.authServerServiceGetAccessToken();
        // TODO: test validations
    }

    /**
     * Summary: Get Oauth client Description: Get registered Oauth client by clientId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceGetOauthClientTest() throws ApiException {
        String clientId = null;
        AuthserverGetOauthClientResponse response = api.authServerServiceGetOauthClient(clientId);
        // TODO: test validations
    }

    /**
     * Summary: Get user Description: Get user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceGetUserTest() throws ApiException {
        AuthserverGetUserResponse response = api.authServerServiceGetUser();
        // TODO: test validations
    }

    /**
     * Summary: List Oauth client Description: List all registered Oauth client.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authServerServiceListOauthClientTest() throws ApiException {
        AuthserverListOauthClientResponse response = api.authServerServiceListOauthClient();
        // TODO: test validations
    }

}
