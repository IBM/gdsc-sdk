/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Dashboardsv3Dashboard;
import com.ibm.gdsc.sdk.Dashboardsv3UpdateType;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dashboardsv3UpdateDashboardRequest
 */
public class Dashboardsv3UpdateDashboardRequestTest {
    private final Dashboardsv3UpdateDashboardRequest model = new Dashboardsv3UpdateDashboardRequest();

    /**
     * Model tests for Dashboardsv3UpdateDashboardRequest
     */
    @Test
    public void testDashboardsv3UpdateDashboardRequest() {
        // TODO: test Dashboardsv3UpdateDashboardRequest
    }

    /**
     * Test the property 'dashboard'
     */
    @Test
    public void dashboardTest() {
        // TODO: test dashboard
    }

    /**
     * Test the property 'dashboardId'
     */
    @Test
    public void dashboardIdTest() {
        // TODO: test dashboardId
    }

    /**
     * Test the property 'updateHint'
     */
    @Test
    public void updateHintTest() {
        // TODO: test updateHint
    }

    /**
     * Test the property 'updateType'
     */
    @Test
    public void updateTypeTest() {
        // TODO: test updateType
    }

}
