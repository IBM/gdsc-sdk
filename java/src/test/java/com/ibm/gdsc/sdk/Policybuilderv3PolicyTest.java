/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Policybuilderv3ControlFlow;
import com.ibm.gdsc.sdk.Policybuilderv3ImportIssue;
import com.ibm.gdsc.sdk.Policybuilderv3ImportState;
import com.ibm.gdsc.sdk.Policybuilderv3PolicyType;
import com.ibm.gdsc.sdk.Policybuilderv3RuleType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Policybuilderv3Policy
 */
public class Policybuilderv3PolicyTest {
    private final Policybuilderv3Policy model = new Policybuilderv3Policy();

    /**
     * Model tests for Policybuilderv3Policy
     */
    @Test
    public void testPolicybuilderv3Policy() {
        // TODO: test Policybuilderv3Policy
    }

    /**
     * Test the property 'activationStatus'
     */
    @Test
    public void activationStatusTest() {
        // TODO: test activationStatus
    }

    /**
     * Test the property 'containsRuleTypes'
     */
    @Test
    public void containsRuleTypesTest() {
        // TODO: test containsRuleTypes
    }

    /**
     * Test the property 'controlFlow'
     */
    @Test
    public void controlFlowTest() {
        // TODO: test controlFlow
    }

    /**
     * Test the property 'installedFlag'
     */
    @Test
    public void installedFlagTest() {
        // TODO: test installedFlag
    }

    /**
     * Test the property 'installedOrder'
     */
    @Test
    public void installedOrderTest() {
        // TODO: test installedOrder
    }

    /**
     * Test the property 'installedTimestamp'
     */
    @Test
    public void installedTimestampTest() {
        // TODO: test installedTimestamp
    }

    /**
     * Test the property 'lastEditedTimestamp'
     */
    @Test
    public void lastEditedTimestampTest() {
        // TODO: test lastEditedTimestamp
    }

    /**
     * Test the property 'logFlat'
     */
    @Test
    public void logFlatTest() {
        // TODO: test logFlat
    }

    /**
     * Test the property 'noOfRules'
     */
    @Test
    public void noOfRulesTest() {
        // TODO: test noOfRules
    }

    /**
     * Test the property 'policyId'
     */
    @Test
    public void policyIdTest() {
        // TODO: test policyId
    }

    /**
     * Test the property 'policyImportIssue'
     */
    @Test
    public void policyImportIssueTest() {
        // TODO: test policyImportIssue
    }

    /**
     * Test the property 'policyImportState'
     */
    @Test
    public void policyImportStateTest() {
        // TODO: test policyImportState
    }

    /**
     * Test the property 'policyName'
     */
    @Test
    public void policyNameTest() {
        // TODO: test policyName
    }

    /**
     * Test the property 'policyType'
     */
    @Test
    public void policyTypeTest() {
        // TODO: test policyType
    }

    /**
     * Test the property 'rulesOnFlat'
     */
    @Test
    public void rulesOnFlatTest() {
        // TODO: test rulesOnFlat
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'uiSequence'
     */
    @Test
    public void uiSequenceTest() {
        // TODO: test uiSequence
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
