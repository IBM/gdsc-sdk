/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Guardiumconnectorv3Attribute;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Guardiumconnectorv3SetupCMRequest
 */
public class Guardiumconnectorv3SetupCMRequestTest {
    private final Guardiumconnectorv3SetupCMRequest model = new Guardiumconnectorv3SetupCMRequest();

    /**
     * Model tests for Guardiumconnectorv3SetupCMRequest
     */
    @Test
    public void testGuardiumconnectorv3SetupCMRequest() {
        // TODO: test Guardiumconnectorv3SetupCMRequest
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'cmGid'
     */
    @Test
    public void cmGidTest() {
        // TODO: test cmGid
    }

    /**
     * Test the property 'cmHostname'
     */
    @Test
    public void cmHostnameTest() {
        // TODO: test cmHostname
    }

    /**
     * Test the property 'cmIp'
     */
    @Test
    public void cmIpTest() {
        // TODO: test cmIp
    }

    /**
     * Test the property 'pushRegistration'
     */
    @Test
    public void pushRegistrationTest() {
        // TODO: test pushRegistration
    }

}
