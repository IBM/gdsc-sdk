/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Policybuilderv3GdpPolicyObjectWithCm
 */
public class Policybuilderv3GdpPolicyObjectWithCmTest {
    private final Policybuilderv3GdpPolicyObjectWithCm model = new Policybuilderv3GdpPolicyObjectWithCm();

    /**
     * Model tests for Policybuilderv3GdpPolicyObjectWithCm
     */
    @Test
    public void testPolicybuilderv3GdpPolicyObjectWithCm() {
        // TODO: test Policybuilderv3GdpPolicyObjectWithCm
    }

    /**
     * Test the property 'centralManager'
     */
    @Test
    public void centralManagerTest() {
        // TODO: test centralManager
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'lastEditedTimestamp'
     */
    @Test
    public void lastEditedTimestampTest() {
        // TODO: test lastEditedTimestamp
    }

    /**
     * Test the property 'policyDescription'
     */
    @Test
    public void policyDescriptionTest() {
        // TODO: test policyDescription
    }

    /**
     * Test the property 'policyRulesCount'
     */
    @Test
    public void policyRulesCountTest() {
        // TODO: test policyRulesCount
    }

    /**
     * Test the property 'policySubType'
     */
    @Test
    public void policySubTypeTest() {
        // TODO: test policySubType
    }

    /**
     * Test the property 'policyType'
     */
    @Test
    public void policyTypeTest() {
        // TODO: test policyType
    }

}
