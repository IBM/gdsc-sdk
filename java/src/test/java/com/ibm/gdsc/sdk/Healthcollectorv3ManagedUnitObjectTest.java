/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Healthcollectorv3MUDetailsObj;
import com.ibm.gdsc.sdk.Healthcollectorv3StapObject;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Healthcollectorv3ManagedUnitObject
 */
public class Healthcollectorv3ManagedUnitObjectTest {
    private final Healthcollectorv3ManagedUnitObject model = new Healthcollectorv3ManagedUnitObject();

    /**
     * Model tests for Healthcollectorv3ManagedUnitObject
     */
    @Test
    public void testHealthcollectorv3ManagedUnitObject() {
        // TODO: test Healthcollectorv3ManagedUnitObject
    }

    /**
     * Test the property 'aggregationHealthStatus'
     */
    @Test
    public void aggregationHealthStatusTest() {
        // TODO: test aggregationHealthStatus
    }

    /**
     * Test the property 'connectivity'
     */
    @Test
    public void connectivityTest() {
        // TODO: test connectivity
    }

    /**
     * Test the property 'details'
     */
    @Test
    public void detailsTest() {
        // TODO: test details
    }

    /**
     * Test the property 'exportsTo'
     */
    @Test
    public void exportsToTest() {
        // TODO: test exportsTo
    }

    /**
     * Test the property 'importsFrom'
     */
    @Test
    public void importsFromTest() {
        // TODO: test importsFrom
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    public void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'overallStapStatusForMu'
     */
    @Test
    public void overallStapStatusForMuTest() {
        // TODO: test overallStapStatusForMu
    }

    /**
     * Test the property 'overallStatus'
     */
    @Test
    public void overallStatusTest() {
        // TODO: test overallStatus
    }

    /**
     * Test the property 'patch'
     */
    @Test
    public void patchTest() {
        // TODO: test patch
    }

    /**
     * Test the property 'staps'
     */
    @Test
    public void stapsTest() {
        // TODO: test staps
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'unitHostname'
     */
    @Test
    public void unitHostnameTest() {
        // TODO: test unitHostname
    }

    /**
     * Test the property 'unitIp'
     */
    @Test
    public void unitIpTest() {
        // TODO: test unitIp
    }

    /**
     * Test the property 'unitUtilizationHealthStatus'
     */
    @Test
    public void unitUtilizationHealthStatusTest() {
        // TODO: test unitUtilizationHealthStatus
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
