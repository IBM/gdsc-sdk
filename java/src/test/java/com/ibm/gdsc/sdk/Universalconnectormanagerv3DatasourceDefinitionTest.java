/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Universalconnectormanagerv3DatasourceDefinition
 */
public class Universalconnectormanagerv3DatasourceDefinitionTest {
    private final Universalconnectormanagerv3DatasourceDefinition model = new Universalconnectormanagerv3DatasourceDefinition();

    /**
     * Model tests for Universalconnectormanagerv3DatasourceDefinition
     */
    @Test
    public void testUniversalconnectormanagerv3DatasourceDefinition() {
        // TODO: test Universalconnectormanagerv3DatasourceDefinition
    }

    /**
     * Test the property 'datasourceFilter'
     */
    @Test
    public void datasourceFilterTest() {
        // TODO: test datasourceFilter
    }

    /**
     * Test the property 'datasourceId'
     */
    @Test
    public void datasourceIdTest() {
        // TODO: test datasourceId
    }

    /**
     * Test the property 'datasourceInput'
     */
    @Test
    public void datasourceInputTest() {
        // TODO: test datasourceInput
    }

    /**
     * Test the property 'datasourceName'
     */
    @Test
    public void datasourceNameTest() {
        // TODO: test datasourceName
    }

    /**
     * Test the property 'ownerUserId'
     */
    @Test
    public void ownerUserIdTest() {
        // TODO: test ownerUserId
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
