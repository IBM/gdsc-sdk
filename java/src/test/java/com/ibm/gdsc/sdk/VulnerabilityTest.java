/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Compliance;
import com.ibm.gdsc.sdk.VulnerabilityCriticality;
import com.ibm.gdsc.sdk.VulnerabilityFlowRef;
import com.ibm.gdsc.sdk.VulnerabilityRelatedAsset;
import com.ibm.gdsc.sdk.VulnerabilityRemediation;
import com.ibm.gdsc.sdk.VulnerabilityStatus;
import com.ibm.gdsc.sdk.VulnerabilityType;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Vulnerability
 */
public class VulnerabilityTest {
    private final Vulnerability model = new Vulnerability();

    /**
     * Model tests for Vulnerability
     */
    @Test
    public void testVulnerability() {
        // TODO: test Vulnerability
    }

    /**
     * Test the property 'vulnerabilityId'
     */
    @Test
    public void vulnerabilityIdTest() {
        // TODO: test vulnerabilityId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'subType'
     */
    @Test
    public void subTypeTest() {
        // TODO: test subType
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'configurationReason'
     */
    @Test
    public void configurationReasonTest() {
        // TODO: test configurationReason
    }

    /**
     * Test the property 'recommendation'
     */
    @Test
    public void recommendationTest() {
        // TODO: test recommendation
    }

    /**
     * Test the property 'remediation'
     */
    @Test
    public void remediationTest() {
        // TODO: test remediation
    }

    /**
     * Test the property 'detectionTimestamp'
     */
    @Test
    public void detectionTimestampTest() {
        // TODO: test detectionTimestamp
    }

    /**
     * Test the property 'criticality'
     */
    @Test
    public void criticalityTest() {
        // TODO: test criticality
    }

    /**
     * Test the property 'threats'
     */
    @Test
    public void threatsTest() {
        // TODO: test threats
    }

    /**
     * Test the property 'compliance'
     */
    @Test
    public void complianceTest() {
        // TODO: test compliance
    }

    /**
     * Test the property 'affectedAsset'
     */
    @Test
    public void affectedAssetTest() {
        // TODO: test affectedAsset
    }

    /**
     * Test the property 'statusHistory'
     */
    @Test
    public void statusHistoryTest() {
        // TODO: test statusHistory
    }

    /**
     * Test the property 'flowRef'
     */
    @Test
    public void flowRefTest() {
        // TODO: test flowRef
    }

    /**
     * Test the property 'relatedAssets'
     */
    @Test
    public void relatedAssetsTest() {
        // TODO: test relatedAssets
    }

}
