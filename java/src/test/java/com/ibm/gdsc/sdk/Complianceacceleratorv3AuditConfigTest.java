/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Complianceacceleratorv3AuditScheduler;
import com.ibm.gdsc.sdk.Schedulerv3Recipient;
import com.ibm.gdsc.sdk.Schedulerv3ScheduledTask;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Complianceacceleratorv3AuditConfig
 */
public class Complianceacceleratorv3AuditConfigTest {
    private final Complianceacceleratorv3AuditConfig model = new Complianceacceleratorv3AuditConfig();

    /**
     * Model tests for Complianceacceleratorv3AuditConfig
     */
    @Test
    public void testComplianceacceleratorv3AuditConfig() {
        // TODO: test Complianceacceleratorv3AuditConfig
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    public void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'isDeletion'
     */
    @Test
    public void isDeletionTest() {
        // TODO: test isDeletion
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'reportKey'
     */
    @Test
    public void reportKeyTest() {
        // TODO: test reportKey
    }

    /**
     * Test the property 'runOnceNow'
     */
    @Test
    public void runOnceNowTest() {
        // TODO: test runOnceNow
    }

    /**
     * Test the property 'scheduler'
     */
    @Test
    public void schedulerTest() {
        // TODO: test scheduler
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

}
