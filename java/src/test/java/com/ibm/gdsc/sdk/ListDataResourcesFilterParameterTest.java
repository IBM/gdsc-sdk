/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.SensitivityCategory;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ListDataResourcesFilterParameter
 */
public class ListDataResourcesFilterParameterTest {
    private final ListDataResourcesFilterParameter model = new ListDataResourcesFilterParameter();

    /**
     * Model tests for ListDataResourcesFilterParameter
     */
    @Test
    public void testListDataResourcesFilterParameter() {
        // TODO: test ListDataResourcesFilterParameter
    }

    /**
     * Test the property 'isReviewed'
     */
    @Test
    public void isReviewedTest() {
        // TODO: test isReviewed
    }

    /**
     * Test the property 'resourceOwners'
     */
    @Test
    public void resourceOwnersTest() {
        // TODO: test resourceOwners
    }

    /**
     * Test the property 'resourceNames'
     */
    @Test
    public void resourceNamesTest() {
        // TODO: test resourceNames
    }

    /**
     * Test the property 'resourceTypes'
     */
    @Test
    public void resourceTypesTest() {
        // TODO: test resourceTypes
    }

    /**
     * Test the property 'sensitivityTags'
     */
    @Test
    public void sensitivityTagsTest() {
        // TODO: test sensitivityTags
    }

    /**
     * Test the property 'sensitivityCategories'
     */
    @Test
    public void sensitivityCategoriesTest() {
        // TODO: test sensitivityCategories
    }

    /**
     * Test the property 'resourcePartialName'
     */
    @Test
    public void resourcePartialNameTest() {
        // TODO: test resourcePartialName
    }

}
