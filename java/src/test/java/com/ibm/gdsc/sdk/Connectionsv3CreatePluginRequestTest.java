/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Connectionsv3PluginRecord;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Connectionsv3CreatePluginRequest
 */
public class Connectionsv3CreatePluginRequestTest {
    private final Connectionsv3CreatePluginRequest model = new Connectionsv3CreatePluginRequest();

    /**
     * Model tests for Connectionsv3CreatePluginRequest
     */
    @Test
    public void testConnectionsv3CreatePluginRequest() {
        // TODO: test Connectionsv3CreatePluginRequest
    }

    /**
     * Test the property 'datasourceType'
     */
    @Test
    public void datasourceTypeTest() {
        // TODO: test datasourceType
    }

    /**
     * Test the property 'developerName'
     */
    @Test
    public void developerNameTest() {
        // TODO: test developerName
    }

    /**
     * Test the property 'logfile'
     */
    @Test
    public void logfileTest() {
        // TODO: test logfile
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'readme'
     */
    @Test
    public void readmeTest() {
        // TODO: test readme
    }

    /**
     * Test the property 'records'
     */
    @Test
    public void recordsTest() {
        // TODO: test records
    }

    /**
     * Test the property 'supportedInputs'
     */
    @Test
    public void supportedInputsTest() {
        // TODO: test supportedInputs
    }

}
