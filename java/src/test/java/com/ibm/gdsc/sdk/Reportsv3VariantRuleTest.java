/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Reportsv3VariantRuleCondition;
import com.ibm.gdsc.sdk.Reportsv3VariantRuleType;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3VariantRule
 */
public class Reportsv3VariantRuleTest {
    private final Reportsv3VariantRule model = new Reportsv3VariantRule();

    /**
     * Model tests for Reportsv3VariantRule
     */
    @Test
    public void testReportsv3VariantRule() {
        // TODO: test Reportsv3VariantRule
    }

    /**
     * Test the property 'actionIfType'
     */
    @Test
    public void actionIfTypeTest() {
        // TODO: test actionIfType
    }

    /**
     * Test the property 'delimiter'
     */
    @Test
    public void delimiterTest() {
        // TODO: test delimiter
    }

    /**
     * Test the property 'extractValue'
     */
    @Test
    public void extractValueTest() {
        // TODO: test extractValue
    }

    /**
     * Test the property 'matcher'
     */
    @Test
    public void matcherTest() {
        // TODO: test matcher
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
