/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Schedulerv3ExecutionStatus;
import com.ibm.gdsc.sdk.Schedulerv3TaskType;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Schedulerv3ScheduledJobRun
 */
public class Schedulerv3ScheduledJobRunTest {
    private final Schedulerv3ScheduledJobRun model = new Schedulerv3ScheduledJobRun();

    /**
     * Model tests for Schedulerv3ScheduledJobRun
     */
    @Test
    public void testSchedulerv3ScheduledJobRun() {
        // TODO: test Schedulerv3ScheduledJobRun
    }

    /**
     * Test the property 'collectionId'
     */
    @Test
    public void collectionIdTest() {
        // TODO: test collectionId
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'jobId'
     */
    @Test
    public void jobIdTest() {
        // TODO: test jobId
    }

    /**
     * Test the property 'previousJobId'
     */
    @Test
    public void previousJobIdTest() {
        // TODO: test previousJobId
    }

    /**
     * Test the property 'queryFrom'
     */
    @Test
    public void queryFromTest() {
        // TODO: test queryFrom
    }

    /**
     * Test the property 'queryTo'
     */
    @Test
    public void queryToTest() {
        // TODO: test queryTo
    }

    /**
     * Test the property 'queueTime'
     */
    @Test
    public void queueTimeTest() {
        // TODO: test queueTime
    }

    /**
     * Test the property 'runDetail'
     */
    @Test
    public void runDetailTest() {
        // TODO: test runDetail
    }

    /**
     * Test the property 'scheduleId'
     */
    @Test
    public void scheduleIdTest() {
        // TODO: test scheduleId
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'taskId'
     */
    @Test
    public void taskIdTest() {
        // TODO: test taskId
    }

    /**
     * Test the property 'taskName'
     */
    @Test
    public void taskNameTest() {
        // TODO: test taskName
    }

    /**
     * Test the property 'taskType'
     */
    @Test
    public void taskTypeTest() {
        // TODO: test taskType
    }

}
