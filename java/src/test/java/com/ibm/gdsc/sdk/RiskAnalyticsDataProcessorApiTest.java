/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.ibm.gdsc.ApiException;
import com.ibm.gdsc.sdk.Riskanalyticsdataprocessorv3GetRiskContextResponse;
import com.ibm.gdsc.sdk.Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse;
import com.ibm.gdsc.sdk.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RiskAnalyticsDataProcessorApi
 */
@Disabled
public class RiskAnalyticsDataProcessorApiTest {

    private final RiskAnalyticsDataProcessorApi api = new RiskAnalyticsDataProcessorApi();

    /**
     * Summary: Get Risk Event Context Description: Retrieve the context of the given risk ID. This context will be used for LLM interactions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void riskAnalyticsDataProcessorGetRiskContextTest() throws ApiException {
        Integer riskId = null;
        String timezone = null;
        Riskanalyticsdataprocessorv3GetRiskContextResponse response = api.riskAnalyticsDataProcessorGetRiskContext(riskId, timezone);
        // TODO: test validations
    }

    /**
     * Summary: Get Risk Event Predefined Questions Description: Retrieve the Predefined Questions of the given risk ID. This Predefined Questions will be used quick actions recommendations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void riskAnalyticsDataProcessorGetRiskPredefinedQuestionsTest() throws ApiException {
        Integer riskId = null;
        Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse response = api.riskAnalyticsDataProcessorGetRiskPredefinedQuestions(riskId);
        // TODO: test validations
    }

}
