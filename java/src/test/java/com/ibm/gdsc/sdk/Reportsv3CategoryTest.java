/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Reportsv3CategoryVersion;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Reportsv3Category
 */
public class Reportsv3CategoryTest {
    private final Reportsv3Category model = new Reportsv3Category();

    /**
     * Model tests for Reportsv3Category
     */
    @Test
    public void testReportsv3Category() {
        // TODO: test Reportsv3Category
    }

    /**
     * Test the property 'categoryDescription'
     */
    @Test
    public void categoryDescriptionTest() {
        // TODO: test categoryDescription
    }

    /**
     * Test the property 'categoryId'
     */
    @Test
    public void categoryIdTest() {
        // TODO: test categoryId
    }

    /**
     * Test the property 'categoryName'
     */
    @Test
    public void categoryNameTest() {
        // TODO: test categoryName
    }

    /**
     * Test the property 'multiVersion'
     */
    @Test
    public void multiVersionTest() {
        // TODO: test multiVersion
    }

    /**
     * Test the property 'versions'
     */
    @Test
    public void versionsTest() {
        // TODO: test versions
    }

}
