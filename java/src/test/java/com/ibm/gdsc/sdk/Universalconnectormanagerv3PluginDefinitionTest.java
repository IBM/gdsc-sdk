/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Universalconnectormanagerv3DatasourceType;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Universalconnectormanagerv3PluginDefinition
 */
public class Universalconnectormanagerv3PluginDefinitionTest {
    private final Universalconnectormanagerv3PluginDefinition model = new Universalconnectormanagerv3PluginDefinition();

    /**
     * Model tests for Universalconnectormanagerv3PluginDefinition
     */
    @Test
    public void testUniversalconnectormanagerv3PluginDefinition() {
        // TODO: test Universalconnectormanagerv3PluginDefinition
    }

    /**
     * Test the property 'pluginAlias'
     */
    @Test
    public void pluginAliasTest() {
        // TODO: test pluginAlias
    }

    /**
     * Test the property 'pluginConfigurationNotes'
     */
    @Test
    public void pluginConfigurationNotesTest() {
        // TODO: test pluginConfigurationNotes
    }

    /**
     * Test the property 'pluginDescription'
     */
    @Test
    public void pluginDescriptionTest() {
        // TODO: test pluginDescription
    }

    /**
     * Test the property 'pluginDeveloper'
     */
    @Test
    public void pluginDeveloperTest() {
        // TODO: test pluginDeveloper
    }

    /**
     * Test the property 'pluginDocumentationPath'
     */
    @Test
    public void pluginDocumentationPathTest() {
        // TODO: test pluginDocumentationPath
    }

    /**
     * Test the property 'pluginLicense'
     */
    @Test
    public void pluginLicenseTest() {
        // TODO: test pluginLicense
    }

    /**
     * Test the property 'pluginName'
     */
    @Test
    public void pluginNameTest() {
        // TODO: test pluginName
    }

    /**
     * Test the property 'pluginPipelineType'
     */
    @Test
    public void pluginPipelineTypeTest() {
        // TODO: test pluginPipelineType
    }

    /**
     * Test the property 'pluginType'
     */
    @Test
    public void pluginTypeTest() {
        // TODO: test pluginType
    }

    /**
     * Test the property 'pluginVersion'
     */
    @Test
    public void pluginVersionTest() {
        // TODO: test pluginVersion
    }

    /**
     * Test the property 'supportedInputPlugins'
     */
    @Test
    public void supportedInputPluginsTest() {
        // TODO: test supportedInputPlugins
    }

    /**
     * Test the property 'supportedDatasources'
     */
    @Test
    public void supportedDatasourcesTest() {
        // TODO: test supportedDatasources
    }

    /**
     * Test the property 'uploadDate'
     */
    @Test
    public void uploadDateTest() {
        // TODO: test uploadDate
    }

    /**
     * Test the property 'uploadUser'
     */
    @Test
    public void uploadUserTest() {
        // TODO: test uploadUser
    }

}
