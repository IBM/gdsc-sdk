/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.api;

import com.ibm.gdsc.sdk.ApiException;
import com.ibm.gdsc.sdk.models.Auditv3GetActivityRecordsResponse;
import com.ibm.gdsc.sdk.models.Auditv3PutActivityRecordRequest;
import com.ibm.gdsc.sdk.models.Auditv3PutActivityRecordResponse;
import java.time.OffsetDateTime;
import com.ibm.gdsc.sdk.models.RuntimeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuditServiceApi
 */
@Disabled
public class AuditServiceApiTest {

    private final AuditServiceApi api = new AuditServiceApi();

    /**
     * Summary: Get activity records Description: Return activity records that match the arguments passed in the request.  Multiple values can be passed to the (UID, Context, ActionTaken, PerformedBy) fields by supplying a  comma-separated list to the corresponding fields in the request.  For instance to check for  multiple Contexts set the field to \&quot;op1, op2, op3\&quot;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditServiceGetActivityRecordsTest() throws ApiException {
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        String uid = null;
        String actionTaken = null;
        String context = null;
        String changesMade = null;
        String performedBy = null;
        String contextDescription = null;
        String query = null;
        Long offset = null;
        Long limit = null;
        Boolean filter = null;
        Auditv3GetActivityRecordsResponse response = api.auditServiceGetActivityRecords(startTime, endTime, uid, actionTaken, context, changesMade, performedBy, contextDescription, query, offset, limit, filter);
        // TODO: test validations
    }

    /**
     * Summary: Put download activity record Description: Create an activity log record with the arguments passed in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditServicePutDownloadActivityRecordTest() throws ApiException {
        Auditv3PutActivityRecordRequest auditv3PutActivityRecordRequest = null;
        Auditv3PutActivityRecordResponse response = api.auditServicePutDownloadActivityRecord(auditv3PutActivityRecordRequest);
        // TODO: test validations
    }

}
