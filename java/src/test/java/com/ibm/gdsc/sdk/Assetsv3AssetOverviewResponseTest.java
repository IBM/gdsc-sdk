/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Assetsv3AssetClassification;
import com.ibm.gdsc.sdk.Assetsv3AssetControl;
import com.ibm.gdsc.sdk.Assetsv3AssetEndpoint;
import com.ibm.gdsc.sdk.Assetsv3AssetInformation;
import com.ibm.gdsc.sdk.Assetsv3AssetResourcesInfo;
import com.ibm.gdsc.sdk.Assetsv3AssetRiskEvents;
import com.ibm.gdsc.sdk.Assetsv3AssetSubscription;
import com.ibm.gdsc.sdk.Assetsv3AssetTags;
import com.ibm.gdsc.sdk.Assetsv3AssetVa;
import com.ibm.gdsc.sdk.Assetsv3ExtendedProp;
import com.ibm.gdsc.sdk.Assetsv3ModelApplication;
import com.ibm.gdsc.sdk.Assetsv3ModelData;
import com.ibm.gdsc.sdk.Assetsv3OverviewParameter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assetsv3AssetOverviewResponse
 */
public class Assetsv3AssetOverviewResponseTest {
    private final Assetsv3AssetOverviewResponse model = new Assetsv3AssetOverviewResponse();

    /**
     * Model tests for Assetsv3AssetOverviewResponse
     */
    @Test
    public void testAssetsv3AssetOverviewResponse() {
        // TODO: test Assetsv3AssetOverviewResponse
    }

    /**
     * Test the property 'assetClassification'
     */
    @Test
    public void assetClassificationTest() {
        // TODO: test assetClassification
    }

    /**
     * Test the property 'assetControl'
     */
    @Test
    public void assetControlTest() {
        // TODO: test assetControl
    }

    /**
     * Test the property 'assetEndpoints'
     */
    @Test
    public void assetEndpointsTest() {
        // TODO: test assetEndpoints
    }

    /**
     * Test the property 'assetInformation'
     */
    @Test
    public void assetInformationTest() {
        // TODO: test assetInformation
    }

    /**
     * Test the property 'assetResource'
     */
    @Test
    public void assetResourceTest() {
        // TODO: test assetResource
    }

    /**
     * Test the property 'assetRiskEvents'
     */
    @Test
    public void assetRiskEventsTest() {
        // TODO: test assetRiskEvents
    }

    /**
     * Test the property 'assetSubscriptions'
     */
    @Test
    public void assetSubscriptionsTest() {
        // TODO: test assetSubscriptions
    }

    /**
     * Test the property 'assetTags'
     */
    @Test
    public void assetTagsTest() {
        // TODO: test assetTags
    }

    /**
     * Test the property 'assetVa'
     */
    @Test
    public void assetVaTest() {
        // TODO: test assetVa
    }

    /**
     * Test the property 'dropdownFlag'
     */
    @Test
    public void dropdownFlagTest() {
        // TODO: test dropdownFlag
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'extendedProperties'
     */
    @Test
    public void extendedPropertiesTest() {
        // TODO: test extendedProperties
    }

    /**
     * Test the property 'modelApplication'
     */
    @Test
    public void modelApplicationTest() {
        // TODO: test modelApplication
    }

    /**
     * Test the property 'modelData'
     */
    @Test
    public void modelDataTest() {
        // TODO: test modelData
    }

    /**
     * Test the property 'overviewParameters'
     */
    @Test
    public void overviewParametersTest() {
        // TODO: test overviewParameters
    }

}
