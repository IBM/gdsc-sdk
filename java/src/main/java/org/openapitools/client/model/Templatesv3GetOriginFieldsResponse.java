/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.RpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The fields associated with the specified origin.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-31T19:36:57.870742Z[UTC]", comments = "Generator version: 7.6.0")
public class Templatesv3GetOriginFieldsResponse {
  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Map<String, String> fields = new HashMap<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RpcStatus status;

  public static final String SERIALIZED_NAME_TRANSLATED_KEYS = "translated_keys";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_KEYS)
  private List<String> translatedKeys = new ArrayList<>();

  public Templatesv3GetOriginFieldsResponse() {
  }

  public Templatesv3GetOriginFieldsResponse fields(Map<String, String> fields) {
    this.fields = fields;
    return this;
  }

  public Templatesv3GetOriginFieldsResponse putFieldsItem(String key, String fieldsItem) {
    if (this.fields == null) {
      this.fields = new HashMap<>();
    }
    this.fields.put(key, fieldsItem);
    return this;
  }

   /**
   * Map of fields associated with the origin and the appropriate insertion sequence.
   * @return fields
  **/
  @javax.annotation.Nullable
  public Map<String, String> getFields() {
    return fields;
  }

  public void setFields(Map<String, String> fields) {
    this.fields = fields;
  }


  public Templatesv3GetOriginFieldsResponse status(RpcStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public RpcStatus getStatus() {
    return status;
  }

  public void setStatus(RpcStatus status) {
    this.status = status;
  }


  public Templatesv3GetOriginFieldsResponse translatedKeys(List<String> translatedKeys) {
    this.translatedKeys = translatedKeys;
    return this;
  }

  public Templatesv3GetOriginFieldsResponse addTranslatedKeysItem(String translatedKeysItem) {
    if (this.translatedKeys == null) {
      this.translatedKeys = new ArrayList<>();
    }
    this.translatedKeys.add(translatedKeysItem);
    return this;
  }

   /**
   * List of available translation keys that can be used in the template.
   * @return translatedKeys
  **/
  @javax.annotation.Nullable
  public List<String> getTranslatedKeys() {
    return translatedKeys;
  }

  public void setTranslatedKeys(List<String> translatedKeys) {
    this.translatedKeys = translatedKeys;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Templatesv3GetOriginFieldsResponse templatesv3GetOriginFieldsResponse = (Templatesv3GetOriginFieldsResponse) o;
    return Objects.equals(this.fields, templatesv3GetOriginFieldsResponse.fields) &&
        Objects.equals(this.status, templatesv3GetOriginFieldsResponse.status) &&
        Objects.equals(this.translatedKeys, templatesv3GetOriginFieldsResponse.translatedKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, status, translatedKeys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Templatesv3GetOriginFieldsResponse {\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    translatedKeys: ").append(toIndentedString(translatedKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fields");
    openapiFields.add("status");
    openapiFields.add("translated_keys");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Templatesv3GetOriginFieldsResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Templatesv3GetOriginFieldsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Templatesv3GetOriginFieldsResponse is not found in the empty JSON string", Templatesv3GetOriginFieldsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Templatesv3GetOriginFieldsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Templatesv3GetOriginFieldsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        RpcStatus.validateJsonElement(jsonObj.get("status"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("translated_keys") != null && !jsonObj.get("translated_keys").isJsonNull() && !jsonObj.get("translated_keys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `translated_keys` to be an array in the JSON string but got `%s`", jsonObj.get("translated_keys").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Templatesv3GetOriginFieldsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Templatesv3GetOriginFieldsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Templatesv3GetOriginFieldsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Templatesv3GetOriginFieldsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<Templatesv3GetOriginFieldsResponse>() {
           @Override
           public void write(JsonWriter out, Templatesv3GetOriginFieldsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Templatesv3GetOriginFieldsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Templatesv3GetOriginFieldsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Templatesv3GetOriginFieldsResponse
  * @throws IOException if the JSON string is invalid with respect to Templatesv3GetOriginFieldsResponse
  */
  public static Templatesv3GetOriginFieldsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Templatesv3GetOriginFieldsResponse.class);
  }

 /**
  * Convert an instance of Templatesv3GetOriginFieldsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

