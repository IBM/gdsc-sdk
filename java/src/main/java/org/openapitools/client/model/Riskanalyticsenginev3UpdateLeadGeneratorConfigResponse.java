/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateLeadGeneratorConfigResponse is the response object for UpdateLeadGeneratorConfig API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-31T19:36:57.870742Z[UTC]", comments = "Generator version: 7.6.0")
public class Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse {
  public static final String SERIALIZED_NAME_RESULT_CODE = "result_code";
  @SerializedName(SERIALIZED_NAME_RESULT_CODE)
  private Integer resultCode;

  public static final String SERIALIZED_NAME_RESULT_TEXT = "result_text";
  @SerializedName(SERIALIZED_NAME_RESULT_TEXT)
  private String resultText;

  public Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse() {
  }

  public Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse resultCode(Integer resultCode) {
    this.resultCode = resultCode;
    return this;
  }

   /**
   * Result code of the API -- 0 &#x3D; success, any other value &#x3D;&#x3D; failure.
   * @return resultCode
  **/
  @javax.annotation.Nullable
  public Integer getResultCode() {
    return resultCode;
  }

  public void setResultCode(Integer resultCode) {
    this.resultCode = resultCode;
  }


  public Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse resultText(String resultText) {
    this.resultText = resultText;
    return this;
  }

   /**
   * Result text of the API -- empty string in case of success, error text in case of failure.
   * @return resultText
  **/
  @javax.annotation.Nullable
  public String getResultText() {
    return resultText;
  }

  public void setResultText(String resultText) {
    this.resultText = resultText;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse riskanalyticsenginev3UpdateLeadGeneratorConfigResponse = (Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse) o;
    return Objects.equals(this.resultCode, riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.resultCode) &&
        Objects.equals(this.resultText, riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.resultText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resultCode, resultText);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse {\n");
    sb.append("    resultCode: ").append(toIndentedString(resultCode)).append("\n");
    sb.append("    resultText: ").append(toIndentedString(resultText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("result_code");
    openapiFields.add("result_text");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse is not found in the empty JSON string", Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("result_text") != null && !jsonObj.get("result_text").isJsonNull()) && !jsonObj.get("result_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `result_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("result_text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse>() {
           @Override
           public void write(JsonWriter out, Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse
  * @throws IOException if the JSON string is invalid with respect to Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse
  */
  public static Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse.class);
  }

 /**
  * Convert an instance of Riskanalyticsenginev3UpdateLeadGeneratorConfigResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

