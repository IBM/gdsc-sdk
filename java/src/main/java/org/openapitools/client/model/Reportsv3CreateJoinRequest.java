/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Reportsv3JoinDefinition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Reportsv3CreateJoinRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-31T19:36:57.870742Z[UTC]", comments = "Generator version: 7.6.0")
public class Reportsv3CreateJoinRequest {
  public static final String SERIALIZED_NAME_JOIN_DEFINITION = "join_definition";
  @SerializedName(SERIALIZED_NAME_JOIN_DEFINITION)
  private Reportsv3JoinDefinition joinDefinition;

  public Reportsv3CreateJoinRequest() {
  }

  public Reportsv3CreateJoinRequest joinDefinition(Reportsv3JoinDefinition joinDefinition) {
    this.joinDefinition = joinDefinition;
    return this;
  }

   /**
   * Get joinDefinition
   * @return joinDefinition
  **/
  @javax.annotation.Nullable
  public Reportsv3JoinDefinition getJoinDefinition() {
    return joinDefinition;
  }

  public void setJoinDefinition(Reportsv3JoinDefinition joinDefinition) {
    this.joinDefinition = joinDefinition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reportsv3CreateJoinRequest reportsv3CreateJoinRequest = (Reportsv3CreateJoinRequest) o;
    return Objects.equals(this.joinDefinition, reportsv3CreateJoinRequest.joinDefinition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(joinDefinition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reportsv3CreateJoinRequest {\n");
    sb.append("    joinDefinition: ").append(toIndentedString(joinDefinition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("join_definition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Reportsv3CreateJoinRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Reportsv3CreateJoinRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Reportsv3CreateJoinRequest is not found in the empty JSON string", Reportsv3CreateJoinRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Reportsv3CreateJoinRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Reportsv3CreateJoinRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `join_definition`
      if (jsonObj.get("join_definition") != null && !jsonObj.get("join_definition").isJsonNull()) {
        Reportsv3JoinDefinition.validateJsonElement(jsonObj.get("join_definition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Reportsv3CreateJoinRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Reportsv3CreateJoinRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Reportsv3CreateJoinRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Reportsv3CreateJoinRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<Reportsv3CreateJoinRequest>() {
           @Override
           public void write(JsonWriter out, Reportsv3CreateJoinRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Reportsv3CreateJoinRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Reportsv3CreateJoinRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Reportsv3CreateJoinRequest
  * @throws IOException if the JSON string is invalid with respect to Reportsv3CreateJoinRequest
  */
  public static Reportsv3CreateJoinRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Reportsv3CreateJoinRequest.class);
  }

 /**
  * Convert an instance of Reportsv3CreateJoinRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

