/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Groupbuilderv3GroupMember;
import org.openapitools.client.model.Groupbuilderv3LdapConfig;
import org.openapitools.client.model.Groupbuilderv3NestedGroupMember;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Group imports groups from a Guradium Data Protection central manager to Guardium Insights.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-31T19:36:57.870742Z[UTC]", comments = "Generator version: 7.6.0")
public class Groupbuilderv3Group {
  public static final String SERIALIZED_NAME_ACCESS_LEVEL = "access_level";
  @SerializedName(SERIALIZED_NAME_ACCESS_LEVEL)
  private Integer accessLevel;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FLATTENED_MEMBER_COUNT = "flattened_member_count";
  @SerializedName(SERIALIZED_NAME_FLATTENED_MEMBER_COUNT)
  private Integer flattenedMemberCount;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private Integer groupId;

  public static final String SERIALIZED_NAME_GROUP_TYPE_ID = "group_type_id";
  @SerializedName(SERIALIZED_NAME_GROUP_TYPE_ID)
  private Integer groupTypeId;

  public static final String SERIALIZED_NAME_LAST_SYNC_DATE = "last_sync_date";
  @SerializedName(SERIALIZED_NAME_LAST_SYNC_DATE)
  private OffsetDateTime lastSyncDate;

  public static final String SERIALIZED_NAME_LDAP_CONFIG = "ldap_config";
  @SerializedName(SERIALIZED_NAME_LDAP_CONFIG)
  private Groupbuilderv3LdapConfig ldapConfig;

  public static final String SERIALIZED_NAME_MEMBER_COUNT = "member_count";
  @SerializedName(SERIALIZED_NAME_MEMBER_COUNT)
  private Integer memberCount;

  public static final String SERIALIZED_NAME_MEMBERS = "members";
  @SerializedName(SERIALIZED_NAME_MEMBERS)
  private List<Groupbuilderv3GroupMember> members = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NESTED = "nested";
  @SerializedName(SERIALIZED_NAME_NESTED)
  private Boolean nested;

  public static final String SERIALIZED_NAME_NESTED_GROUP_MEMBERS = "nested_group_members";
  @SerializedName(SERIALIZED_NAME_NESTED_GROUP_MEMBERS)
  private List<Groupbuilderv3NestedGroupMember> nestedGroupMembers = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_SYNC_DATE = "next_sync_date";
  @SerializedName(SERIALIZED_NAME_NEXT_SYNC_DATE)
  private OffsetDateTime nextSyncDate;

  public static final String SERIALIZED_NAME_SYNC_INACTIVE_CODE = "sync_inactive_code";
  @SerializedName(SERIALIZED_NAME_SYNC_INACTIVE_CODE)
  private Integer syncInactiveCode;

  public static final String SERIALIZED_NAME_SYNC_SOURCE = "sync_source";
  @SerializedName(SERIALIZED_NAME_SYNC_SOURCE)
  private String syncSource;

  public static final String SERIALIZED_NAME_SYNCED = "synced";
  @SerializedName(SERIALIZED_NAME_SYNCED)
  private Boolean synced;

  public static final String SERIALIZED_NAME_TUPLE_COUNT = "tuple_count";
  @SerializedName(SERIALIZED_NAME_TUPLE_COUNT)
  private Integer tupleCount;

  public static final String SERIALIZED_NAME_TUPLE_PARAMS = "tuple_params";
  @SerializedName(SERIALIZED_NAME_TUPLE_PARAMS)
  private List<String> tupleParams = new ArrayList<>();

  public Groupbuilderv3Group() {
  }

  public Groupbuilderv3Group accessLevel(Integer accessLevel) {
    this.accessLevel = accessLevel;
    return this;
  }

   /**
   * Group access level.
   * @return accessLevel
  **/
  @javax.annotation.Nullable
  public Integer getAccessLevel() {
    return accessLevel;
  }

  public void setAccessLevel(Integer accessLevel) {
    this.accessLevel = accessLevel;
  }


  public Groupbuilderv3Group description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Group description.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Groupbuilderv3Group flattenedMemberCount(Integer flattenedMemberCount) {
    this.flattenedMemberCount = flattenedMemberCount;
    return this;
  }

   /**
   * Flattened member count for nested groups.
   * @return flattenedMemberCount
  **/
  @javax.annotation.Nullable
  public Integer getFlattenedMemberCount() {
    return flattenedMemberCount;
  }

  public void setFlattenedMemberCount(Integer flattenedMemberCount) {
    this.flattenedMemberCount = flattenedMemberCount;
  }


  public Groupbuilderv3Group groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Group ID.
   * @return groupId
  **/
  @javax.annotation.Nullable
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }


  public Groupbuilderv3Group groupTypeId(Integer groupTypeId) {
    this.groupTypeId = groupTypeId;
    return this;
  }

   /**
   * Group type ID.
   * @return groupTypeId
  **/
  @javax.annotation.Nullable
  public Integer getGroupTypeId() {
    return groupTypeId;
  }

  public void setGroupTypeId(Integer groupTypeId) {
    this.groupTypeId = groupTypeId;
  }


  public Groupbuilderv3Group lastSyncDate(OffsetDateTime lastSyncDate) {
    this.lastSyncDate = lastSyncDate;
    return this;
  }

   /**
   * Last synchronization date.
   * @return lastSyncDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastSyncDate() {
    return lastSyncDate;
  }

  public void setLastSyncDate(OffsetDateTime lastSyncDate) {
    this.lastSyncDate = lastSyncDate;
  }


  public Groupbuilderv3Group ldapConfig(Groupbuilderv3LdapConfig ldapConfig) {
    this.ldapConfig = ldapConfig;
    return this;
  }

   /**
   * Get ldapConfig
   * @return ldapConfig
  **/
  @javax.annotation.Nullable
  public Groupbuilderv3LdapConfig getLdapConfig() {
    return ldapConfig;
  }

  public void setLdapConfig(Groupbuilderv3LdapConfig ldapConfig) {
    this.ldapConfig = ldapConfig;
  }


  public Groupbuilderv3Group memberCount(Integer memberCount) {
    this.memberCount = memberCount;
    return this;
  }

   /**
   * Group members count.
   * @return memberCount
  **/
  @javax.annotation.Nullable
  public Integer getMemberCount() {
    return memberCount;
  }

  public void setMemberCount(Integer memberCount) {
    this.memberCount = memberCount;
  }


  public Groupbuilderv3Group members(List<Groupbuilderv3GroupMember> members) {
    this.members = members;
    return this;
  }

  public Groupbuilderv3Group addMembersItem(Groupbuilderv3GroupMember membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * Array of members.
   * @return members
  **/
  @javax.annotation.Nullable
  public List<Groupbuilderv3GroupMember> getMembers() {
    return members;
  }

  public void setMembers(List<Groupbuilderv3GroupMember> members) {
    this.members = members;
  }


  public Groupbuilderv3Group name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Group name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Groupbuilderv3Group nested(Boolean nested) {
    this.nested = nested;
    return this;
  }

   /**
   * Nested (hierarchical).
   * @return nested
  **/
  @javax.annotation.Nullable
  public Boolean getNested() {
    return nested;
  }

  public void setNested(Boolean nested) {
    this.nested = nested;
  }


  public Groupbuilderv3Group nestedGroupMembers(List<Groupbuilderv3NestedGroupMember> nestedGroupMembers) {
    this.nestedGroupMembers = nestedGroupMembers;
    return this;
  }

  public Groupbuilderv3Group addNestedGroupMembersItem(Groupbuilderv3NestedGroupMember nestedGroupMembersItem) {
    if (this.nestedGroupMembers == null) {
      this.nestedGroupMembers = new ArrayList<>();
    }
    this.nestedGroupMembers.add(nestedGroupMembersItem);
    return this;
  }

   /**
   * Array of nested (hierarchical) members.
   * @return nestedGroupMembers
  **/
  @javax.annotation.Nullable
  public List<Groupbuilderv3NestedGroupMember> getNestedGroupMembers() {
    return nestedGroupMembers;
  }

  public void setNestedGroupMembers(List<Groupbuilderv3NestedGroupMember> nestedGroupMembers) {
    this.nestedGroupMembers = nestedGroupMembers;
  }


  public Groupbuilderv3Group nextSyncDate(OffsetDateTime nextSyncDate) {
    this.nextSyncDate = nextSyncDate;
    return this;
  }

   /**
   * Next synchronization date.
   * @return nextSyncDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getNextSyncDate() {
    return nextSyncDate;
  }

  public void setNextSyncDate(OffsetDateTime nextSyncDate) {
    this.nextSyncDate = nextSyncDate;
  }


  public Groupbuilderv3Group syncInactiveCode(Integer syncInactiveCode) {
    this.syncInactiveCode = syncInactiveCode;
    return this;
  }

   /**
   * Synchronization inactive code.
   * @return syncInactiveCode
  **/
  @javax.annotation.Nullable
  public Integer getSyncInactiveCode() {
    return syncInactiveCode;
  }

  public void setSyncInactiveCode(Integer syncInactiveCode) {
    this.syncInactiveCode = syncInactiveCode;
  }


  public Groupbuilderv3Group syncSource(String syncSource) {
    this.syncSource = syncSource;
    return this;
  }

   /**
   * Name of Guardium Data Protection central manager synchronized to the group.
   * @return syncSource
  **/
  @javax.annotation.Nullable
  public String getSyncSource() {
    return syncSource;
  }

  public void setSyncSource(String syncSource) {
    this.syncSource = syncSource;
  }


  public Groupbuilderv3Group synced(Boolean synced) {
    this.synced = synced;
    return this;
  }

   /**
   * Synchronized.
   * @return synced
  **/
  @javax.annotation.Nullable
  public Boolean getSynced() {
    return synced;
  }

  public void setSynced(Boolean synced) {
    this.synced = synced;
  }


  public Groupbuilderv3Group tupleCount(Integer tupleCount) {
    this.tupleCount = tupleCount;
    return this;
  }

   /**
   * Group tuples count.
   * @return tupleCount
  **/
  @javax.annotation.Nullable
  public Integer getTupleCount() {
    return tupleCount;
  }

  public void setTupleCount(Integer tupleCount) {
    this.tupleCount = tupleCount;
  }


  public Groupbuilderv3Group tupleParams(List<String> tupleParams) {
    this.tupleParams = tupleParams;
    return this;
  }

  public Groupbuilderv3Group addTupleParamsItem(String tupleParamsItem) {
    if (this.tupleParams == null) {
      this.tupleParams = new ArrayList<>();
    }
    this.tupleParams.add(tupleParamsItem);
    return this;
  }

   /**
   * Tuple parameters.
   * @return tupleParams
  **/
  @javax.annotation.Nullable
  public List<String> getTupleParams() {
    return tupleParams;
  }

  public void setTupleParams(List<String> tupleParams) {
    this.tupleParams = tupleParams;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Groupbuilderv3Group groupbuilderv3Group = (Groupbuilderv3Group) o;
    return Objects.equals(this.accessLevel, groupbuilderv3Group.accessLevel) &&
        Objects.equals(this.description, groupbuilderv3Group.description) &&
        Objects.equals(this.flattenedMemberCount, groupbuilderv3Group.flattenedMemberCount) &&
        Objects.equals(this.groupId, groupbuilderv3Group.groupId) &&
        Objects.equals(this.groupTypeId, groupbuilderv3Group.groupTypeId) &&
        Objects.equals(this.lastSyncDate, groupbuilderv3Group.lastSyncDate) &&
        Objects.equals(this.ldapConfig, groupbuilderv3Group.ldapConfig) &&
        Objects.equals(this.memberCount, groupbuilderv3Group.memberCount) &&
        Objects.equals(this.members, groupbuilderv3Group.members) &&
        Objects.equals(this.name, groupbuilderv3Group.name) &&
        Objects.equals(this.nested, groupbuilderv3Group.nested) &&
        Objects.equals(this.nestedGroupMembers, groupbuilderv3Group.nestedGroupMembers) &&
        Objects.equals(this.nextSyncDate, groupbuilderv3Group.nextSyncDate) &&
        Objects.equals(this.syncInactiveCode, groupbuilderv3Group.syncInactiveCode) &&
        Objects.equals(this.syncSource, groupbuilderv3Group.syncSource) &&
        Objects.equals(this.synced, groupbuilderv3Group.synced) &&
        Objects.equals(this.tupleCount, groupbuilderv3Group.tupleCount) &&
        Objects.equals(this.tupleParams, groupbuilderv3Group.tupleParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessLevel, description, flattenedMemberCount, groupId, groupTypeId, lastSyncDate, ldapConfig, memberCount, members, name, nested, nestedGroupMembers, nextSyncDate, syncInactiveCode, syncSource, synced, tupleCount, tupleParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Groupbuilderv3Group {\n");
    sb.append("    accessLevel: ").append(toIndentedString(accessLevel)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flattenedMemberCount: ").append(toIndentedString(flattenedMemberCount)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupTypeId: ").append(toIndentedString(groupTypeId)).append("\n");
    sb.append("    lastSyncDate: ").append(toIndentedString(lastSyncDate)).append("\n");
    sb.append("    ldapConfig: ").append(toIndentedString(ldapConfig)).append("\n");
    sb.append("    memberCount: ").append(toIndentedString(memberCount)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nested: ").append(toIndentedString(nested)).append("\n");
    sb.append("    nestedGroupMembers: ").append(toIndentedString(nestedGroupMembers)).append("\n");
    sb.append("    nextSyncDate: ").append(toIndentedString(nextSyncDate)).append("\n");
    sb.append("    syncInactiveCode: ").append(toIndentedString(syncInactiveCode)).append("\n");
    sb.append("    syncSource: ").append(toIndentedString(syncSource)).append("\n");
    sb.append("    synced: ").append(toIndentedString(synced)).append("\n");
    sb.append("    tupleCount: ").append(toIndentedString(tupleCount)).append("\n");
    sb.append("    tupleParams: ").append(toIndentedString(tupleParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_level");
    openapiFields.add("description");
    openapiFields.add("flattened_member_count");
    openapiFields.add("group_id");
    openapiFields.add("group_type_id");
    openapiFields.add("last_sync_date");
    openapiFields.add("ldap_config");
    openapiFields.add("member_count");
    openapiFields.add("members");
    openapiFields.add("name");
    openapiFields.add("nested");
    openapiFields.add("nested_group_members");
    openapiFields.add("next_sync_date");
    openapiFields.add("sync_inactive_code");
    openapiFields.add("sync_source");
    openapiFields.add("synced");
    openapiFields.add("tuple_count");
    openapiFields.add("tuple_params");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Groupbuilderv3Group
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Groupbuilderv3Group.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Groupbuilderv3Group is not found in the empty JSON string", Groupbuilderv3Group.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Groupbuilderv3Group.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Groupbuilderv3Group` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `ldap_config`
      if (jsonObj.get("ldap_config") != null && !jsonObj.get("ldap_config").isJsonNull()) {
        Groupbuilderv3LdapConfig.validateJsonElement(jsonObj.get("ldap_config"));
      }
      if (jsonObj.get("members") != null && !jsonObj.get("members").isJsonNull()) {
        JsonArray jsonArraymembers = jsonObj.getAsJsonArray("members");
        if (jsonArraymembers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("members").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `members` to be an array in the JSON string but got `%s`", jsonObj.get("members").toString()));
          }

          // validate the optional field `members` (array)
          for (int i = 0; i < jsonArraymembers.size(); i++) {
            Groupbuilderv3GroupMember.validateJsonElement(jsonArraymembers.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("nested_group_members") != null && !jsonObj.get("nested_group_members").isJsonNull()) {
        JsonArray jsonArraynestedGroupMembers = jsonObj.getAsJsonArray("nested_group_members");
        if (jsonArraynestedGroupMembers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nested_group_members").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nested_group_members` to be an array in the JSON string but got `%s`", jsonObj.get("nested_group_members").toString()));
          }

          // validate the optional field `nested_group_members` (array)
          for (int i = 0; i < jsonArraynestedGroupMembers.size(); i++) {
            Groupbuilderv3NestedGroupMember.validateJsonElement(jsonArraynestedGroupMembers.get(i));
          };
        }
      }
      if ((jsonObj.get("sync_source") != null && !jsonObj.get("sync_source").isJsonNull()) && !jsonObj.get("sync_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sync_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sync_source").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tuple_params") != null && !jsonObj.get("tuple_params").isJsonNull() && !jsonObj.get("tuple_params").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tuple_params` to be an array in the JSON string but got `%s`", jsonObj.get("tuple_params").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Groupbuilderv3Group.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Groupbuilderv3Group' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Groupbuilderv3Group> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Groupbuilderv3Group.class));

       return (TypeAdapter<T>) new TypeAdapter<Groupbuilderv3Group>() {
           @Override
           public void write(JsonWriter out, Groupbuilderv3Group value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Groupbuilderv3Group read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Groupbuilderv3Group given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Groupbuilderv3Group
  * @throws IOException if the JSON string is invalid with respect to Groupbuilderv3Group
  */
  public static Groupbuilderv3Group fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Groupbuilderv3Group.class);
  }

 /**
  * Convert an instance of Groupbuilderv3Group to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

