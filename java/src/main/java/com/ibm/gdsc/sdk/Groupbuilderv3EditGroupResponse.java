/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.Groupbuilderv3StatusResponseBase;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.JSON;

/**
 * EditGroupResponse returns the number of newly inserted, deleted, or updated group members.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-18T20:02:04.461512Z[UTC]", comments = "Generator version: 7.6.0")
public class Groupbuilderv3EditGroupResponse {
  public static final String SERIALIZED_NAME_DELETED_COUNT = "deleted_count";
  @SerializedName(SERIALIZED_NAME_DELETED_COUNT)
  private Integer deletedCount;

  public static final String SERIALIZED_NAME_INSERTED_COUNT = "inserted_count";
  @SerializedName(SERIALIZED_NAME_INSERTED_COUNT)
  private Integer insertedCount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Groupbuilderv3StatusResponseBase status;

  public static final String SERIALIZED_NAME_UPDATED_COUNT = "updated_count";
  @SerializedName(SERIALIZED_NAME_UPDATED_COUNT)
  private Integer updatedCount;

  public Groupbuilderv3EditGroupResponse() {
  }

  public Groupbuilderv3EditGroupResponse deletedCount(Integer deletedCount) {
    this.deletedCount = deletedCount;
    return this;
  }

   /**
   * Number of deleted group members.
   * @return deletedCount
  **/
  @javax.annotation.Nullable
  public Integer getDeletedCount() {
    return deletedCount;
  }

  public void setDeletedCount(Integer deletedCount) {
    this.deletedCount = deletedCount;
  }


  public Groupbuilderv3EditGroupResponse insertedCount(Integer insertedCount) {
    this.insertedCount = insertedCount;
    return this;
  }

   /**
   * Number of new group members.
   * @return insertedCount
  **/
  @javax.annotation.Nullable
  public Integer getInsertedCount() {
    return insertedCount;
  }

  public void setInsertedCount(Integer insertedCount) {
    this.insertedCount = insertedCount;
  }


  public Groupbuilderv3EditGroupResponse status(Groupbuilderv3StatusResponseBase status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public Groupbuilderv3StatusResponseBase getStatus() {
    return status;
  }

  public void setStatus(Groupbuilderv3StatusResponseBase status) {
    this.status = status;
  }


  public Groupbuilderv3EditGroupResponse updatedCount(Integer updatedCount) {
    this.updatedCount = updatedCount;
    return this;
  }

   /**
   * Number of updated group members.
   * @return updatedCount
  **/
  @javax.annotation.Nullable
  public Integer getUpdatedCount() {
    return updatedCount;
  }

  public void setUpdatedCount(Integer updatedCount) {
    this.updatedCount = updatedCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Groupbuilderv3EditGroupResponse groupbuilderv3EditGroupResponse = (Groupbuilderv3EditGroupResponse) o;
    return Objects.equals(this.deletedCount, groupbuilderv3EditGroupResponse.deletedCount) &&
        Objects.equals(this.insertedCount, groupbuilderv3EditGroupResponse.insertedCount) &&
        Objects.equals(this.status, groupbuilderv3EditGroupResponse.status) &&
        Objects.equals(this.updatedCount, groupbuilderv3EditGroupResponse.updatedCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deletedCount, insertedCount, status, updatedCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Groupbuilderv3EditGroupResponse {\n");
    sb.append("    deletedCount: ").append(toIndentedString(deletedCount)).append("\n");
    sb.append("    insertedCount: ").append(toIndentedString(insertedCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedCount: ").append(toIndentedString(updatedCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deleted_count");
    openapiFields.add("inserted_count");
    openapiFields.add("status");
    openapiFields.add("updated_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Groupbuilderv3EditGroupResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Groupbuilderv3EditGroupResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Groupbuilderv3EditGroupResponse is not found in the empty JSON string", Groupbuilderv3EditGroupResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Groupbuilderv3EditGroupResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Groupbuilderv3EditGroupResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        Groupbuilderv3StatusResponseBase.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Groupbuilderv3EditGroupResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Groupbuilderv3EditGroupResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Groupbuilderv3EditGroupResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Groupbuilderv3EditGroupResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<Groupbuilderv3EditGroupResponse>() {
           @Override
           public void write(JsonWriter out, Groupbuilderv3EditGroupResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Groupbuilderv3EditGroupResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Groupbuilderv3EditGroupResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Groupbuilderv3EditGroupResponse
  * @throws IOException if the JSON string is invalid with respect to Groupbuilderv3EditGroupResponse
  */
  public static Groupbuilderv3EditGroupResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Groupbuilderv3EditGroupResponse.class);
  }

 /**
  * Convert an instance of Groupbuilderv3EditGroupResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

