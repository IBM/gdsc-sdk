/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.AnalyzedRegionValidationResults;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.JSON;

/**
 * AddAnalyzedRegion200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-15T03:58:58.617687Z[UTC]", comments = "Generator version: 7.6.0")
public class AddAnalyzedRegion200Response {
  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USER_DATA = "userData";
  @SerializedName(SERIALIZED_NAME_USER_DATA)
  private String userData;

  public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_SUBNET_ID = "subnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_VPC_ID = "vpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "availabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_INSTALLATION_SCRIPT = "installationScript";
  @SerializedName(SERIALIZED_NAME_INSTALLATION_SCRIPT)
  private String installationScript;

  public static final String SERIALIZED_NAME_VALIDATION_RESULTS = "validationResults";
  @SerializedName(SERIALIZED_NAME_VALIDATION_RESULTS)
  private AnalyzedRegionValidationResults validationResults;

  public AddAnalyzedRegion200Response() {
  }

  public AddAnalyzedRegion200Response url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public AddAnalyzedRegion200Response userData(String userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @javax.annotation.Nullable
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }


  public AddAnalyzedRegion200Response imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @javax.annotation.Nullable
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public AddAnalyzedRegion200Response subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public AddAnalyzedRegion200Response vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public AddAnalyzedRegion200Response availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * Get availabilityZone
   * @return availabilityZone
  **/
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public AddAnalyzedRegion200Response installationScript(String installationScript) {
    this.installationScript = installationScript;
    return this;
  }

   /**
   * Get installationScript
   * @return installationScript
  **/
  @javax.annotation.Nullable
  public String getInstallationScript() {
    return installationScript;
  }

  public void setInstallationScript(String installationScript) {
    this.installationScript = installationScript;
  }


  public AddAnalyzedRegion200Response validationResults(AnalyzedRegionValidationResults validationResults) {
    this.validationResults = validationResults;
    return this;
  }

   /**
   * Get validationResults
   * @return validationResults
  **/
  @javax.annotation.Nullable
  public AnalyzedRegionValidationResults getValidationResults() {
    return validationResults;
  }

  public void setValidationResults(AnalyzedRegionValidationResults validationResults) {
    this.validationResults = validationResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddAnalyzedRegion200Response addAnalyzedRegion200Response = (AddAnalyzedRegion200Response) o;
    return Objects.equals(this.url, addAnalyzedRegion200Response.url) &&
        Objects.equals(this.userData, addAnalyzedRegion200Response.userData) &&
        Objects.equals(this.imageId, addAnalyzedRegion200Response.imageId) &&
        Objects.equals(this.subnetId, addAnalyzedRegion200Response.subnetId) &&
        Objects.equals(this.vpcId, addAnalyzedRegion200Response.vpcId) &&
        Objects.equals(this.availabilityZone, addAnalyzedRegion200Response.availabilityZone) &&
        Objects.equals(this.installationScript, addAnalyzedRegion200Response.installationScript) &&
        Objects.equals(this.validationResults, addAnalyzedRegion200Response.validationResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, userData, imageId, subnetId, vpcId, availabilityZone, installationScript, validationResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddAnalyzedRegion200Response {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    installationScript: ").append(toIndentedString(installationScript)).append("\n");
    sb.append("    validationResults: ").append(toIndentedString(validationResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("url");
    openapiFields.add("userData");
    openapiFields.add("imageId");
    openapiFields.add("subnetId");
    openapiFields.add("vpcId");
    openapiFields.add("availabilityZone");
    openapiFields.add("installationScript");
    openapiFields.add("validationResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AddAnalyzedRegion200Response
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddAnalyzedRegion200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddAnalyzedRegion200Response is not found in the empty JSON string", AddAnalyzedRegion200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddAnalyzedRegion200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddAnalyzedRegion200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("userData") != null && !jsonObj.get("userData").isJsonNull()) && !jsonObj.get("userData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userData").toString()));
      }
      if ((jsonObj.get("imageId") != null && !jsonObj.get("imageId").isJsonNull()) && !jsonObj.get("imageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageId").toString()));
      }
      if ((jsonObj.get("subnetId") != null && !jsonObj.get("subnetId").isJsonNull()) && !jsonObj.get("subnetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subnetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subnetId").toString()));
      }
      if ((jsonObj.get("vpcId") != null && !jsonObj.get("vpcId").isJsonNull()) && !jsonObj.get("vpcId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vpcId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vpcId").toString()));
      }
      if ((jsonObj.get("availabilityZone") != null && !jsonObj.get("availabilityZone").isJsonNull()) && !jsonObj.get("availabilityZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `availabilityZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("availabilityZone").toString()));
      }
      if ((jsonObj.get("installationScript") != null && !jsonObj.get("installationScript").isJsonNull()) && !jsonObj.get("installationScript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `installationScript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("installationScript").toString()));
      }
      // validate the optional field `validationResults`
      if (jsonObj.get("validationResults") != null && !jsonObj.get("validationResults").isJsonNull()) {
        AnalyzedRegionValidationResults.validateJsonElement(jsonObj.get("validationResults"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddAnalyzedRegion200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddAnalyzedRegion200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddAnalyzedRegion200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddAnalyzedRegion200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AddAnalyzedRegion200Response>() {
           @Override
           public void write(JsonWriter out, AddAnalyzedRegion200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddAnalyzedRegion200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddAnalyzedRegion200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddAnalyzedRegion200Response
  * @throws IOException if the JSON string is invalid with respect to AddAnalyzedRegion200Response
  */
  public static AddAnalyzedRegion200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddAnalyzedRegion200Response.class);
  }

 /**
  * Convert an instance of AddAnalyzedRegion200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

