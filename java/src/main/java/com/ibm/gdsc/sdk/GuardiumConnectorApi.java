/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import com.ibm.gdsc.ApiCallback;
import com.ibm.gdsc.ApiClient;
import com.ibm.gdsc.ApiException;
import com.ibm.gdsc.ApiResponse;
import com.ibm.gdsc.Configuration;
import com.ibm.gdsc.Pair;
import com.ibm.gdsc.ProgressRequestBody;
import com.ibm.gdsc.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.ibm.gdsc.sdk.Guardiumconnectorv3AddCMRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddCMResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddDatamartsRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddDatamartsResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddDmExclusionRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddDmExclusionResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddTaskRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3AddTaskResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3BlockUserRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3BlockUserResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureAggregatorExportRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureAggregatorExportResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureCollectorExportRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureCollectorExportResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureStreamingRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3ConfigureStreamingResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DatabaseConnectionStringRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DatabaseResultResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DatamartVersionRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DatamartVersionResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DeleteCMResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DeleteDmExclusionResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DeleteTaskResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3DeleteTasksResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetAggregatorsConfigResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetCMsConfigResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetCMsResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetCollectorsConfigResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetDatamartsResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetDmExclusionResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetHealthInfoResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetLatestDMExtractionProfileResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetPolicyInfoResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetPolicySummariesResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetStreamingStatusResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetSyncDMsResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetTaskTypesResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3GetTasksResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3RunGDPReportRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3RunGDPReportResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3SetupCMRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3SetupCMResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3SetupDatamartsRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3SetupDatamartsResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3TaskErrorRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3TaskErrorResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateDmExclusionRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateDmExclusionResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateStreamingRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateStreamingResponse;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateTaskRequest;
import com.ibm.gdsc.sdk.Guardiumconnectorv3UpdateTaskResponse;
import com.ibm.gdsc.sdk.RuntimeError;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GuardiumConnectorApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GuardiumConnectorApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GuardiumConnectorApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for guardiumConnectorAddCM
     * @param guardiumconnectorv3AddCMRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddCMCall(Guardiumconnectorv3AddCMRequest guardiumconnectorv3AddCMRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3AddCMRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorAddCMValidateBeforeCall(Guardiumconnectorv3AddCMRequest guardiumconnectorv3AddCMRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3AddCMRequest' is set
        if (guardiumconnectorv3AddCMRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3AddCMRequest' when calling guardiumConnectorAddCM(Async)");
        }

        return guardiumConnectorAddCMCall(guardiumconnectorv3AddCMRequest, _callback);

    }

    /**
     * Summary: Add CM Description: Add a Central Manager to the tenant database.
     * 
     * @param guardiumconnectorv3AddCMRequest  (required)
     * @return Guardiumconnectorv3AddCMResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3AddCMResponse guardiumConnectorAddCM(Guardiumconnectorv3AddCMRequest guardiumconnectorv3AddCMRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3AddCMResponse> localVarResp = guardiumConnectorAddCMWithHttpInfo(guardiumconnectorv3AddCMRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Add CM Description: Add a Central Manager to the tenant database.
     * 
     * @param guardiumconnectorv3AddCMRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3AddCMResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3AddCMResponse> guardiumConnectorAddCMWithHttpInfo(Guardiumconnectorv3AddCMRequest guardiumconnectorv3AddCMRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorAddCMValidateBeforeCall(guardiumconnectorv3AddCMRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddCMResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Add CM Description: Add a Central Manager to the tenant database. (asynchronously)
     * 
     * @param guardiumconnectorv3AddCMRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddCMAsync(Guardiumconnectorv3AddCMRequest guardiumconnectorv3AddCMRequest, final ApiCallback<Guardiumconnectorv3AddCMResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorAddCMValidateBeforeCall(guardiumconnectorv3AddCMRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddCMResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorAddDatamarts
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3AddDatamartsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddDatamartsCall(String centralManagerId, Guardiumconnectorv3AddDatamartsRequest guardiumconnectorv3AddDatamartsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3AddDatamartsRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/datamarts"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorAddDatamartsValidateBeforeCall(String centralManagerId, Guardiumconnectorv3AddDatamartsRequest guardiumconnectorv3AddDatamartsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorAddDatamarts(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3AddDatamartsRequest' is set
        if (guardiumconnectorv3AddDatamartsRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3AddDatamartsRequest' when calling guardiumConnectorAddDatamarts(Async)");
        }

        return guardiumConnectorAddDatamartsCall(centralManagerId, guardiumconnectorv3AddDatamartsRequest, _callback);

    }

    /**
     * Description: stores datamarts details from GDP
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3AddDatamartsRequest  (required)
     * @return Guardiumconnectorv3AddDatamartsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3AddDatamartsResponse guardiumConnectorAddDatamarts(String centralManagerId, Guardiumconnectorv3AddDatamartsRequest guardiumconnectorv3AddDatamartsRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3AddDatamartsResponse> localVarResp = guardiumConnectorAddDatamartsWithHttpInfo(centralManagerId, guardiumconnectorv3AddDatamartsRequest);
        return localVarResp.getData();
    }

    /**
     * Description: stores datamarts details from GDP
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3AddDatamartsRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3AddDatamartsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3AddDatamartsResponse> guardiumConnectorAddDatamartsWithHttpInfo(String centralManagerId, Guardiumconnectorv3AddDatamartsRequest guardiumconnectorv3AddDatamartsRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorAddDatamartsValidateBeforeCall(centralManagerId, guardiumconnectorv3AddDatamartsRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddDatamartsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Description: stores datamarts details from GDP (asynchronously)
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3AddDatamartsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddDatamartsAsync(String centralManagerId, Guardiumconnectorv3AddDatamartsRequest guardiumconnectorv3AddDatamartsRequest, final ApiCallback<Guardiumconnectorv3AddDatamartsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorAddDatamartsValidateBeforeCall(centralManagerId, guardiumconnectorv3AddDatamartsRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddDatamartsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorAddDmExclusion
     * @param guardiumconnectorv3AddDmExclusionRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddDmExclusionCall(Guardiumconnectorv3AddDmExclusionRequest guardiumconnectorv3AddDmExclusionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3AddDmExclusionRequest;

        // create path and map variables
        String localVarPath = "/api/v3/datamarts/exclusion_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorAddDmExclusionValidateBeforeCall(Guardiumconnectorv3AddDmExclusionRequest guardiumconnectorv3AddDmExclusionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3AddDmExclusionRequest' is set
        if (guardiumconnectorv3AddDmExclusionRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3AddDmExclusionRequest' when calling guardiumConnectorAddDmExclusion(Async)");
        }

        return guardiumConnectorAddDmExclusionCall(guardiumconnectorv3AddDmExclusionRequest, _callback);

    }

    /**
     * Summary: Add DM exclusion Description: Add datamart to exclusion list.
     * 
     * @param guardiumconnectorv3AddDmExclusionRequest  (required)
     * @return Guardiumconnectorv3AddDmExclusionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3AddDmExclusionResponse guardiumConnectorAddDmExclusion(Guardiumconnectorv3AddDmExclusionRequest guardiumconnectorv3AddDmExclusionRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3AddDmExclusionResponse> localVarResp = guardiumConnectorAddDmExclusionWithHttpInfo(guardiumconnectorv3AddDmExclusionRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Add DM exclusion Description: Add datamart to exclusion list.
     * 
     * @param guardiumconnectorv3AddDmExclusionRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3AddDmExclusionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3AddDmExclusionResponse> guardiumConnectorAddDmExclusionWithHttpInfo(Guardiumconnectorv3AddDmExclusionRequest guardiumconnectorv3AddDmExclusionRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorAddDmExclusionValidateBeforeCall(guardiumconnectorv3AddDmExclusionRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddDmExclusionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Add DM exclusion Description: Add datamart to exclusion list. (asynchronously)
     * 
     * @param guardiumconnectorv3AddDmExclusionRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddDmExclusionAsync(Guardiumconnectorv3AddDmExclusionRequest guardiumconnectorv3AddDmExclusionRequest, final ApiCallback<Guardiumconnectorv3AddDmExclusionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorAddDmExclusionValidateBeforeCall(guardiumconnectorv3AddDmExclusionRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddDmExclusionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorAddTask
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3AddTaskRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddTaskCall(String centralManagerId, Guardiumconnectorv3AddTaskRequest guardiumconnectorv3AddTaskRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3AddTaskRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorAddTaskValidateBeforeCall(String centralManagerId, Guardiumconnectorv3AddTaskRequest guardiumconnectorv3AddTaskRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorAddTask(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3AddTaskRequest' is set
        if (guardiumconnectorv3AddTaskRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3AddTaskRequest' when calling guardiumConnectorAddTask(Async)");
        }

        return guardiumConnectorAddTaskCall(centralManagerId, guardiumconnectorv3AddTaskRequest, _callback);

    }

    /**
     * Summary: Add task Description: Add a task to be executed on GDP.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3AddTaskRequest  (required)
     * @return Guardiumconnectorv3AddTaskResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3AddTaskResponse guardiumConnectorAddTask(String centralManagerId, Guardiumconnectorv3AddTaskRequest guardiumconnectorv3AddTaskRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3AddTaskResponse> localVarResp = guardiumConnectorAddTaskWithHttpInfo(centralManagerId, guardiumconnectorv3AddTaskRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Add task Description: Add a task to be executed on GDP.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3AddTaskRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3AddTaskResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3AddTaskResponse> guardiumConnectorAddTaskWithHttpInfo(String centralManagerId, Guardiumconnectorv3AddTaskRequest guardiumconnectorv3AddTaskRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorAddTaskValidateBeforeCall(centralManagerId, guardiumconnectorv3AddTaskRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddTaskResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Add task Description: Add a task to be executed on GDP. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3AddTaskRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorAddTaskAsync(String centralManagerId, Guardiumconnectorv3AddTaskRequest guardiumconnectorv3AddTaskRequest, final ApiCallback<Guardiumconnectorv3AddTaskResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorAddTaskValidateBeforeCall(centralManagerId, guardiumconnectorv3AddTaskRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3AddTaskResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorBlockUser
     * @param guardiumconnectorv3BlockUserRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorBlockUserCall(Guardiumconnectorv3BlockUserRequest guardiumconnectorv3BlockUserRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3BlockUserRequest;

        // create path and map variables
        String localVarPath = "/api/v3/block_user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorBlockUserValidateBeforeCall(Guardiumconnectorv3BlockUserRequest guardiumconnectorv3BlockUserRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3BlockUserRequest' is set
        if (guardiumconnectorv3BlockUserRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3BlockUserRequest' when calling guardiumConnectorBlockUser(Async)");
        }

        return guardiumConnectorBlockUserCall(guardiumconnectorv3BlockUserRequest, _callback);

    }

    /**
     * Summary: Block user Description: Block a database user on Guardium Data Protection or on a supported Database as a Service instance.
     * 
     * @param guardiumconnectorv3BlockUserRequest  (required)
     * @return Guardiumconnectorv3BlockUserResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3BlockUserResponse guardiumConnectorBlockUser(Guardiumconnectorv3BlockUserRequest guardiumconnectorv3BlockUserRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3BlockUserResponse> localVarResp = guardiumConnectorBlockUserWithHttpInfo(guardiumconnectorv3BlockUserRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Block user Description: Block a database user on Guardium Data Protection or on a supported Database as a Service instance.
     * 
     * @param guardiumconnectorv3BlockUserRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3BlockUserResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3BlockUserResponse> guardiumConnectorBlockUserWithHttpInfo(Guardiumconnectorv3BlockUserRequest guardiumconnectorv3BlockUserRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorBlockUserValidateBeforeCall(guardiumconnectorv3BlockUserRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3BlockUserResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Block user Description: Block a database user on Guardium Data Protection or on a supported Database as a Service instance. (asynchronously)
     * 
     * @param guardiumconnectorv3BlockUserRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorBlockUserAsync(Guardiumconnectorv3BlockUserRequest guardiumconnectorv3BlockUserRequest, final ApiCallback<Guardiumconnectorv3BlockUserResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorBlockUserValidateBeforeCall(guardiumconnectorv3BlockUserRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3BlockUserResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorConfigureAggregatorExport
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureAggregatorExportRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureAggregatorExportCall(String centralManagerId, Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3ConfigureAggregatorExportRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/aggregator_config_export"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorConfigureAggregatorExportValidateBeforeCall(String centralManagerId, Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorConfigureAggregatorExport(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3ConfigureAggregatorExportRequest' is set
        if (guardiumconnectorv3ConfigureAggregatorExportRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3ConfigureAggregatorExportRequest' when calling guardiumConnectorConfigureAggregatorExport(Async)");
        }

        return guardiumConnectorConfigureAggregatorExportCall(centralManagerId, guardiumconnectorv3ConfigureAggregatorExportRequest, _callback);

    }

    /**
     * Summary: Configure aggregator export Description: Configure datamart export from the Aggregators to GI.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureAggregatorExportRequest  (required)
     * @return Guardiumconnectorv3ConfigureAggregatorExportResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3ConfigureAggregatorExportResponse guardiumConnectorConfigureAggregatorExport(String centralManagerId, Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3ConfigureAggregatorExportResponse> localVarResp = guardiumConnectorConfigureAggregatorExportWithHttpInfo(centralManagerId, guardiumconnectorv3ConfigureAggregatorExportRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Configure aggregator export Description: Configure datamart export from the Aggregators to GI.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureAggregatorExportRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3ConfigureAggregatorExportResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3ConfigureAggregatorExportResponse> guardiumConnectorConfigureAggregatorExportWithHttpInfo(String centralManagerId, Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorConfigureAggregatorExportValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureAggregatorExportRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureAggregatorExportResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Configure aggregator export Description: Configure datamart export from the Aggregators to GI. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureAggregatorExportRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureAggregatorExportAsync(String centralManagerId, Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest, final ApiCallback<Guardiumconnectorv3ConfigureAggregatorExportResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorConfigureAggregatorExportValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureAggregatorExportRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureAggregatorExportResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorConfigureCollectorExport
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureCollectorExportRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureCollectorExportCall(String centralManagerId, Guardiumconnectorv3ConfigureCollectorExportRequest guardiumconnectorv3ConfigureCollectorExportRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3ConfigureCollectorExportRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/collector_config_export"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorConfigureCollectorExportValidateBeforeCall(String centralManagerId, Guardiumconnectorv3ConfigureCollectorExportRequest guardiumconnectorv3ConfigureCollectorExportRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorConfigureCollectorExport(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3ConfigureCollectorExportRequest' is set
        if (guardiumconnectorv3ConfigureCollectorExportRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3ConfigureCollectorExportRequest' when calling guardiumConnectorConfigureCollectorExport(Async)");
        }

        return guardiumConnectorConfigureCollectorExportCall(centralManagerId, guardiumconnectorv3ConfigureCollectorExportRequest, _callback);

    }

    /**
     * Summary: Configure collector export Description: Schedule export historical data for collectors.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureCollectorExportRequest  (required)
     * @return Guardiumconnectorv3ConfigureCollectorExportResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3ConfigureCollectorExportResponse guardiumConnectorConfigureCollectorExport(String centralManagerId, Guardiumconnectorv3ConfigureCollectorExportRequest guardiumconnectorv3ConfigureCollectorExportRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3ConfigureCollectorExportResponse> localVarResp = guardiumConnectorConfigureCollectorExportWithHttpInfo(centralManagerId, guardiumconnectorv3ConfigureCollectorExportRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Configure collector export Description: Schedule export historical data for collectors.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureCollectorExportRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3ConfigureCollectorExportResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3ConfigureCollectorExportResponse> guardiumConnectorConfigureCollectorExportWithHttpInfo(String centralManagerId, Guardiumconnectorv3ConfigureCollectorExportRequest guardiumconnectorv3ConfigureCollectorExportRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorConfigureCollectorExportValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureCollectorExportRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureCollectorExportResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Configure collector export Description: Schedule export historical data for collectors. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureCollectorExportRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureCollectorExportAsync(String centralManagerId, Guardiumconnectorv3ConfigureCollectorExportRequest guardiumconnectorv3ConfigureCollectorExportRequest, final ApiCallback<Guardiumconnectorv3ConfigureCollectorExportResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorConfigureCollectorExportValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureCollectorExportRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureCollectorExportResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorConfigureStreaming
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureStreamingRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureStreamingCall(String centralManagerId, Guardiumconnectorv3ConfigureStreamingRequest guardiumconnectorv3ConfigureStreamingRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3ConfigureStreamingRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/streaming"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorConfigureStreamingValidateBeforeCall(String centralManagerId, Guardiumconnectorv3ConfigureStreamingRequest guardiumconnectorv3ConfigureStreamingRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorConfigureStreaming(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3ConfigureStreamingRequest' is set
        if (guardiumconnectorv3ConfigureStreamingRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3ConfigureStreamingRequest' when calling guardiumConnectorConfigureStreaming(Async)");
        }

        return guardiumConnectorConfigureStreamingCall(centralManagerId, guardiumconnectorv3ConfigureStreamingRequest, _callback);

    }

    /**
     * Summary: Configure streaming Description: Enable or disable streaming.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureStreamingRequest  (required)
     * @return Guardiumconnectorv3ConfigureStreamingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3ConfigureStreamingResponse guardiumConnectorConfigureStreaming(String centralManagerId, Guardiumconnectorv3ConfigureStreamingRequest guardiumconnectorv3ConfigureStreamingRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3ConfigureStreamingResponse> localVarResp = guardiumConnectorConfigureStreamingWithHttpInfo(centralManagerId, guardiumconnectorv3ConfigureStreamingRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Configure streaming Description: Enable or disable streaming.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureStreamingRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3ConfigureStreamingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3ConfigureStreamingResponse> guardiumConnectorConfigureStreamingWithHttpInfo(String centralManagerId, Guardiumconnectorv3ConfigureStreamingRequest guardiumconnectorv3ConfigureStreamingRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorConfigureStreamingValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureStreamingRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureStreamingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Configure streaming Description: Enable or disable streaming. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3ConfigureStreamingRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorConfigureStreamingAsync(String centralManagerId, Guardiumconnectorv3ConfigureStreamingRequest guardiumconnectorv3ConfigureStreamingRequest, final ApiCallback<Guardiumconnectorv3ConfigureStreamingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorConfigureStreamingValidateBeforeCall(centralManagerId, guardiumconnectorv3ConfigureStreamingRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3ConfigureStreamingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorDatamartVersionCheck
     * @param centralManagerId Central manager (required)
     * @param guardiumconnectorv3DatamartVersionRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDatamartVersionCheckCall(String centralManagerId, Guardiumconnectorv3DatamartVersionRequest guardiumconnectorv3DatamartVersionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3DatamartVersionRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/datamart_version"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorDatamartVersionCheckValidateBeforeCall(String centralManagerId, Guardiumconnectorv3DatamartVersionRequest guardiumconnectorv3DatamartVersionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorDatamartVersionCheck(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3DatamartVersionRequest' is set
        if (guardiumconnectorv3DatamartVersionRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3DatamartVersionRequest' when calling guardiumConnectorDatamartVersionCheck(Async)");
        }

        return guardiumConnectorDatamartVersionCheckCall(centralManagerId, guardiumconnectorv3DatamartVersionRequest, _callback);

    }

    /**
     * Description: validates if central manager has datamart support for event model
     * 
     * @param centralManagerId Central manager (required)
     * @param guardiumconnectorv3DatamartVersionRequest  (required)
     * @return Guardiumconnectorv3DatamartVersionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DatamartVersionResponse guardiumConnectorDatamartVersionCheck(String centralManagerId, Guardiumconnectorv3DatamartVersionRequest guardiumconnectorv3DatamartVersionRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3DatamartVersionResponse> localVarResp = guardiumConnectorDatamartVersionCheckWithHttpInfo(centralManagerId, guardiumconnectorv3DatamartVersionRequest);
        return localVarResp.getData();
    }

    /**
     * Description: validates if central manager has datamart support for event model
     * 
     * @param centralManagerId Central manager (required)
     * @param guardiumconnectorv3DatamartVersionRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3DatamartVersionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DatamartVersionResponse> guardiumConnectorDatamartVersionCheckWithHttpInfo(String centralManagerId, Guardiumconnectorv3DatamartVersionRequest guardiumconnectorv3DatamartVersionRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorDatamartVersionCheckValidateBeforeCall(centralManagerId, guardiumconnectorv3DatamartVersionRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DatamartVersionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Description: validates if central manager has datamart support for event model (asynchronously)
     * 
     * @param centralManagerId Central manager (required)
     * @param guardiumconnectorv3DatamartVersionRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDatamartVersionCheckAsync(String centralManagerId, Guardiumconnectorv3DatamartVersionRequest guardiumconnectorv3DatamartVersionRequest, final ApiCallback<Guardiumconnectorv3DatamartVersionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorDatamartVersionCheckValidateBeforeCall(centralManagerId, guardiumconnectorv3DatamartVersionRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DatamartVersionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorDeleteCM
     * @param centralManagerId Central Manager ID. (required)
     * @param force Flag to force delete CM and associated tasks (0&#x3D;validate CM is online before deleting, 1&#x3D;force delete CM). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteCMCall(String centralManagerId, Integer force, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (force != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("force", force));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorDeleteCMValidateBeforeCall(String centralManagerId, Integer force, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorDeleteCM(Async)");
        }

        return guardiumConnectorDeleteCMCall(centralManagerId, force, _callback);

    }

    /**
     * Summary: Delete CM Description: Delete a Central Manager by ID (Name, Hostname or IP).
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param force Flag to force delete CM and associated tasks (0&#x3D;validate CM is online before deleting, 1&#x3D;force delete CM). (optional)
     * @return Guardiumconnectorv3DeleteCMResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DeleteCMResponse guardiumConnectorDeleteCM(String centralManagerId, Integer force) throws ApiException {
        ApiResponse<Guardiumconnectorv3DeleteCMResponse> localVarResp = guardiumConnectorDeleteCMWithHttpInfo(centralManagerId, force);
        return localVarResp.getData();
    }

    /**
     * Summary: Delete CM Description: Delete a Central Manager by ID (Name, Hostname or IP).
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param force Flag to force delete CM and associated tasks (0&#x3D;validate CM is online before deleting, 1&#x3D;force delete CM). (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3DeleteCMResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DeleteCMResponse> guardiumConnectorDeleteCMWithHttpInfo(String centralManagerId, Integer force) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorDeleteCMValidateBeforeCall(centralManagerId, force, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteCMResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Delete CM Description: Delete a Central Manager by ID (Name, Hostname or IP). (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param force Flag to force delete CM and associated tasks (0&#x3D;validate CM is online before deleting, 1&#x3D;force delete CM). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteCMAsync(String centralManagerId, Integer force, final ApiCallback<Guardiumconnectorv3DeleteCMResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorDeleteCMValidateBeforeCall(centralManagerId, force, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteCMResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorDeleteDmExclusion
     * @param datamart Datamart name. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteDmExclusionCall(String datamart, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/datamarts/exclusion_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (datamart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("datamart", datamart));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorDeleteDmExclusionValidateBeforeCall(String datamart, final ApiCallback _callback) throws ApiException {
        return guardiumConnectorDeleteDmExclusionCall(datamart, _callback);

    }

    /**
     * Summary: Delete DM exclusion Description: Delete a datamart from exclusion list.
     * 
     * @param datamart Datamart name. (optional)
     * @return Guardiumconnectorv3DeleteDmExclusionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DeleteDmExclusionResponse guardiumConnectorDeleteDmExclusion(String datamart) throws ApiException {
        ApiResponse<Guardiumconnectorv3DeleteDmExclusionResponse> localVarResp = guardiumConnectorDeleteDmExclusionWithHttpInfo(datamart);
        return localVarResp.getData();
    }

    /**
     * Summary: Delete DM exclusion Description: Delete a datamart from exclusion list.
     * 
     * @param datamart Datamart name. (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3DeleteDmExclusionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DeleteDmExclusionResponse> guardiumConnectorDeleteDmExclusionWithHttpInfo(String datamart) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorDeleteDmExclusionValidateBeforeCall(datamart, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteDmExclusionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Delete DM exclusion Description: Delete a datamart from exclusion list. (asynchronously)
     * 
     * @param datamart Datamart name. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteDmExclusionAsync(String datamart, final ApiCallback<Guardiumconnectorv3DeleteDmExclusionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorDeleteDmExclusionValidateBeforeCall(datamart, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteDmExclusionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorDeleteTask
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being deleted. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteTaskCall(String centralManagerId, String taskId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks/{task_id}"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()))
            .replace("{" + "task_id" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorDeleteTaskValidateBeforeCall(String centralManagerId, String taskId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorDeleteTask(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling guardiumConnectorDeleteTask(Async)");
        }

        return guardiumConnectorDeleteTaskCall(centralManagerId, taskId, _callback);

    }

    /**
     * Summary: Delete task Description: Delete a task by central manager id and task id.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being deleted. (required)
     * @return Guardiumconnectorv3DeleteTaskResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DeleteTaskResponse guardiumConnectorDeleteTask(String centralManagerId, String taskId) throws ApiException {
        ApiResponse<Guardiumconnectorv3DeleteTaskResponse> localVarResp = guardiumConnectorDeleteTaskWithHttpInfo(centralManagerId, taskId);
        return localVarResp.getData();
    }

    /**
     * Summary: Delete task Description: Delete a task by central manager id and task id.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being deleted. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3DeleteTaskResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DeleteTaskResponse> guardiumConnectorDeleteTaskWithHttpInfo(String centralManagerId, String taskId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorDeleteTaskValidateBeforeCall(centralManagerId, taskId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteTaskResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Delete task Description: Delete a task by central manager id and task id. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being deleted. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteTaskAsync(String centralManagerId, String taskId, final ApiCallback<Guardiumconnectorv3DeleteTaskResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorDeleteTaskValidateBeforeCall(centralManagerId, taskId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteTaskResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorDeleteTasks
     * @param centralManagerId ID of central manager. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteTasksCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorDeleteTasksValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorDeleteTasks(Async)");
        }

        return guardiumConnectorDeleteTasksCall(centralManagerId, _callback);

    }

    /**
     * Summary: Delete tasks Description: Delete a central manager&#39;s tasks by central manager id.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @return Guardiumconnectorv3DeleteTasksResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DeleteTasksResponse guardiumConnectorDeleteTasks(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3DeleteTasksResponse> localVarResp = guardiumConnectorDeleteTasksWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Delete tasks Description: Delete a central manager&#39;s tasks by central manager id.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3DeleteTasksResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DeleteTasksResponse> guardiumConnectorDeleteTasksWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorDeleteTasksValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteTasksResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Delete tasks Description: Delete a central manager&#39;s tasks by central manager id. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorDeleteTasksAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3DeleteTasksResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorDeleteTasksValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DeleteTasksResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetAggregatorsConfig
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetAggregatorsConfigCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/aggregators_config"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetAggregatorsConfigValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetAggregatorsConfig(Async)");
        }

        return guardiumConnectorGetAggregatorsConfigCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get aggregators config Description: Return a list of managed units from the config collection in tenant database.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return Guardiumconnectorv3GetAggregatorsConfigResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetAggregatorsConfigResponse guardiumConnectorGetAggregatorsConfig(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetAggregatorsConfigResponse> localVarResp = guardiumConnectorGetAggregatorsConfigWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get aggregators config Description: Return a list of managed units from the config collection in tenant database.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetAggregatorsConfigResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetAggregatorsConfigResponse> guardiumConnectorGetAggregatorsConfigWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetAggregatorsConfigValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetAggregatorsConfigResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get aggregators config Description: Return a list of managed units from the config collection in tenant database. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetAggregatorsConfigAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetAggregatorsConfigResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetAggregatorsConfigValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetAggregatorsConfigResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetCMs
     * @param runAdditionalChecks Retrieve the streaming status for all Managed Units that are reporting to a particular Central Manager. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCMsCall(Boolean runAdditionalChecks, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (runAdditionalChecks != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("run_additional_checks", runAdditionalChecks));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetCMsValidateBeforeCall(Boolean runAdditionalChecks, final ApiCallback _callback) throws ApiException {
        return guardiumConnectorGetCMsCall(runAdditionalChecks, _callback);

    }

    /**
     * Summary: Get CMs Description: Return a list of Central Managers from the tenant database with additional processing.
     * 
     * @param runAdditionalChecks Retrieve the streaming status for all Managed Units that are reporting to a particular Central Manager. (optional)
     * @return Guardiumconnectorv3GetCMsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetCMsResponse guardiumConnectorGetCMs(Boolean runAdditionalChecks) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetCMsResponse> localVarResp = guardiumConnectorGetCMsWithHttpInfo(runAdditionalChecks);
        return localVarResp.getData();
    }

    /**
     * Summary: Get CMs Description: Return a list of Central Managers from the tenant database with additional processing.
     * 
     * @param runAdditionalChecks Retrieve the streaming status for all Managed Units that are reporting to a particular Central Manager. (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3GetCMsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetCMsResponse> guardiumConnectorGetCMsWithHttpInfo(Boolean runAdditionalChecks) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetCMsValidateBeforeCall(runAdditionalChecks, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCMsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get CMs Description: Return a list of Central Managers from the tenant database with additional processing. (asynchronously)
     * 
     * @param runAdditionalChecks Retrieve the streaming status for all Managed Units that are reporting to a particular Central Manager. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCMsAsync(Boolean runAdditionalChecks, final ApiCallback<Guardiumconnectorv3GetCMsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetCMsValidateBeforeCall(runAdditionalChecks, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCMsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetCMsConfig
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCMsConfigCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers_config";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetCMsConfigValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return guardiumConnectorGetCMsConfigCall(_callback);

    }

    /**
     * Summary: Get CMs config Description: Return a list of Central Managers from the tenant database.
     * 
     * @return Guardiumconnectorv3GetCMsConfigResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetCMsConfigResponse guardiumConnectorGetCMsConfig() throws ApiException {
        ApiResponse<Guardiumconnectorv3GetCMsConfigResponse> localVarResp = guardiumConnectorGetCMsConfigWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Summary: Get CMs config Description: Return a list of Central Managers from the tenant database.
     * 
     * @return ApiResponse&lt;Guardiumconnectorv3GetCMsConfigResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetCMsConfigResponse> guardiumConnectorGetCMsConfigWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetCMsConfigValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCMsConfigResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get CMs config Description: Return a list of Central Managers from the tenant database. (asynchronously)
     * 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCMsConfigAsync(final ApiCallback<Guardiumconnectorv3GetCMsConfigResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetCMsConfigValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCMsConfigResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetCollectorsConfig
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCollectorsConfigCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/collectors_config"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetCollectorsConfigValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetCollectorsConfig(Async)");
        }

        return guardiumConnectorGetCollectorsConfigCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get collectors config Description: Return the list of collectors configuration from the tenant database.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return Guardiumconnectorv3GetCollectorsConfigResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetCollectorsConfigResponse guardiumConnectorGetCollectorsConfig(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetCollectorsConfigResponse> localVarResp = guardiumConnectorGetCollectorsConfigWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get collectors config Description: Return the list of collectors configuration from the tenant database.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetCollectorsConfigResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetCollectorsConfigResponse> guardiumConnectorGetCollectorsConfigWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetCollectorsConfigValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCollectorsConfigResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get collectors config Description: Return the list of collectors configuration from the tenant database. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetCollectorsConfigAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetCollectorsConfigResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetCollectorsConfigValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetCollectorsConfigResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetDatamarts
     * @param centralManagerId central manager hostname (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetDatamartsCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/datamarts"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetDatamartsValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetDatamarts(Async)");
        }

        return guardiumConnectorGetDatamartsCall(centralManagerId, _callback);

    }

    /**
     * Description: returns full list of supported datamarts including type (historical or non-historical)
     * 
     * @param centralManagerId central manager hostname (required)
     * @return Guardiumconnectorv3GetDatamartsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetDatamartsResponse guardiumConnectorGetDatamarts(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetDatamartsResponse> localVarResp = guardiumConnectorGetDatamartsWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Description: returns full list of supported datamarts including type (historical or non-historical)
     * 
     * @param centralManagerId central manager hostname (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetDatamartsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetDatamartsResponse> guardiumConnectorGetDatamartsWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetDatamartsValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetDatamartsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Description: returns full list of supported datamarts including type (historical or non-historical) (asynchronously)
     * 
     * @param centralManagerId central manager hostname (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetDatamartsAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetDatamartsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetDatamartsValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetDatamartsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetDmExclusion
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetDmExclusionCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/datamarts/exclusion_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetDmExclusionValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return guardiumConnectorGetDmExclusionCall(_callback);

    }

    /**
     * Summary: Get DM exclusion Description: Return datamarts in the exclusion list.
     * 
     * @return Guardiumconnectorv3GetDmExclusionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetDmExclusionResponse guardiumConnectorGetDmExclusion() throws ApiException {
        ApiResponse<Guardiumconnectorv3GetDmExclusionResponse> localVarResp = guardiumConnectorGetDmExclusionWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Summary: Get DM exclusion Description: Return datamarts in the exclusion list.
     * 
     * @return ApiResponse&lt;Guardiumconnectorv3GetDmExclusionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetDmExclusionResponse> guardiumConnectorGetDmExclusionWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetDmExclusionValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetDmExclusionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get DM exclusion Description: Return datamarts in the exclusion list. (asynchronously)
     * 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetDmExclusionAsync(final ApiCallback<Guardiumconnectorv3GetDmExclusionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetDmExclusionValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetDmExclusionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetGdpPolicyInfo
     * @param centralManagerId Central manager hostname (required)
     * @param policyName Policy name. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetGdpPolicyInfoCall(String centralManagerId, String policyName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/policies/info"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (policyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("policy_name", policyName));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetGdpPolicyInfoValidateBeforeCall(String centralManagerId, String policyName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetGdpPolicyInfo(Async)");
        }

        return guardiumConnectorGetGdpPolicyInfoCall(centralManagerId, policyName, _callback);

    }

    /**
     * Summary: Get guardium policy definition Description: returns the policy definition on the cm
     * 
     * @param centralManagerId Central manager hostname (required)
     * @param policyName Policy name. (optional)
     * @return Guardiumconnectorv3GetPolicyInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetPolicyInfoResponse guardiumConnectorGetGdpPolicyInfo(String centralManagerId, String policyName) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetPolicyInfoResponse> localVarResp = guardiumConnectorGetGdpPolicyInfoWithHttpInfo(centralManagerId, policyName);
        return localVarResp.getData();
    }

    /**
     * Summary: Get guardium policy definition Description: returns the policy definition on the cm
     * 
     * @param centralManagerId Central manager hostname (required)
     * @param policyName Policy name. (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3GetPolicyInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetPolicyInfoResponse> guardiumConnectorGetGdpPolicyInfoWithHttpInfo(String centralManagerId, String policyName) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetGdpPolicyInfoValidateBeforeCall(centralManagerId, policyName, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetPolicyInfoResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get guardium policy definition Description: returns the policy definition on the cm (asynchronously)
     * 
     * @param centralManagerId Central manager hostname (required)
     * @param policyName Policy name. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetGdpPolicyInfoAsync(String centralManagerId, String policyName, final ApiCallback<Guardiumconnectorv3GetPolicyInfoResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetGdpPolicyInfoValidateBeforeCall(centralManagerId, policyName, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetPolicyInfoResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetGdpPolicySummaries
     * @param centralManagerId Central manager hostname (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetGdpPolicySummariesCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/policies/summaries"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetGdpPolicySummariesValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetGdpPolicySummaries(Async)");
        }

        return guardiumConnectorGetGdpPolicySummariesCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get guardium policy summary Description: returns the summaries of all policies on that central manager
     * 
     * @param centralManagerId Central manager hostname (required)
     * @return Guardiumconnectorv3GetPolicySummariesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetPolicySummariesResponse guardiumConnectorGetGdpPolicySummaries(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetPolicySummariesResponse> localVarResp = guardiumConnectorGetGdpPolicySummariesWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get guardium policy summary Description: returns the summaries of all policies on that central manager
     * 
     * @param centralManagerId Central manager hostname (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetPolicySummariesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetPolicySummariesResponse> guardiumConnectorGetGdpPolicySummariesWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetGdpPolicySummariesValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetPolicySummariesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get guardium policy summary Description: returns the summaries of all policies on that central manager (asynchronously)
     * 
     * @param centralManagerId Central manager hostname (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetGdpPolicySummariesAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetPolicySummariesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetGdpPolicySummariesValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetPolicySummariesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetHealthInfo
     * @param centralManagerId Central Manager ID. (required)
     * @param useFallback Flag indicating if the older gdp api is to be called in case it doesn&#39;t support new api. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetHealthInfoCall(String centralManagerId, Boolean useFallback, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/health_info"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (useFallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("use_fallback", useFallback));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetHealthInfoValidateBeforeCall(String centralManagerId, Boolean useFallback, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetHealthInfo(Async)");
        }

        return guardiumConnectorGetHealthInfoCall(centralManagerId, useFallback, _callback);

    }

    /**
     * Summary: Get gealth info Description: Get health information from Guardium Data Protection central mamangers.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param useFallback Flag indicating if the older gdp api is to be called in case it doesn&#39;t support new api. (optional)
     * @return Guardiumconnectorv3GetHealthInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetHealthInfoResponse guardiumConnectorGetHealthInfo(String centralManagerId, Boolean useFallback) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetHealthInfoResponse> localVarResp = guardiumConnectorGetHealthInfoWithHttpInfo(centralManagerId, useFallback);
        return localVarResp.getData();
    }

    /**
     * Summary: Get gealth info Description: Get health information from Guardium Data Protection central mamangers.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param useFallback Flag indicating if the older gdp api is to be called in case it doesn&#39;t support new api. (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3GetHealthInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetHealthInfoResponse> guardiumConnectorGetHealthInfoWithHttpInfo(String centralManagerId, Boolean useFallback) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetHealthInfoValidateBeforeCall(centralManagerId, useFallback, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetHealthInfoResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get gealth info Description: Get health information from Guardium Data Protection central mamangers. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param useFallback Flag indicating if the older gdp api is to be called in case it doesn&#39;t support new api. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetHealthInfoAsync(String centralManagerId, Boolean useFallback, final ApiCallback<Guardiumconnectorv3GetHealthInfoResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetHealthInfoValidateBeforeCall(centralManagerId, useFallback, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetHealthInfoResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetLatestDMExtractionProfile
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetLatestDMExtractionProfileCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/datamart_extraction_profile"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetLatestDMExtractionProfileValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetLatestDMExtractionProfile(Async)");
        }

        return guardiumConnectorGetLatestDMExtractionProfileCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get latest DM extraction profile Description: Return the Datamart Extraction Profile for Guardium.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return Guardiumconnectorv3GetLatestDMExtractionProfileResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetLatestDMExtractionProfileResponse guardiumConnectorGetLatestDMExtractionProfile(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetLatestDMExtractionProfileResponse> localVarResp = guardiumConnectorGetLatestDMExtractionProfileWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get latest DM extraction profile Description: Return the Datamart Extraction Profile for Guardium.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetLatestDMExtractionProfileResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetLatestDMExtractionProfileResponse> guardiumConnectorGetLatestDMExtractionProfileWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetLatestDMExtractionProfileValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetLatestDMExtractionProfileResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get latest DM extraction profile Description: Return the Datamart Extraction Profile for Guardium. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetLatestDMExtractionProfileAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetLatestDMExtractionProfileResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetLatestDMExtractionProfileValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetLatestDMExtractionProfileResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetStreamingStatus
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetStreamingStatusCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/streaming"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetStreamingStatusValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetStreamingStatus(Async)");
        }

        return guardiumConnectorGetStreamingStatusCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get streaming status Description: Return the streaming configuration.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return Guardiumconnectorv3GetStreamingStatusResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetStreamingStatusResponse guardiumConnectorGetStreamingStatus(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetStreamingStatusResponse> localVarResp = guardiumConnectorGetStreamingStatusWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get streaming status Description: Return the streaming configuration.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetStreamingStatusResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetStreamingStatusResponse> guardiumConnectorGetStreamingStatusWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetStreamingStatusValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetStreamingStatusResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get streaming status Description: Return the streaming configuration. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetStreamingStatusAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetStreamingStatusResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetStreamingStatusValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetStreamingStatusResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetSyncDMs
     * @param centralManagerId ID of central manager. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetSyncDMsCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/sync"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetSyncDMsValidateBeforeCall(String centralManagerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetSyncDMs(Async)");
        }

        return guardiumConnectorGetSyncDMsCall(centralManagerId, _callback);

    }

    /**
     * Summary: Get sync DMs Description: Return the list of tasks from a central manager.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @return Guardiumconnectorv3GetSyncDMsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetSyncDMsResponse guardiumConnectorGetSyncDMs(String centralManagerId) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetSyncDMsResponse> localVarResp = guardiumConnectorGetSyncDMsWithHttpInfo(centralManagerId);
        return localVarResp.getData();
    }

    /**
     * Summary: Get sync DMs Description: Return the list of tasks from a central manager.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @return ApiResponse&lt;Guardiumconnectorv3GetSyncDMsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetSyncDMsResponse> guardiumConnectorGetSyncDMsWithHttpInfo(String centralManagerId) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetSyncDMsValidateBeforeCall(centralManagerId, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetSyncDMsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get sync DMs Description: Return the list of tasks from a central manager. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetSyncDMsAsync(String centralManagerId, final ApiCallback<Guardiumconnectorv3GetSyncDMsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetSyncDMsValidateBeforeCall(centralManagerId, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetSyncDMsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetTaskTypes
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetTaskTypesCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/task_types";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetTaskTypesValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return guardiumConnectorGetTaskTypesCall(_callback);

    }

    /**
     * Summary: Get task types Description: Return the list of supported task types.
     * 
     * @return Guardiumconnectorv3GetTaskTypesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetTaskTypesResponse guardiumConnectorGetTaskTypes() throws ApiException {
        ApiResponse<Guardiumconnectorv3GetTaskTypesResponse> localVarResp = guardiumConnectorGetTaskTypesWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Summary: Get task types Description: Return the list of supported task types.
     * 
     * @return ApiResponse&lt;Guardiumconnectorv3GetTaskTypesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetTaskTypesResponse> guardiumConnectorGetTaskTypesWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetTaskTypesValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetTaskTypesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get task types Description: Return the list of supported task types. (asynchronously)
     * 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetTaskTypesAsync(final ApiCallback<Guardiumconnectorv3GetTaskTypesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetTaskTypesValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetTaskTypesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorGetTasks
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task. (optional)
     * @param taskType Type of task. (optional)
     * @param keyObject Key object. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetTasksCall(String centralManagerId, String taskId, String taskType, String keyObject, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (taskId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("task_id", taskId));
        }

        if (taskType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("task_type", taskType));
        }

        if (keyObject != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key_object", keyObject));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorGetTasksValidateBeforeCall(String centralManagerId, String taskId, String taskType, String keyObject, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorGetTasks(Async)");
        }

        return guardiumConnectorGetTasksCall(centralManagerId, taskId, taskType, keyObject, _callback);

    }

    /**
     * Summary: Get tasks Description: Return the list of tasks from a central manager.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task. (optional)
     * @param taskType Type of task. (optional)
     * @param keyObject Key object. (optional)
     * @return Guardiumconnectorv3GetTasksResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3GetTasksResponse guardiumConnectorGetTasks(String centralManagerId, String taskId, String taskType, String keyObject) throws ApiException {
        ApiResponse<Guardiumconnectorv3GetTasksResponse> localVarResp = guardiumConnectorGetTasksWithHttpInfo(centralManagerId, taskId, taskType, keyObject);
        return localVarResp.getData();
    }

    /**
     * Summary: Get tasks Description: Return the list of tasks from a central manager.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task. (optional)
     * @param taskType Type of task. (optional)
     * @param keyObject Key object. (optional)
     * @return ApiResponse&lt;Guardiumconnectorv3GetTasksResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3GetTasksResponse> guardiumConnectorGetTasksWithHttpInfo(String centralManagerId, String taskId, String taskType, String keyObject) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorGetTasksValidateBeforeCall(centralManagerId, taskId, taskType, keyObject, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetTasksResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get tasks Description: Return the list of tasks from a central manager. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task. (optional)
     * @param taskType Type of task. (optional)
     * @param keyObject Key object. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorGetTasksAsync(String centralManagerId, String taskId, String taskType, String keyObject, final ApiCallback<Guardiumconnectorv3GetTasksResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorGetTasksValidateBeforeCall(centralManagerId, taskId, taskType, keyObject, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3GetTasksResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorRunGDPReport
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3RunGDPReportRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorRunGDPReportCall(String centralManagerId, Guardiumconnectorv3RunGDPReportRequest guardiumconnectorv3RunGDPReportRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3RunGDPReportRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/run_report"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorRunGDPReportValidateBeforeCall(String centralManagerId, Guardiumconnectorv3RunGDPReportRequest guardiumconnectorv3RunGDPReportRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorRunGDPReport(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3RunGDPReportRequest' is set
        if (guardiumconnectorv3RunGDPReportRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3RunGDPReportRequest' when calling guardiumConnectorRunGDPReport(Async)");
        }

        return guardiumConnectorRunGDPReportCall(centralManagerId, guardiumconnectorv3RunGDPReportRequest, _callback);

    }

    /**
     * Summary: Run GDP report Description: Run GDP report.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3RunGDPReportRequest  (required)
     * @return Guardiumconnectorv3RunGDPReportResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3RunGDPReportResponse guardiumConnectorRunGDPReport(String centralManagerId, Guardiumconnectorv3RunGDPReportRequest guardiumconnectorv3RunGDPReportRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3RunGDPReportResponse> localVarResp = guardiumConnectorRunGDPReportWithHttpInfo(centralManagerId, guardiumconnectorv3RunGDPReportRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Run GDP report Description: Run GDP report.
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3RunGDPReportRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3RunGDPReportResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3RunGDPReportResponse> guardiumConnectorRunGDPReportWithHttpInfo(String centralManagerId, Guardiumconnectorv3RunGDPReportRequest guardiumconnectorv3RunGDPReportRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorRunGDPReportValidateBeforeCall(centralManagerId, guardiumconnectorv3RunGDPReportRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3RunGDPReportResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Run GDP report Description: Run GDP report. (asynchronously)
     * 
     * @param centralManagerId Central Manager ID. (required)
     * @param guardiumconnectorv3RunGDPReportRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorRunGDPReportAsync(String centralManagerId, Guardiumconnectorv3RunGDPReportRequest guardiumconnectorv3RunGDPReportRequest, final ApiCallback<Guardiumconnectorv3RunGDPReportResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorRunGDPReportValidateBeforeCall(centralManagerId, guardiumconnectorv3RunGDPReportRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3RunGDPReportResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorSetupCM
     * @param guardiumconnectorv3SetupCMRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorSetupCMCall(Guardiumconnectorv3SetupCMRequest guardiumconnectorv3SetupCMRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3SetupCMRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/setup";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorSetupCMValidateBeforeCall(Guardiumconnectorv3SetupCMRequest guardiumconnectorv3SetupCMRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3SetupCMRequest' is set
        if (guardiumconnectorv3SetupCMRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3SetupCMRequest' when calling guardiumConnectorSetupCM(Async)");
        }

        return guardiumConnectorSetupCMCall(guardiumconnectorv3SetupCMRequest, _callback);

    }

    /**
     * Summary: Setup CM Description: Set up the registration between a GDP Central manager and Guardium.
     * 
     * @param guardiumconnectorv3SetupCMRequest  (required)
     * @return Guardiumconnectorv3SetupCMResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3SetupCMResponse guardiumConnectorSetupCM(Guardiumconnectorv3SetupCMRequest guardiumconnectorv3SetupCMRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3SetupCMResponse> localVarResp = guardiumConnectorSetupCMWithHttpInfo(guardiumconnectorv3SetupCMRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Setup CM Description: Set up the registration between a GDP Central manager and Guardium.
     * 
     * @param guardiumconnectorv3SetupCMRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3SetupCMResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3SetupCMResponse> guardiumConnectorSetupCMWithHttpInfo(Guardiumconnectorv3SetupCMRequest guardiumconnectorv3SetupCMRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorSetupCMValidateBeforeCall(guardiumconnectorv3SetupCMRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3SetupCMResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Setup CM Description: Set up the registration between a GDP Central manager and Guardium. (asynchronously)
     * 
     * @param guardiumconnectorv3SetupCMRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorSetupCMAsync(Guardiumconnectorv3SetupCMRequest guardiumconnectorv3SetupCMRequest, final ApiCallback<Guardiumconnectorv3SetupCMResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorSetupCMValidateBeforeCall(guardiumconnectorv3SetupCMRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3SetupCMResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorSetupDatamarts
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3SetupDatamartsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorSetupDatamartsCall(String centralManagerId, Guardiumconnectorv3SetupDatamartsRequest guardiumconnectorv3SetupDatamartsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3SetupDatamartsRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/datamarts/setup"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorSetupDatamartsValidateBeforeCall(String centralManagerId, Guardiumconnectorv3SetupDatamartsRequest guardiumconnectorv3SetupDatamartsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorSetupDatamarts(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3SetupDatamartsRequest' is set
        if (guardiumconnectorv3SetupDatamartsRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3SetupDatamartsRequest' when calling guardiumConnectorSetupDatamarts(Async)");
        }

        return guardiumConnectorSetupDatamartsCall(centralManagerId, guardiumconnectorv3SetupDatamartsRequest, _callback);

    }

    /**
     * Description: setup custom datamart execution mode
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3SetupDatamartsRequest  (required)
     * @return Guardiumconnectorv3SetupDatamartsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3SetupDatamartsResponse guardiumConnectorSetupDatamarts(String centralManagerId, Guardiumconnectorv3SetupDatamartsRequest guardiumconnectorv3SetupDatamartsRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3SetupDatamartsResponse> localVarResp = guardiumConnectorSetupDatamartsWithHttpInfo(centralManagerId, guardiumconnectorv3SetupDatamartsRequest);
        return localVarResp.getData();
    }

    /**
     * Description: setup custom datamart execution mode
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3SetupDatamartsRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3SetupDatamartsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3SetupDatamartsResponse> guardiumConnectorSetupDatamartsWithHttpInfo(String centralManagerId, Guardiumconnectorv3SetupDatamartsRequest guardiumconnectorv3SetupDatamartsRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorSetupDatamartsValidateBeforeCall(centralManagerId, guardiumconnectorv3SetupDatamartsRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3SetupDatamartsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Description: setup custom datamart execution mode (asynchronously)
     * 
     * @param centralManagerId central manager (required)
     * @param guardiumconnectorv3SetupDatamartsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorSetupDatamartsAsync(String centralManagerId, Guardiumconnectorv3SetupDatamartsRequest guardiumconnectorv3SetupDatamartsRequest, final ApiCallback<Guardiumconnectorv3SetupDatamartsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorSetupDatamartsValidateBeforeCall(centralManagerId, guardiumconnectorv3SetupDatamartsRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3SetupDatamartsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorTaskError
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3TaskErrorRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorTaskErrorCall(String centralManagerId, Guardiumconnectorv3TaskErrorRequest guardiumconnectorv3TaskErrorRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3TaskErrorRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks/error"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorTaskErrorValidateBeforeCall(String centralManagerId, Guardiumconnectorv3TaskErrorRequest guardiumconnectorv3TaskErrorRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorTaskError(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3TaskErrorRequest' is set
        if (guardiumconnectorv3TaskErrorRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3TaskErrorRequest' when calling guardiumConnectorTaskError(Async)");
        }

        return guardiumConnectorTaskErrorCall(centralManagerId, guardiumconnectorv3TaskErrorRequest, _callback);

    }

    /**
     * Summary: Task error Description: Log error messages from GDP task execution.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3TaskErrorRequest  (required)
     * @return Guardiumconnectorv3TaskErrorResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3TaskErrorResponse guardiumConnectorTaskError(String centralManagerId, Guardiumconnectorv3TaskErrorRequest guardiumconnectorv3TaskErrorRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3TaskErrorResponse> localVarResp = guardiumConnectorTaskErrorWithHttpInfo(centralManagerId, guardiumconnectorv3TaskErrorRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Task error Description: Log error messages from GDP task execution.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3TaskErrorRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3TaskErrorResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3TaskErrorResponse> guardiumConnectorTaskErrorWithHttpInfo(String centralManagerId, Guardiumconnectorv3TaskErrorRequest guardiumconnectorv3TaskErrorRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorTaskErrorValidateBeforeCall(centralManagerId, guardiumconnectorv3TaskErrorRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3TaskErrorResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Task error Description: Log error messages from GDP task execution. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3TaskErrorRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorTaskErrorAsync(String centralManagerId, Guardiumconnectorv3TaskErrorRequest guardiumconnectorv3TaskErrorRequest, final ApiCallback<Guardiumconnectorv3TaskErrorResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorTaskErrorValidateBeforeCall(centralManagerId, guardiumconnectorv3TaskErrorRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3TaskErrorResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorTestDatabaseConnection
     * @param guardiumconnectorv3DatabaseConnectionStringRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorTestDatabaseConnectionCall(Guardiumconnectorv3DatabaseConnectionStringRequest guardiumconnectorv3DatabaseConnectionStringRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3DatabaseConnectionStringRequest;

        // create path and map variables
        String localVarPath = "/api/v3/test_database";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorTestDatabaseConnectionValidateBeforeCall(Guardiumconnectorv3DatabaseConnectionStringRequest guardiumconnectorv3DatabaseConnectionStringRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3DatabaseConnectionStringRequest' is set
        if (guardiumconnectorv3DatabaseConnectionStringRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3DatabaseConnectionStringRequest' when calling guardiumConnectorTestDatabaseConnection(Async)");
        }

        return guardiumConnectorTestDatabaseConnectionCall(guardiumconnectorv3DatabaseConnectionStringRequest, _callback);

    }

    /**
     * Summary: Test database connection Description: Return database connection results.
     * 
     * @param guardiumconnectorv3DatabaseConnectionStringRequest  (required)
     * @return Guardiumconnectorv3DatabaseResultResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3DatabaseResultResponse guardiumConnectorTestDatabaseConnection(Guardiumconnectorv3DatabaseConnectionStringRequest guardiumconnectorv3DatabaseConnectionStringRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3DatabaseResultResponse> localVarResp = guardiumConnectorTestDatabaseConnectionWithHttpInfo(guardiumconnectorv3DatabaseConnectionStringRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Test database connection Description: Return database connection results.
     * 
     * @param guardiumconnectorv3DatabaseConnectionStringRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3DatabaseResultResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3DatabaseResultResponse> guardiumConnectorTestDatabaseConnectionWithHttpInfo(Guardiumconnectorv3DatabaseConnectionStringRequest guardiumconnectorv3DatabaseConnectionStringRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorTestDatabaseConnectionValidateBeforeCall(guardiumconnectorv3DatabaseConnectionStringRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DatabaseResultResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Test database connection Description: Return database connection results. (asynchronously)
     * 
     * @param guardiumconnectorv3DatabaseConnectionStringRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorTestDatabaseConnectionAsync(Guardiumconnectorv3DatabaseConnectionStringRequest guardiumconnectorv3DatabaseConnectionStringRequest, final ApiCallback<Guardiumconnectorv3DatabaseResultResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorTestDatabaseConnectionValidateBeforeCall(guardiumconnectorv3DatabaseConnectionStringRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3DatabaseResultResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorUpdateDmExclusion
     * @param guardiumconnectorv3UpdateDmExclusionRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateDmExclusionCall(Guardiumconnectorv3UpdateDmExclusionRequest guardiumconnectorv3UpdateDmExclusionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3UpdateDmExclusionRequest;

        // create path and map variables
        String localVarPath = "/api/v3/datamarts/exclusion_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorUpdateDmExclusionValidateBeforeCall(Guardiumconnectorv3UpdateDmExclusionRequest guardiumconnectorv3UpdateDmExclusionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'guardiumconnectorv3UpdateDmExclusionRequest' is set
        if (guardiumconnectorv3UpdateDmExclusionRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3UpdateDmExclusionRequest' when calling guardiumConnectorUpdateDmExclusion(Async)");
        }

        return guardiumConnectorUpdateDmExclusionCall(guardiumconnectorv3UpdateDmExclusionRequest, _callback);

    }

    /**
     * Summary: Update DM exclusion Description: Update the atamart exclusion list.
     * 
     * @param guardiumconnectorv3UpdateDmExclusionRequest  (required)
     * @return Guardiumconnectorv3UpdateDmExclusionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3UpdateDmExclusionResponse guardiumConnectorUpdateDmExclusion(Guardiumconnectorv3UpdateDmExclusionRequest guardiumconnectorv3UpdateDmExclusionRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3UpdateDmExclusionResponse> localVarResp = guardiumConnectorUpdateDmExclusionWithHttpInfo(guardiumconnectorv3UpdateDmExclusionRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Update DM exclusion Description: Update the atamart exclusion list.
     * 
     * @param guardiumconnectorv3UpdateDmExclusionRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3UpdateDmExclusionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3UpdateDmExclusionResponse> guardiumConnectorUpdateDmExclusionWithHttpInfo(Guardiumconnectorv3UpdateDmExclusionRequest guardiumconnectorv3UpdateDmExclusionRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorUpdateDmExclusionValidateBeforeCall(guardiumconnectorv3UpdateDmExclusionRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateDmExclusionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Update DM exclusion Description: Update the atamart exclusion list. (asynchronously)
     * 
     * @param guardiumconnectorv3UpdateDmExclusionRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateDmExclusionAsync(Guardiumconnectorv3UpdateDmExclusionRequest guardiumconnectorv3UpdateDmExclusionRequest, final ApiCallback<Guardiumconnectorv3UpdateDmExclusionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorUpdateDmExclusionValidateBeforeCall(guardiumconnectorv3UpdateDmExclusionRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateDmExclusionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorUpdateStreaming
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3UpdateStreamingRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateStreamingCall(String centralManagerId, Guardiumconnectorv3UpdateStreamingRequest guardiumconnectorv3UpdateStreamingRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3UpdateStreamingRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/streaming"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorUpdateStreamingValidateBeforeCall(String centralManagerId, Guardiumconnectorv3UpdateStreamingRequest guardiumconnectorv3UpdateStreamingRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorUpdateStreaming(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3UpdateStreamingRequest' is set
        if (guardiumconnectorv3UpdateStreamingRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3UpdateStreamingRequest' when calling guardiumConnectorUpdateStreaming(Async)");
        }

        return guardiumConnectorUpdateStreamingCall(centralManagerId, guardiumconnectorv3UpdateStreamingRequest, _callback);

    }

    /**
     * Summary: Update streaming Description: Update streaming status into GI.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3UpdateStreamingRequest  (required)
     * @return Guardiumconnectorv3UpdateStreamingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3UpdateStreamingResponse guardiumConnectorUpdateStreaming(String centralManagerId, Guardiumconnectorv3UpdateStreamingRequest guardiumconnectorv3UpdateStreamingRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3UpdateStreamingResponse> localVarResp = guardiumConnectorUpdateStreamingWithHttpInfo(centralManagerId, guardiumconnectorv3UpdateStreamingRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Update streaming Description: Update streaming status into GI.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3UpdateStreamingRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3UpdateStreamingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3UpdateStreamingResponse> guardiumConnectorUpdateStreamingWithHttpInfo(String centralManagerId, Guardiumconnectorv3UpdateStreamingRequest guardiumconnectorv3UpdateStreamingRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorUpdateStreamingValidateBeforeCall(centralManagerId, guardiumconnectorv3UpdateStreamingRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateStreamingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Update streaming Description: Update streaming status into GI. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param guardiumconnectorv3UpdateStreamingRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateStreamingAsync(String centralManagerId, Guardiumconnectorv3UpdateStreamingRequest guardiumconnectorv3UpdateStreamingRequest, final ApiCallback<Guardiumconnectorv3UpdateStreamingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorUpdateStreamingValidateBeforeCall(centralManagerId, guardiumconnectorv3UpdateStreamingRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateStreamingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for guardiumConnectorUpdateTask
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being updated. (required)
     * @param guardiumconnectorv3UpdateTaskRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateTaskCall(String centralManagerId, String taskId, Guardiumconnectorv3UpdateTaskRequest guardiumconnectorv3UpdateTaskRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = guardiumconnectorv3UpdateTaskRequest;

        // create path and map variables
        String localVarPath = "/api/v3/central_managers/{central_manager_id}/tasks/{task_id}"
            .replace("{" + "central_manager_id" + "}", localVarApiClient.escapeString(centralManagerId.toString()))
            .replace("{" + "task_id" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call guardiumConnectorUpdateTaskValidateBeforeCall(String centralManagerId, String taskId, Guardiumconnectorv3UpdateTaskRequest guardiumconnectorv3UpdateTaskRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'centralManagerId' is set
        if (centralManagerId == null) {
            throw new ApiException("Missing the required parameter 'centralManagerId' when calling guardiumConnectorUpdateTask(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling guardiumConnectorUpdateTask(Async)");
        }

        // verify the required parameter 'guardiumconnectorv3UpdateTaskRequest' is set
        if (guardiumconnectorv3UpdateTaskRequest == null) {
            throw new ApiException("Missing the required parameter 'guardiumconnectorv3UpdateTaskRequest' when calling guardiumConnectorUpdateTask(Async)");
        }

        return guardiumConnectorUpdateTaskCall(centralManagerId, taskId, guardiumconnectorv3UpdateTaskRequest, _callback);

    }

    /**
     * Summary: Update task Description: Update a task that gets executed on GDP.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being updated. (required)
     * @param guardiumconnectorv3UpdateTaskRequest  (required)
     * @return Guardiumconnectorv3UpdateTaskResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Guardiumconnectorv3UpdateTaskResponse guardiumConnectorUpdateTask(String centralManagerId, String taskId, Guardiumconnectorv3UpdateTaskRequest guardiumconnectorv3UpdateTaskRequest) throws ApiException {
        ApiResponse<Guardiumconnectorv3UpdateTaskResponse> localVarResp = guardiumConnectorUpdateTaskWithHttpInfo(centralManagerId, taskId, guardiumconnectorv3UpdateTaskRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Update task Description: Update a task that gets executed on GDP.
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being updated. (required)
     * @param guardiumconnectorv3UpdateTaskRequest  (required)
     * @return ApiResponse&lt;Guardiumconnectorv3UpdateTaskResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Guardiumconnectorv3UpdateTaskResponse> guardiumConnectorUpdateTaskWithHttpInfo(String centralManagerId, String taskId, Guardiumconnectorv3UpdateTaskRequest guardiumconnectorv3UpdateTaskRequest) throws ApiException {
        okhttp3.Call localVarCall = guardiumConnectorUpdateTaskValidateBeforeCall(centralManagerId, taskId, guardiumconnectorv3UpdateTaskRequest, null);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateTaskResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Update task Description: Update a task that gets executed on GDP. (asynchronously)
     * 
     * @param centralManagerId ID of central manager. (required)
     * @param taskId ID of task being updated. (required)
     * @param guardiumconnectorv3UpdateTaskRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call guardiumConnectorUpdateTaskAsync(String centralManagerId, String taskId, Guardiumconnectorv3UpdateTaskRequest guardiumconnectorv3UpdateTaskRequest, final ApiCallback<Guardiumconnectorv3UpdateTaskResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = guardiumConnectorUpdateTaskValidateBeforeCall(centralManagerId, taskId, guardiumconnectorv3UpdateTaskRequest, _callback);
        Type localVarReturnType = new TypeToken<Guardiumconnectorv3UpdateTaskResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
