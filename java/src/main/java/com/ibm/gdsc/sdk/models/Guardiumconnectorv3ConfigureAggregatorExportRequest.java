/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.sdk.JSON;

/**
 * ConfigureAggExportRequest definition.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-07T13:24:05.648078332-08:00[America/Los_Angeles]", comments = "Generator version: 7.6.0")
public class Guardiumconnectorv3ConfigureAggregatorExportRequest {
  public static final String SERIALIZED_NAME_CENTRAL_MANAGER_ID = "central_manager_id";
  @SerializedName(SERIALIZED_NAME_CENTRAL_MANAGER_ID)
  private String centralManagerId;

  public static final String SERIALIZED_NAME_DATAMART_END_DATE_AGGREGATOR = "datamart_end_date_aggregator";
  @SerializedName(SERIALIZED_NAME_DATAMART_END_DATE_AGGREGATOR)
  private String datamartEndDateAggregator;

  public static final String SERIALIZED_NAME_DATAMART_START_DATE_AGGREGATOR = "datamart_start_date_aggregator";
  @SerializedName(SERIALIZED_NAME_DATAMART_START_DATE_AGGREGATOR)
  private String datamartStartDateAggregator;

  public static final String SERIALIZED_NAME_MANAGED_UNITS = "managed_units";
  @SerializedName(SERIALIZED_NAME_MANAGED_UNITS)
  private List<String> managedUnits = new ArrayList<>();

  public static final String SERIALIZED_NAME_SKIP_HISTORICAL_DATAMARTS = "skip_historical_datamarts";
  @SerializedName(SERIALIZED_NAME_SKIP_HISTORICAL_DATAMARTS)
  private Boolean skipHistoricalDatamarts;

  public static final String SERIALIZED_NAME_UPDATE_CENTRAL_MANAGER = "update_central_manager";
  @SerializedName(SERIALIZED_NAME_UPDATE_CENTRAL_MANAGER)
  private Boolean updateCentralManager;

  public Guardiumconnectorv3ConfigureAggregatorExportRequest() {
  }

  public Guardiumconnectorv3ConfigureAggregatorExportRequest centralManagerId(String centralManagerId) {
    this.centralManagerId = centralManagerId;
    return this;
  }

   /**
   * Central Manager ID.
   * @return centralManagerId
  **/
  @javax.annotation.Nullable
  public String getCentralManagerId() {
    return centralManagerId;
  }

  public void setCentralManagerId(String centralManagerId) {
    this.centralManagerId = centralManagerId;
  }


  public Guardiumconnectorv3ConfigureAggregatorExportRequest datamartEndDateAggregator(String datamartEndDateAggregator) {
    this.datamartEndDateAggregator = datamartEndDateAggregator;
    return this;
  }

   /**
   * End date for aggregator datamart export.
   * @return datamartEndDateAggregator
  **/
  @javax.annotation.Nullable
  public String getDatamartEndDateAggregator() {
    return datamartEndDateAggregator;
  }

  public void setDatamartEndDateAggregator(String datamartEndDateAggregator) {
    this.datamartEndDateAggregator = datamartEndDateAggregator;
  }


  public Guardiumconnectorv3ConfigureAggregatorExportRequest datamartStartDateAggregator(String datamartStartDateAggregator) {
    this.datamartStartDateAggregator = datamartStartDateAggregator;
    return this;
  }

   /**
   * Start date for aggregator datamart export.
   * @return datamartStartDateAggregator
  **/
  @javax.annotation.Nullable
  public String getDatamartStartDateAggregator() {
    return datamartStartDateAggregator;
  }

  public void setDatamartStartDateAggregator(String datamartStartDateAggregator) {
    this.datamartStartDateAggregator = datamartStartDateAggregator;
  }


  public Guardiumconnectorv3ConfigureAggregatorExportRequest managedUnits(List<String> managedUnits) {
    this.managedUnits = managedUnits;
    return this;
  }

  public Guardiumconnectorv3ConfigureAggregatorExportRequest addManagedUnitsItem(String managedUnitsItem) {
    if (this.managedUnits == null) {
      this.managedUnits = new ArrayList<>();
    }
    this.managedUnits.add(managedUnitsItem);
    return this;
  }

   /**
   * List of managed units to which apply the dm export start/end dates.
   * @return managedUnits
  **/
  @javax.annotation.Nullable
  public List<String> getManagedUnits() {
    return managedUnits;
  }

  public void setManagedUnits(List<String> managedUnits) {
    this.managedUnits = managedUnits;
  }


  public Guardiumconnectorv3ConfigureAggregatorExportRequest skipHistoricalDatamarts(Boolean skipHistoricalDatamarts) {
    this.skipHistoricalDatamarts = skipHistoricalDatamarts;
    return this;
  }

   /**
   * Flag to either skip or include historical datamarts as part of configure streaming API.
   * @return skipHistoricalDatamarts
  **/
  @javax.annotation.Nullable
  public Boolean getSkipHistoricalDatamarts() {
    return skipHistoricalDatamarts;
  }

  public void setSkipHistoricalDatamarts(Boolean skipHistoricalDatamarts) {
    this.skipHistoricalDatamarts = skipHistoricalDatamarts;
  }


  public Guardiumconnectorv3ConfigureAggregatorExportRequest updateCentralManager(Boolean updateCentralManager) {
    this.updateCentralManager = updateCentralManager;
    return this;
  }

   /**
   * Flag to update the cm record with date ranges.
   * @return updateCentralManager
  **/
  @javax.annotation.Nullable
  public Boolean getUpdateCentralManager() {
    return updateCentralManager;
  }

  public void setUpdateCentralManager(Boolean updateCentralManager) {
    this.updateCentralManager = updateCentralManager;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Guardiumconnectorv3ConfigureAggregatorExportRequest guardiumconnectorv3ConfigureAggregatorExportRequest = (Guardiumconnectorv3ConfigureAggregatorExportRequest) o;
    return Objects.equals(this.centralManagerId, guardiumconnectorv3ConfigureAggregatorExportRequest.centralManagerId) &&
        Objects.equals(this.datamartEndDateAggregator, guardiumconnectorv3ConfigureAggregatorExportRequest.datamartEndDateAggregator) &&
        Objects.equals(this.datamartStartDateAggregator, guardiumconnectorv3ConfigureAggregatorExportRequest.datamartStartDateAggregator) &&
        Objects.equals(this.managedUnits, guardiumconnectorv3ConfigureAggregatorExportRequest.managedUnits) &&
        Objects.equals(this.skipHistoricalDatamarts, guardiumconnectorv3ConfigureAggregatorExportRequest.skipHistoricalDatamarts) &&
        Objects.equals(this.updateCentralManager, guardiumconnectorv3ConfigureAggregatorExportRequest.updateCentralManager);
  }

  @Override
  public int hashCode() {
    return Objects.hash(centralManagerId, datamartEndDateAggregator, datamartStartDateAggregator, managedUnits, skipHistoricalDatamarts, updateCentralManager);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Guardiumconnectorv3ConfigureAggregatorExportRequest {\n");
    sb.append("    centralManagerId: ").append(toIndentedString(centralManagerId)).append("\n");
    sb.append("    datamartEndDateAggregator: ").append(toIndentedString(datamartEndDateAggregator)).append("\n");
    sb.append("    datamartStartDateAggregator: ").append(toIndentedString(datamartStartDateAggregator)).append("\n");
    sb.append("    managedUnits: ").append(toIndentedString(managedUnits)).append("\n");
    sb.append("    skipHistoricalDatamarts: ").append(toIndentedString(skipHistoricalDatamarts)).append("\n");
    sb.append("    updateCentralManager: ").append(toIndentedString(updateCentralManager)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("central_manager_id");
    openapiFields.add("datamart_end_date_aggregator");
    openapiFields.add("datamart_start_date_aggregator");
    openapiFields.add("managed_units");
    openapiFields.add("skip_historical_datamarts");
    openapiFields.add("update_central_manager");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Guardiumconnectorv3ConfigureAggregatorExportRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Guardiumconnectorv3ConfigureAggregatorExportRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Guardiumconnectorv3ConfigureAggregatorExportRequest is not found in the empty JSON string", Guardiumconnectorv3ConfigureAggregatorExportRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Guardiumconnectorv3ConfigureAggregatorExportRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Guardiumconnectorv3ConfigureAggregatorExportRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("central_manager_id") != null && !jsonObj.get("central_manager_id").isJsonNull()) && !jsonObj.get("central_manager_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `central_manager_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("central_manager_id").toString()));
      }
      if ((jsonObj.get("datamart_end_date_aggregator") != null && !jsonObj.get("datamart_end_date_aggregator").isJsonNull()) && !jsonObj.get("datamart_end_date_aggregator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datamart_end_date_aggregator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datamart_end_date_aggregator").toString()));
      }
      if ((jsonObj.get("datamart_start_date_aggregator") != null && !jsonObj.get("datamart_start_date_aggregator").isJsonNull()) && !jsonObj.get("datamart_start_date_aggregator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datamart_start_date_aggregator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datamart_start_date_aggregator").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("managed_units") != null && !jsonObj.get("managed_units").isJsonNull() && !jsonObj.get("managed_units").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `managed_units` to be an array in the JSON string but got `%s`", jsonObj.get("managed_units").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Guardiumconnectorv3ConfigureAggregatorExportRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Guardiumconnectorv3ConfigureAggregatorExportRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Guardiumconnectorv3ConfigureAggregatorExportRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Guardiumconnectorv3ConfigureAggregatorExportRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<Guardiumconnectorv3ConfigureAggregatorExportRequest>() {
           @Override
           public void write(JsonWriter out, Guardiumconnectorv3ConfigureAggregatorExportRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Guardiumconnectorv3ConfigureAggregatorExportRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Guardiumconnectorv3ConfigureAggregatorExportRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Guardiumconnectorv3ConfigureAggregatorExportRequest
  * @throws IOException if the JSON string is invalid with respect to Guardiumconnectorv3ConfigureAggregatorExportRequest
  */
  public static Guardiumconnectorv3ConfigureAggregatorExportRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Guardiumconnectorv3ConfigureAggregatorExportRequest.class);
  }

 /**
  * Convert an instance of Guardiumconnectorv3ConfigureAggregatorExportRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

