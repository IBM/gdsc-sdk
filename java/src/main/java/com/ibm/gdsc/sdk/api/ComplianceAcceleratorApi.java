/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.api;

import com.ibm.gdsc.sdk.ApiCallback;
import com.ibm.gdsc.sdk.ApiClient;
import com.ibm.gdsc.sdk.ApiException;
import com.ibm.gdsc.sdk.ApiResponse;
import com.ibm.gdsc.sdk.Configuration;
import com.ibm.gdsc.sdk.Pair;
import com.ibm.gdsc.sdk.ProgressRequestBody;
import com.ibm.gdsc.sdk.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.ibm.gdsc.sdk.models.Complianceacceleratorv3CreateWorkspaceRequest;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3DeleteComplianceWorkspacesResponse;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3GetComplianceInfoResponse;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3HydrateComplianceWorkspacesRequest;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3HydrateComplianceWorkspacesResponse;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3StoreComplianceInfoRequest;
import com.ibm.gdsc.sdk.models.Complianceacceleratorv3StoreComplianceInfoResponse;
import com.ibm.gdsc.sdk.models.RuntimeError;
import com.ibm.gdsc.sdk.models.StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ComplianceAcceleratorApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ComplianceAcceleratorApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ComplianceAcceleratorApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for complianceAcceleratorCreateWorkspace
     * @param complianceacceleratorv3CreateWorkspaceRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response.(streaming responses) </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorCreateWorkspaceCall(Complianceacceleratorv3CreateWorkspaceRequest complianceacceleratorv3CreateWorkspaceRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = complianceacceleratorv3CreateWorkspaceRequest;

        // create path and map variables
        String localVarPath = "/api/v3/compliance/workspace";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call complianceAcceleratorCreateWorkspaceValidateBeforeCall(Complianceacceleratorv3CreateWorkspaceRequest complianceacceleratorv3CreateWorkspaceRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'complianceacceleratorv3CreateWorkspaceRequest' is set
        if (complianceacceleratorv3CreateWorkspaceRequest == null) {
            throw new ApiException("Missing the required parameter 'complianceacceleratorv3CreateWorkspaceRequest' when calling complianceAcceleratorCreateWorkspace(Async)");
        }

        return complianceAcceleratorCreateWorkspaceCall(complianceacceleratorv3CreateWorkspaceRequest, _callback);

    }

    /**
     * Summary: Create workspace Description: Create a workspace.
     * 
     * @param complianceacceleratorv3CreateWorkspaceRequest  (required)
     * @return StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response.(streaming responses) </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse complianceAcceleratorCreateWorkspace(Complianceacceleratorv3CreateWorkspaceRequest complianceacceleratorv3CreateWorkspaceRequest) throws ApiException {
        ApiResponse<StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse> localVarResp = complianceAcceleratorCreateWorkspaceWithHttpInfo(complianceacceleratorv3CreateWorkspaceRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Create workspace Description: Create a workspace.
     * 
     * @param complianceacceleratorv3CreateWorkspaceRequest  (required)
     * @return ApiResponse&lt;StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response.(streaming responses) </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse> complianceAcceleratorCreateWorkspaceWithHttpInfo(Complianceacceleratorv3CreateWorkspaceRequest complianceacceleratorv3CreateWorkspaceRequest) throws ApiException {
        okhttp3.Call localVarCall = complianceAcceleratorCreateWorkspaceValidateBeforeCall(complianceacceleratorv3CreateWorkspaceRequest, null);
        Type localVarReturnType = new TypeToken<StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Create workspace Description: Create a workspace. (asynchronously)
     * 
     * @param complianceacceleratorv3CreateWorkspaceRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response.(streaming responses) </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorCreateWorkspaceAsync(Complianceacceleratorv3CreateWorkspaceRequest complianceacceleratorv3CreateWorkspaceRequest, final ApiCallback<StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = complianceAcceleratorCreateWorkspaceValidateBeforeCall(complianceacceleratorv3CreateWorkspaceRequest, _callback);
        Type localVarReturnType = new TypeToken<StreamResultOfComplianceacceleratorv3CreateWorkspaceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for complianceAcceleratorDeleteComplianceWorkspaces
     * @param regulations Id to be deleted. (optional)
     * @param deleteAll if you want to delete a whole configuration. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorDeleteComplianceWorkspacesCall(List<String> regulations, Boolean deleteAll, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (regulations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "regulations", regulations));
        }

        if (deleteAll != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("deleteAll", deleteAll));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call complianceAcceleratorDeleteComplianceWorkspacesValidateBeforeCall(List<String> regulations, Boolean deleteAll, final ApiCallback _callback) throws ApiException {
        return complianceAcceleratorDeleteComplianceWorkspacesCall(regulations, deleteAll, _callback);

    }

    /**
     * Summary: Delete compliance workspaces Description: Delete workspaces.
     * 
     * @param regulations Id to be deleted. (optional)
     * @param deleteAll if you want to delete a whole configuration. (optional)
     * @return Complianceacceleratorv3DeleteComplianceWorkspacesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Complianceacceleratorv3DeleteComplianceWorkspacesResponse complianceAcceleratorDeleteComplianceWorkspaces(List<String> regulations, Boolean deleteAll) throws ApiException {
        ApiResponse<Complianceacceleratorv3DeleteComplianceWorkspacesResponse> localVarResp = complianceAcceleratorDeleteComplianceWorkspacesWithHttpInfo(regulations, deleteAll);
        return localVarResp.getData();
    }

    /**
     * Summary: Delete compliance workspaces Description: Delete workspaces.
     * 
     * @param regulations Id to be deleted. (optional)
     * @param deleteAll if you want to delete a whole configuration. (optional)
     * @return ApiResponse&lt;Complianceacceleratorv3DeleteComplianceWorkspacesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Complianceacceleratorv3DeleteComplianceWorkspacesResponse> complianceAcceleratorDeleteComplianceWorkspacesWithHttpInfo(List<String> regulations, Boolean deleteAll) throws ApiException {
        okhttp3.Call localVarCall = complianceAcceleratorDeleteComplianceWorkspacesValidateBeforeCall(regulations, deleteAll, null);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3DeleteComplianceWorkspacesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Delete compliance workspaces Description: Delete workspaces. (asynchronously)
     * 
     * @param regulations Id to be deleted. (optional)
     * @param deleteAll if you want to delete a whole configuration. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorDeleteComplianceWorkspacesAsync(List<String> regulations, Boolean deleteAll, final ApiCallback<Complianceacceleratorv3DeleteComplianceWorkspacesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = complianceAcceleratorDeleteComplianceWorkspacesValidateBeforeCall(regulations, deleteAll, _callback);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3DeleteComplianceWorkspacesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for complianceAcceleratorGetComplianceInfo
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorGetComplianceInfoCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call complianceAcceleratorGetComplianceInfoValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return complianceAcceleratorGetComplianceInfoCall(_callback);

    }

    /**
     * Summary: Get compliance info Description: Return stored compliance data.
     * 
     * @return Complianceacceleratorv3GetComplianceInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Complianceacceleratorv3GetComplianceInfoResponse complianceAcceleratorGetComplianceInfo() throws ApiException {
        ApiResponse<Complianceacceleratorv3GetComplianceInfoResponse> localVarResp = complianceAcceleratorGetComplianceInfoWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Summary: Get compliance info Description: Return stored compliance data.
     * 
     * @return ApiResponse&lt;Complianceacceleratorv3GetComplianceInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Complianceacceleratorv3GetComplianceInfoResponse> complianceAcceleratorGetComplianceInfoWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = complianceAcceleratorGetComplianceInfoValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3GetComplianceInfoResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Get compliance info Description: Return stored compliance data. (asynchronously)
     * 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorGetComplianceInfoAsync(final ApiCallback<Complianceacceleratorv3GetComplianceInfoResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = complianceAcceleratorGetComplianceInfoValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3GetComplianceInfoResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for complianceAcceleratorHydrateWorkspace
     * @param complianceacceleratorv3HydrateComplianceWorkspacesRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorHydrateWorkspaceCall(Complianceacceleratorv3HydrateComplianceWorkspacesRequest complianceacceleratorv3HydrateComplianceWorkspacesRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = complianceacceleratorv3HydrateComplianceWorkspacesRequest;

        // create path and map variables
        String localVarPath = "/api/v3/compliance/workspace/hydrate";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call complianceAcceleratorHydrateWorkspaceValidateBeforeCall(Complianceacceleratorv3HydrateComplianceWorkspacesRequest complianceacceleratorv3HydrateComplianceWorkspacesRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'complianceacceleratorv3HydrateComplianceWorkspacesRequest' is set
        if (complianceacceleratorv3HydrateComplianceWorkspacesRequest == null) {
            throw new ApiException("Missing the required parameter 'complianceacceleratorv3HydrateComplianceWorkspacesRequest' when calling complianceAcceleratorHydrateWorkspace(Async)");
        }

        return complianceAcceleratorHydrateWorkspaceCall(complianceacceleratorv3HydrateComplianceWorkspacesRequest, _callback);

    }

    /**
     * HydrateWorkspace - Hydrates specified objects within a workspace
     * 
     * @param complianceacceleratorv3HydrateComplianceWorkspacesRequest  (required)
     * @return Complianceacceleratorv3HydrateComplianceWorkspacesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Complianceacceleratorv3HydrateComplianceWorkspacesResponse complianceAcceleratorHydrateWorkspace(Complianceacceleratorv3HydrateComplianceWorkspacesRequest complianceacceleratorv3HydrateComplianceWorkspacesRequest) throws ApiException {
        ApiResponse<Complianceacceleratorv3HydrateComplianceWorkspacesResponse> localVarResp = complianceAcceleratorHydrateWorkspaceWithHttpInfo(complianceacceleratorv3HydrateComplianceWorkspacesRequest);
        return localVarResp.getData();
    }

    /**
     * HydrateWorkspace - Hydrates specified objects within a workspace
     * 
     * @param complianceacceleratorv3HydrateComplianceWorkspacesRequest  (required)
     * @return ApiResponse&lt;Complianceacceleratorv3HydrateComplianceWorkspacesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Complianceacceleratorv3HydrateComplianceWorkspacesResponse> complianceAcceleratorHydrateWorkspaceWithHttpInfo(Complianceacceleratorv3HydrateComplianceWorkspacesRequest complianceacceleratorv3HydrateComplianceWorkspacesRequest) throws ApiException {
        okhttp3.Call localVarCall = complianceAcceleratorHydrateWorkspaceValidateBeforeCall(complianceacceleratorv3HydrateComplianceWorkspacesRequest, null);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3HydrateComplianceWorkspacesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * HydrateWorkspace - Hydrates specified objects within a workspace (asynchronously)
     * 
     * @param complianceacceleratorv3HydrateComplianceWorkspacesRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorHydrateWorkspaceAsync(Complianceacceleratorv3HydrateComplianceWorkspacesRequest complianceacceleratorv3HydrateComplianceWorkspacesRequest, final ApiCallback<Complianceacceleratorv3HydrateComplianceWorkspacesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = complianceAcceleratorHydrateWorkspaceValidateBeforeCall(complianceacceleratorv3HydrateComplianceWorkspacesRequest, _callback);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3HydrateComplianceWorkspacesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for complianceAcceleratorStoreComplianceInfo
     * @param complianceacceleratorv3StoreComplianceInfoRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorStoreComplianceInfoCall(Complianceacceleratorv3StoreComplianceInfoRequest complianceacceleratorv3StoreComplianceInfoRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = complianceacceleratorv3StoreComplianceInfoRequest;

        // create path and map variables
        String localVarPath = "/api/v3/compliance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuth", "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call complianceAcceleratorStoreComplianceInfoValidateBeforeCall(Complianceacceleratorv3StoreComplianceInfoRequest complianceacceleratorv3StoreComplianceInfoRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'complianceacceleratorv3StoreComplianceInfoRequest' is set
        if (complianceacceleratorv3StoreComplianceInfoRequest == null) {
            throw new ApiException("Missing the required parameter 'complianceacceleratorv3StoreComplianceInfoRequest' when calling complianceAcceleratorStoreComplianceInfo(Async)");
        }

        return complianceAcceleratorStoreComplianceInfoCall(complianceacceleratorv3StoreComplianceInfoRequest, _callback);

    }

    /**
     * Summary: Store compliance info Description: Store compliance data.
     * 
     * @param complianceacceleratorv3StoreComplianceInfoRequest  (required)
     * @return Complianceacceleratorv3StoreComplianceInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public Complianceacceleratorv3StoreComplianceInfoResponse complianceAcceleratorStoreComplianceInfo(Complianceacceleratorv3StoreComplianceInfoRequest complianceacceleratorv3StoreComplianceInfoRequest) throws ApiException {
        ApiResponse<Complianceacceleratorv3StoreComplianceInfoResponse> localVarResp = complianceAcceleratorStoreComplianceInfoWithHttpInfo(complianceacceleratorv3StoreComplianceInfoRequest);
        return localVarResp.getData();
    }

    /**
     * Summary: Store compliance info Description: Store compliance data.
     * 
     * @param complianceacceleratorv3StoreComplianceInfoRequest  (required)
     * @return ApiResponse&lt;Complianceacceleratorv3StoreComplianceInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Complianceacceleratorv3StoreComplianceInfoResponse> complianceAcceleratorStoreComplianceInfoWithHttpInfo(Complianceacceleratorv3StoreComplianceInfoRequest complianceacceleratorv3StoreComplianceInfoRequest) throws ApiException {
        okhttp3.Call localVarCall = complianceAcceleratorStoreComplianceInfoValidateBeforeCall(complianceacceleratorv3StoreComplianceInfoRequest, null);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3StoreComplianceInfoResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Summary: Store compliance info Description: Store compliance data. (asynchronously)
     * 
     * @param complianceacceleratorv3StoreComplianceInfoRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call complianceAcceleratorStoreComplianceInfoAsync(Complianceacceleratorv3StoreComplianceInfoRequest complianceacceleratorv3StoreComplianceInfoRequest, final ApiCallback<Complianceacceleratorv3StoreComplianceInfoResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = complianceAcceleratorStoreComplianceInfoValidateBeforeCall(complianceacceleratorv3StoreComplianceInfoRequest, _callback);
        Type localVarReturnType = new TypeToken<Complianceacceleratorv3StoreComplianceInfoResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
