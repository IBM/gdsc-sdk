/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.JSON;

/**
 * Syslog alerts configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-15T03:58:58.617687Z[UTC]", comments = "Generator version: 7.6.0")
public class Complianceacceleratorv3SyslogConfig {
  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_INCLUDE_Q_RADAR = "include_q_radar";
  @SerializedName(SERIALIZED_NAME_INCLUDE_Q_RADAR)
  private Boolean includeQRadar;

  public static final String SERIALIZED_NAME_IS_DELETION = "is_deletion";
  @SerializedName(SERIALIZED_NAME_IS_DELETION)
  private Boolean isDeletion;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private String protocol;

  public static final String SERIALIZED_NAME_SYSLOG_ID = "syslog_id";
  @SerializedName(SERIALIZED_NAME_SYSLOG_ID)
  private String syslogId;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public Complianceacceleratorv3SyslogConfig() {
  }

  public Complianceacceleratorv3SyslogConfig host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Syslog post.
   * @return host
  **/
  @javax.annotation.Nullable
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }


  public Complianceacceleratorv3SyslogConfig includeQRadar(Boolean includeQRadar) {
    this.includeQRadar = includeQRadar;
    return this;
  }

   /**
   * Is q radar being used.
   * @return includeQRadar
  **/
  @javax.annotation.Nullable
  public Boolean getIncludeQRadar() {
    return includeQRadar;
  }

  public void setIncludeQRadar(Boolean includeQRadar) {
    this.includeQRadar = includeQRadar;
  }


  public Complianceacceleratorv3SyslogConfig isDeletion(Boolean isDeletion) {
    this.isDeletion = isDeletion;
    return this;
  }

   /**
   * The syslog config is being deleted.
   * @return isDeletion
  **/
  @javax.annotation.Nullable
  public Boolean getIsDeletion() {
    return isDeletion;
  }

  public void setIsDeletion(Boolean isDeletion) {
    this.isDeletion = isDeletion;
  }


  public Complianceacceleratorv3SyslogConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Syslog name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Complianceacceleratorv3SyslogConfig port(String port) {
    this.port = port;
    return this;
  }

   /**
   * Syslog port.
   * @return port
  **/
  @javax.annotation.Nullable
  public String getPort() {
    return port;
  }

  public void setPort(String port) {
    this.port = port;
  }


  public Complianceacceleratorv3SyslogConfig protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Syslog protocol UDP || TCP.
   * @return protocol
  **/
  @javax.annotation.Nullable
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public Complianceacceleratorv3SyslogConfig syslogId(String syslogId) {
    this.syslogId = syslogId;
    return this;
  }

   /**
   * Syslog id.
   * @return syslogId
  **/
  @javax.annotation.Nullable
  public String getSyslogId() {
    return syslogId;
  }

  public void setSyslogId(String syslogId) {
    this.syslogId = syslogId;
  }


  public Complianceacceleratorv3SyslogConfig templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Syslog template.
   * @return templateId
  **/
  @javax.annotation.Nullable
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Complianceacceleratorv3SyslogConfig complianceacceleratorv3SyslogConfig = (Complianceacceleratorv3SyslogConfig) o;
    return Objects.equals(this.host, complianceacceleratorv3SyslogConfig.host) &&
        Objects.equals(this.includeQRadar, complianceacceleratorv3SyslogConfig.includeQRadar) &&
        Objects.equals(this.isDeletion, complianceacceleratorv3SyslogConfig.isDeletion) &&
        Objects.equals(this.name, complianceacceleratorv3SyslogConfig.name) &&
        Objects.equals(this.port, complianceacceleratorv3SyslogConfig.port) &&
        Objects.equals(this.protocol, complianceacceleratorv3SyslogConfig.protocol) &&
        Objects.equals(this.syslogId, complianceacceleratorv3SyslogConfig.syslogId) &&
        Objects.equals(this.templateId, complianceacceleratorv3SyslogConfig.templateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(host, includeQRadar, isDeletion, name, port, protocol, syslogId, templateId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Complianceacceleratorv3SyslogConfig {\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    includeQRadar: ").append(toIndentedString(includeQRadar)).append("\n");
    sb.append("    isDeletion: ").append(toIndentedString(isDeletion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    syslogId: ").append(toIndentedString(syslogId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("host");
    openapiFields.add("include_q_radar");
    openapiFields.add("is_deletion");
    openapiFields.add("name");
    openapiFields.add("port");
    openapiFields.add("protocol");
    openapiFields.add("syslog_id");
    openapiFields.add("template_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Complianceacceleratorv3SyslogConfig
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Complianceacceleratorv3SyslogConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Complianceacceleratorv3SyslogConfig is not found in the empty JSON string", Complianceacceleratorv3SyslogConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Complianceacceleratorv3SyslogConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Complianceacceleratorv3SyslogConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("host") != null && !jsonObj.get("host").isJsonNull()) && !jsonObj.get("host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("port") != null && !jsonObj.get("port").isJsonNull()) && !jsonObj.get("port").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `port` to be a primitive type in the JSON string but got `%s`", jsonObj.get("port").toString()));
      }
      if ((jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) && !jsonObj.get("protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol").toString()));
      }
      if ((jsonObj.get("syslog_id") != null && !jsonObj.get("syslog_id").isJsonNull()) && !jsonObj.get("syslog_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslog_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syslog_id").toString()));
      }
      if ((jsonObj.get("template_id") != null && !jsonObj.get("template_id").isJsonNull()) && !jsonObj.get("template_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Complianceacceleratorv3SyslogConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Complianceacceleratorv3SyslogConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Complianceacceleratorv3SyslogConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Complianceacceleratorv3SyslogConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<Complianceacceleratorv3SyslogConfig>() {
           @Override
           public void write(JsonWriter out, Complianceacceleratorv3SyslogConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Complianceacceleratorv3SyslogConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Complianceacceleratorv3SyslogConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Complianceacceleratorv3SyslogConfig
  * @throws IOException if the JSON string is invalid with respect to Complianceacceleratorv3SyslogConfig
  */
  public static Complianceacceleratorv3SyslogConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Complianceacceleratorv3SyslogConfig.class);
  }

 /**
  * Convert an instance of Complianceacceleratorv3SyslogConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

