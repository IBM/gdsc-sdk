/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.JSON;

/**
 * Describes how many data sources are incoming for outlier analytics compared to the overall data sources seen in GI.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-15T03:58:58.617687Z[UTC]", comments = "Generator version: 7.6.0")
public class Outliersenginev3DatasourcesCoverageStats {
  public static final String SERIALIZED_NAME_DATASOURCES_COVERAGE = "datasources_coverage";
  @SerializedName(SERIALIZED_NAME_DATASOURCES_COVERAGE)
  private String datasourcesCoverage;

  public static final String SERIALIZED_NAME_DATASOURCES_IN_GI = "datasources_in_gi";
  @SerializedName(SERIALIZED_NAME_DATASOURCES_IN_GI)
  private Integer datasourcesInGi;

  public static final String SERIALIZED_NAME_DATASOURCES_IN_QUEUE = "datasources_in_queue";
  @SerializedName(SERIALIZED_NAME_DATASOURCES_IN_QUEUE)
  private Integer datasourcesInQueue;

  public Outliersenginev3DatasourcesCoverageStats() {
  }

  public Outliersenginev3DatasourcesCoverageStats datasourcesCoverage(String datasourcesCoverage) {
    this.datasourcesCoverage = datasourcesCoverage;
    return this;
  }

   /**
   * Get datasourcesCoverage
   * @return datasourcesCoverage
  **/
  @javax.annotation.Nullable
  public String getDatasourcesCoverage() {
    return datasourcesCoverage;
  }

  public void setDatasourcesCoverage(String datasourcesCoverage) {
    this.datasourcesCoverage = datasourcesCoverage;
  }


  public Outliersenginev3DatasourcesCoverageStats datasourcesInGi(Integer datasourcesInGi) {
    this.datasourcesInGi = datasourcesInGi;
    return this;
  }

   /**
   * Get datasourcesInGi
   * @return datasourcesInGi
  **/
  @javax.annotation.Nullable
  public Integer getDatasourcesInGi() {
    return datasourcesInGi;
  }

  public void setDatasourcesInGi(Integer datasourcesInGi) {
    this.datasourcesInGi = datasourcesInGi;
  }


  public Outliersenginev3DatasourcesCoverageStats datasourcesInQueue(Integer datasourcesInQueue) {
    this.datasourcesInQueue = datasourcesInQueue;
    return this;
  }

   /**
   * Get datasourcesInQueue
   * @return datasourcesInQueue
  **/
  @javax.annotation.Nullable
  public Integer getDatasourcesInQueue() {
    return datasourcesInQueue;
  }

  public void setDatasourcesInQueue(Integer datasourcesInQueue) {
    this.datasourcesInQueue = datasourcesInQueue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Outliersenginev3DatasourcesCoverageStats outliersenginev3DatasourcesCoverageStats = (Outliersenginev3DatasourcesCoverageStats) o;
    return Objects.equals(this.datasourcesCoverage, outliersenginev3DatasourcesCoverageStats.datasourcesCoverage) &&
        Objects.equals(this.datasourcesInGi, outliersenginev3DatasourcesCoverageStats.datasourcesInGi) &&
        Objects.equals(this.datasourcesInQueue, outliersenginev3DatasourcesCoverageStats.datasourcesInQueue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasourcesCoverage, datasourcesInGi, datasourcesInQueue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Outliersenginev3DatasourcesCoverageStats {\n");
    sb.append("    datasourcesCoverage: ").append(toIndentedString(datasourcesCoverage)).append("\n");
    sb.append("    datasourcesInGi: ").append(toIndentedString(datasourcesInGi)).append("\n");
    sb.append("    datasourcesInQueue: ").append(toIndentedString(datasourcesInQueue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("datasources_coverage");
    openapiFields.add("datasources_in_gi");
    openapiFields.add("datasources_in_queue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Outliersenginev3DatasourcesCoverageStats
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Outliersenginev3DatasourcesCoverageStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Outliersenginev3DatasourcesCoverageStats is not found in the empty JSON string", Outliersenginev3DatasourcesCoverageStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Outliersenginev3DatasourcesCoverageStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Outliersenginev3DatasourcesCoverageStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("datasources_coverage") != null && !jsonObj.get("datasources_coverage").isJsonNull()) && !jsonObj.get("datasources_coverage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasources_coverage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasources_coverage").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Outliersenginev3DatasourcesCoverageStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Outliersenginev3DatasourcesCoverageStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Outliersenginev3DatasourcesCoverageStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Outliersenginev3DatasourcesCoverageStats.class));

       return (TypeAdapter<T>) new TypeAdapter<Outliersenginev3DatasourcesCoverageStats>() {
           @Override
           public void write(JsonWriter out, Outliersenginev3DatasourcesCoverageStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Outliersenginev3DatasourcesCoverageStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Outliersenginev3DatasourcesCoverageStats given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Outliersenginev3DatasourcesCoverageStats
  * @throws IOException if the JSON string is invalid with respect to Outliersenginev3DatasourcesCoverageStats
  */
  public static Outliersenginev3DatasourcesCoverageStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Outliersenginev3DatasourcesCoverageStats.class);
  }

 /**
  * Convert an instance of Outliersenginev3DatasourcesCoverageStats to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

