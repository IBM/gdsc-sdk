/*
 * IBM Guardium Data Security Center
 * IBM Guardium Data Security Center simplifies your organization's Data Security architecture and enables access to long-term data security and compliance data. It provides security teams with risk-based views and alerts, as well as advanced analytics based on proprietary ML technology to uncover hidden threats. IBM Guardium Data Security Center gives security professionals the ability to quickly create data security and audit reports, monitor activity in on-prem and DBaaS sources, and take action from a central location.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.CloudAccountCountInner;
import com.ibm.gdsc.sdk.CloudRegionCountInner;
import com.ibm.gdsc.sdk.TypesCountInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.JSON;

/**
 * FlowNodeSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-15T03:58:58.617687Z[UTC]", comments = "Generator version: 7.6.0")
public class FlowNodeSummary {
  public static final String SERIALIZED_NAME_TYPES_COUNT = "typesCount";
  @SerializedName(SERIALIZED_NAME_TYPES_COUNT)
  private List<TypesCountInner> typesCount = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_ACCOUNTS_COUNT = "cloudAccountsCount";
  @SerializedName(SERIALIZED_NAME_CLOUD_ACCOUNTS_COUNT)
  private List<CloudAccountCountInner> cloudAccountsCount = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_REGIONS_COUNT = "cloudRegionsCount";
  @SerializedName(SERIALIZED_NAME_CLOUD_REGIONS_COUNT)
  private List<CloudRegionCountInner> cloudRegionsCount = new ArrayList<>();

  public FlowNodeSummary() {
  }

  public FlowNodeSummary typesCount(List<TypesCountInner> typesCount) {
    this.typesCount = typesCount;
    return this;
  }

  public FlowNodeSummary addTypesCountItem(TypesCountInner typesCountItem) {
    if (this.typesCount == null) {
      this.typesCount = new ArrayList<>();
    }
    this.typesCount.add(typesCountItem);
    return this;
  }

   /**
   * Get typesCount
   * @return typesCount
  **/
  @javax.annotation.Nonnull
  public List<TypesCountInner> getTypesCount() {
    return typesCount;
  }

  public void setTypesCount(List<TypesCountInner> typesCount) {
    this.typesCount = typesCount;
  }


  public FlowNodeSummary cloudAccountsCount(List<CloudAccountCountInner> cloudAccountsCount) {
    this.cloudAccountsCount = cloudAccountsCount;
    return this;
  }

  public FlowNodeSummary addCloudAccountsCountItem(CloudAccountCountInner cloudAccountsCountItem) {
    if (this.cloudAccountsCount == null) {
      this.cloudAccountsCount = new ArrayList<>();
    }
    this.cloudAccountsCount.add(cloudAccountsCountItem);
    return this;
  }

   /**
   * Get cloudAccountsCount
   * @return cloudAccountsCount
  **/
  @javax.annotation.Nonnull
  public List<CloudAccountCountInner> getCloudAccountsCount() {
    return cloudAccountsCount;
  }

  public void setCloudAccountsCount(List<CloudAccountCountInner> cloudAccountsCount) {
    this.cloudAccountsCount = cloudAccountsCount;
  }


  public FlowNodeSummary cloudRegionsCount(List<CloudRegionCountInner> cloudRegionsCount) {
    this.cloudRegionsCount = cloudRegionsCount;
    return this;
  }

  public FlowNodeSummary addCloudRegionsCountItem(CloudRegionCountInner cloudRegionsCountItem) {
    if (this.cloudRegionsCount == null) {
      this.cloudRegionsCount = new ArrayList<>();
    }
    this.cloudRegionsCount.add(cloudRegionsCountItem);
    return this;
  }

   /**
   * Get cloudRegionsCount
   * @return cloudRegionsCount
  **/
  @javax.annotation.Nonnull
  public List<CloudRegionCountInner> getCloudRegionsCount() {
    return cloudRegionsCount;
  }

  public void setCloudRegionsCount(List<CloudRegionCountInner> cloudRegionsCount) {
    this.cloudRegionsCount = cloudRegionsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowNodeSummary flowNodeSummary = (FlowNodeSummary) o;
    return Objects.equals(this.typesCount, flowNodeSummary.typesCount) &&
        Objects.equals(this.cloudAccountsCount, flowNodeSummary.cloudAccountsCount) &&
        Objects.equals(this.cloudRegionsCount, flowNodeSummary.cloudRegionsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typesCount, cloudAccountsCount, cloudRegionsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowNodeSummary {\n");
    sb.append("    typesCount: ").append(toIndentedString(typesCount)).append("\n");
    sb.append("    cloudAccountsCount: ").append(toIndentedString(cloudAccountsCount)).append("\n");
    sb.append("    cloudRegionsCount: ").append(toIndentedString(cloudRegionsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("typesCount");
    openapiFields.add("cloudAccountsCount");
    openapiFields.add("cloudRegionsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("typesCount");
    openapiRequiredFields.add("cloudAccountsCount");
    openapiRequiredFields.add("cloudRegionsCount");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to FlowNodeSummary
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlowNodeSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlowNodeSummary is not found in the empty JSON string", FlowNodeSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlowNodeSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlowNodeSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : FlowNodeSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("typesCount").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `typesCount` to be an array in the JSON string but got `%s`", jsonObj.get("typesCount").toString()));
      }

      JsonArray jsonArraytypesCount = jsonObj.getAsJsonArray("typesCount");
      // validate the required field `typesCount` (array)
      for (int i = 0; i < jsonArraytypesCount.size(); i++) {
        TypesCountInner.validateJsonElement(jsonArraytypesCount.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("cloudAccountsCount").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudAccountsCount` to be an array in the JSON string but got `%s`", jsonObj.get("cloudAccountsCount").toString()));
      }

      JsonArray jsonArraycloudAccountsCount = jsonObj.getAsJsonArray("cloudAccountsCount");
      // validate the required field `cloudAccountsCount` (array)
      for (int i = 0; i < jsonArraycloudAccountsCount.size(); i++) {
        CloudAccountCountInner.validateJsonElement(jsonArraycloudAccountsCount.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("cloudRegionsCount").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudRegionsCount` to be an array in the JSON string but got `%s`", jsonObj.get("cloudRegionsCount").toString()));
      }

      JsonArray jsonArraycloudRegionsCount = jsonObj.getAsJsonArray("cloudRegionsCount");
      // validate the required field `cloudRegionsCount` (array)
      for (int i = 0; i < jsonArraycloudRegionsCount.size(); i++) {
        CloudRegionCountInner.validateJsonElement(jsonArraycloudRegionsCount.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlowNodeSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlowNodeSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlowNodeSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlowNodeSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<FlowNodeSummary>() {
           @Override
           public void write(JsonWriter out, FlowNodeSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlowNodeSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FlowNodeSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FlowNodeSummary
  * @throws IOException if the JSON string is invalid with respect to FlowNodeSummary
  */
  public static FlowNodeSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlowNodeSummary.class);
  }

 /**
  * Convert an instance of FlowNodeSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

