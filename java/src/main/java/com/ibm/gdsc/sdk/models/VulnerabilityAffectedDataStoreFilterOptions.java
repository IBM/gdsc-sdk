/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.gdsc.sdk.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.gdsc.sdk.models.ServiceProvider;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.gdsc.sdk.JSON;

/**
 * VulnerabilityAffectedDataStoreFilterOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-07T13:24:05.648078332-08:00[America/Los_Angeles]", comments = "Generator version: 7.6.0")
public class VulnerabilityAffectedDataStoreFilterOptions {
  public static final String SERIALIZED_NAME_DATA_STORE_IDS = "dataStoreIds";
  @SerializedName(SERIALIZED_NAME_DATA_STORE_IDS)
  private List<String> dataStoreIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATA_STORE_TYPES = "dataStoreTypes";
  @SerializedName(SERIALIZED_NAME_DATA_STORE_TYPES)
  private List<String> dataStoreTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_PROVIDERS = "cloudProviders";
  @SerializedName(SERIALIZED_NAME_CLOUD_PROVIDERS)
  private List<ServiceProvider> cloudProviders = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_REGIONS = "cloudRegions";
  @SerializedName(SERIALIZED_NAME_CLOUD_REGIONS)
  private List<String> cloudRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEO_LOCATIONS = "geoLocations";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATIONS)
  private List<String> geoLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLOUD_ACCOUNT_IDS = "cloudAccountIds";
  @SerializedName(SERIALIZED_NAME_CLOUD_ACCOUNT_IDS)
  private List<String> cloudAccountIds = new ArrayList<>();

  public VulnerabilityAffectedDataStoreFilterOptions() {
  }

  public VulnerabilityAffectedDataStoreFilterOptions dataStoreIds(List<String> dataStoreIds) {
    this.dataStoreIds = dataStoreIds;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addDataStoreIdsItem(String dataStoreIdsItem) {
    if (this.dataStoreIds == null) {
      this.dataStoreIds = new ArrayList<>();
    }
    this.dataStoreIds.add(dataStoreIdsItem);
    return this;
  }

   /**
   * Get dataStoreIds
   * @return dataStoreIds
  **/
  @javax.annotation.Nullable
  public List<String> getDataStoreIds() {
    return dataStoreIds;
  }

  public void setDataStoreIds(List<String> dataStoreIds) {
    this.dataStoreIds = dataStoreIds;
  }


  public VulnerabilityAffectedDataStoreFilterOptions dataStoreTypes(List<String> dataStoreTypes) {
    this.dataStoreTypes = dataStoreTypes;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addDataStoreTypesItem(String dataStoreTypesItem) {
    if (this.dataStoreTypes == null) {
      this.dataStoreTypes = new ArrayList<>();
    }
    this.dataStoreTypes.add(dataStoreTypesItem);
    return this;
  }

   /**
   * Get dataStoreTypes
   * @return dataStoreTypes
  **/
  @javax.annotation.Nullable
  public List<String> getDataStoreTypes() {
    return dataStoreTypes;
  }

  public void setDataStoreTypes(List<String> dataStoreTypes) {
    this.dataStoreTypes = dataStoreTypes;
  }


  public VulnerabilityAffectedDataStoreFilterOptions cloudProviders(List<ServiceProvider> cloudProviders) {
    this.cloudProviders = cloudProviders;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addCloudProvidersItem(ServiceProvider cloudProvidersItem) {
    if (this.cloudProviders == null) {
      this.cloudProviders = new ArrayList<>();
    }
    this.cloudProviders.add(cloudProvidersItem);
    return this;
  }

   /**
   * Get cloudProviders
   * @return cloudProviders
  **/
  @javax.annotation.Nullable
  public List<ServiceProvider> getCloudProviders() {
    return cloudProviders;
  }

  public void setCloudProviders(List<ServiceProvider> cloudProviders) {
    this.cloudProviders = cloudProviders;
  }


  public VulnerabilityAffectedDataStoreFilterOptions cloudRegions(List<String> cloudRegions) {
    this.cloudRegions = cloudRegions;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addCloudRegionsItem(String cloudRegionsItem) {
    if (this.cloudRegions == null) {
      this.cloudRegions = new ArrayList<>();
    }
    this.cloudRegions.add(cloudRegionsItem);
    return this;
  }

   /**
   * Get cloudRegions
   * @return cloudRegions
  **/
  @javax.annotation.Nullable
  public List<String> getCloudRegions() {
    return cloudRegions;
  }

  public void setCloudRegions(List<String> cloudRegions) {
    this.cloudRegions = cloudRegions;
  }


  public VulnerabilityAffectedDataStoreFilterOptions geoLocations(List<String> geoLocations) {
    this.geoLocations = geoLocations;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addGeoLocationsItem(String geoLocationsItem) {
    if (this.geoLocations == null) {
      this.geoLocations = new ArrayList<>();
    }
    this.geoLocations.add(geoLocationsItem);
    return this;
  }

   /**
   * Get geoLocations
   * @return geoLocations
  **/
  @javax.annotation.Nullable
  public List<String> getGeoLocations() {
    return geoLocations;
  }

  public void setGeoLocations(List<String> geoLocations) {
    this.geoLocations = geoLocations;
  }


  public VulnerabilityAffectedDataStoreFilterOptions cloudAccountIds(List<String> cloudAccountIds) {
    this.cloudAccountIds = cloudAccountIds;
    return this;
  }

  public VulnerabilityAffectedDataStoreFilterOptions addCloudAccountIdsItem(String cloudAccountIdsItem) {
    if (this.cloudAccountIds == null) {
      this.cloudAccountIds = new ArrayList<>();
    }
    this.cloudAccountIds.add(cloudAccountIdsItem);
    return this;
  }

   /**
   * Get cloudAccountIds
   * @return cloudAccountIds
  **/
  @javax.annotation.Nullable
  public List<String> getCloudAccountIds() {
    return cloudAccountIds;
  }

  public void setCloudAccountIds(List<String> cloudAccountIds) {
    this.cloudAccountIds = cloudAccountIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityAffectedDataStoreFilterOptions vulnerabilityAffectedDataStoreFilterOptions = (VulnerabilityAffectedDataStoreFilterOptions) o;
    return Objects.equals(this.dataStoreIds, vulnerabilityAffectedDataStoreFilterOptions.dataStoreIds) &&
        Objects.equals(this.dataStoreTypes, vulnerabilityAffectedDataStoreFilterOptions.dataStoreTypes) &&
        Objects.equals(this.cloudProviders, vulnerabilityAffectedDataStoreFilterOptions.cloudProviders) &&
        Objects.equals(this.cloudRegions, vulnerabilityAffectedDataStoreFilterOptions.cloudRegions) &&
        Objects.equals(this.geoLocations, vulnerabilityAffectedDataStoreFilterOptions.geoLocations) &&
        Objects.equals(this.cloudAccountIds, vulnerabilityAffectedDataStoreFilterOptions.cloudAccountIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStoreIds, dataStoreTypes, cloudProviders, cloudRegions, geoLocations, cloudAccountIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityAffectedDataStoreFilterOptions {\n");
    sb.append("    dataStoreIds: ").append(toIndentedString(dataStoreIds)).append("\n");
    sb.append("    dataStoreTypes: ").append(toIndentedString(dataStoreTypes)).append("\n");
    sb.append("    cloudProviders: ").append(toIndentedString(cloudProviders)).append("\n");
    sb.append("    cloudRegions: ").append(toIndentedString(cloudRegions)).append("\n");
    sb.append("    geoLocations: ").append(toIndentedString(geoLocations)).append("\n");
    sb.append("    cloudAccountIds: ").append(toIndentedString(cloudAccountIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataStoreIds");
    openapiFields.add("dataStoreTypes");
    openapiFields.add("cloudProviders");
    openapiFields.add("cloudRegions");
    openapiFields.add("geoLocations");
    openapiFields.add("cloudAccountIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to VulnerabilityAffectedDataStoreFilterOptions
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VulnerabilityAffectedDataStoreFilterOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VulnerabilityAffectedDataStoreFilterOptions is not found in the empty JSON string", VulnerabilityAffectedDataStoreFilterOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VulnerabilityAffectedDataStoreFilterOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VulnerabilityAffectedDataStoreFilterOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataStoreIds") != null && !jsonObj.get("dataStoreIds").isJsonNull() && !jsonObj.get("dataStoreIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStoreIds` to be an array in the JSON string but got `%s`", jsonObj.get("dataStoreIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataStoreTypes") != null && !jsonObj.get("dataStoreTypes").isJsonNull() && !jsonObj.get("dataStoreTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataStoreTypes` to be an array in the JSON string but got `%s`", jsonObj.get("dataStoreTypes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cloudProviders") != null && !jsonObj.get("cloudProviders").isJsonNull() && !jsonObj.get("cloudProviders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudProviders` to be an array in the JSON string but got `%s`", jsonObj.get("cloudProviders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cloudRegions") != null && !jsonObj.get("cloudRegions").isJsonNull() && !jsonObj.get("cloudRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudRegions` to be an array in the JSON string but got `%s`", jsonObj.get("cloudRegions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("geoLocations") != null && !jsonObj.get("geoLocations").isJsonNull() && !jsonObj.get("geoLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geoLocations` to be an array in the JSON string but got `%s`", jsonObj.get("geoLocations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cloudAccountIds") != null && !jsonObj.get("cloudAccountIds").isJsonNull() && !jsonObj.get("cloudAccountIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudAccountIds` to be an array in the JSON string but got `%s`", jsonObj.get("cloudAccountIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VulnerabilityAffectedDataStoreFilterOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VulnerabilityAffectedDataStoreFilterOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VulnerabilityAffectedDataStoreFilterOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VulnerabilityAffectedDataStoreFilterOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<VulnerabilityAffectedDataStoreFilterOptions>() {
           @Override
           public void write(JsonWriter out, VulnerabilityAffectedDataStoreFilterOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VulnerabilityAffectedDataStoreFilterOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VulnerabilityAffectedDataStoreFilterOptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VulnerabilityAffectedDataStoreFilterOptions
  * @throws IOException if the JSON string is invalid with respect to VulnerabilityAffectedDataStoreFilterOptions
  */
  public static VulnerabilityAffectedDataStoreFilterOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VulnerabilityAffectedDataStoreFilterOptions.class);
  }

 /**
  * Convert an instance of VulnerabilityAffectedDataStoreFilterOptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

