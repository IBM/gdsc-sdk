/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.Workflowv3ProductWorkflow;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Workflowv3EntityDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T18:44:53.377644Z[UTC]", comments = "Generator version: 7.6.0")
public class Workflowv3EntityDefinition {
  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_ENTITY_LABEL = "entity_label";
  @SerializedName(SERIALIZED_NAME_ENTITY_LABEL)
  private String entityLabel;

  public static final String SERIALIZED_NAME_FEATURE_FLAG = "feature_flag";
  @SerializedName(SERIALIZED_NAME_FEATURE_FLAG)
  private String featureFlag;

  public static final String SERIALIZED_NAME_PREVENT_DELETE = "prevent_delete";
  @SerializedName(SERIALIZED_NAME_PREVENT_DELETE)
  private Boolean preventDelete;

  public static final String SERIALIZED_NAME_PRIVILEGE_ID = "privilege_id";
  @SerializedName(SERIALIZED_NAME_PRIVILEGE_ID)
  private String privilegeId;

  public static final String SERIALIZED_NAME_PRIVILEGE_TYPE = "privilege_type";
  @SerializedName(SERIALIZED_NAME_PRIVILEGE_TYPE)
  private String privilegeType;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PRODUCT_LABEL = "product_label";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LABEL)
  private String productLabel;

  public static final String SERIALIZED_NAME_TEMPLATE_ORIGIN = "template_origin";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ORIGIN)
  private String templateOrigin;

  public static final String SERIALIZED_NAME_WORKFLOW = "workflow";
  @SerializedName(SERIALIZED_NAME_WORKFLOW)
  private Workflowv3ProductWorkflow workflow;

  public Workflowv3EntityDefinition() {
  }

  public Workflowv3EntityDefinition disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public Workflowv3EntityDefinition entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @javax.annotation.Nullable
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public Workflowv3EntityDefinition entityLabel(String entityLabel) {
    this.entityLabel = entityLabel;
    return this;
  }

   /**
   * Get entityLabel
   * @return entityLabel
  **/
  @javax.annotation.Nullable
  public String getEntityLabel() {
    return entityLabel;
  }

  public void setEntityLabel(String entityLabel) {
    this.entityLabel = entityLabel;
  }


  public Workflowv3EntityDefinition featureFlag(String featureFlag) {
    this.featureFlag = featureFlag;
    return this;
  }

   /**
   * Get featureFlag
   * @return featureFlag
  **/
  @javax.annotation.Nullable
  public String getFeatureFlag() {
    return featureFlag;
  }

  public void setFeatureFlag(String featureFlag) {
    this.featureFlag = featureFlag;
  }


  public Workflowv3EntityDefinition preventDelete(Boolean preventDelete) {
    this.preventDelete = preventDelete;
    return this;
  }

   /**
   * Optional: if true, the product-entity cannot be deleted. But it can be updated.
   * @return preventDelete
  **/
  @javax.annotation.Nullable
  public Boolean getPreventDelete() {
    return preventDelete;
  }

  public void setPreventDelete(Boolean preventDelete) {
    this.preventDelete = preventDelete;
  }


  public Workflowv3EntityDefinition privilegeId(String privilegeId) {
    this.privilegeId = privilegeId;
    return this;
  }

   /**
   * Get privilegeId
   * @return privilegeId
  **/
  @javax.annotation.Nullable
  public String getPrivilegeId() {
    return privilegeId;
  }

  public void setPrivilegeId(String privilegeId) {
    this.privilegeId = privilegeId;
  }


  public Workflowv3EntityDefinition privilegeType(String privilegeType) {
    this.privilegeType = privilegeType;
    return this;
  }

   /**
   * Get privilegeType
   * @return privilegeType
  **/
  @javax.annotation.Nullable
  public String getPrivilegeType() {
    return privilegeType;
  }

  public void setPrivilegeType(String privilegeType) {
    this.privilegeType = privilegeType;
  }


  public Workflowv3EntityDefinition productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public Workflowv3EntityDefinition productLabel(String productLabel) {
    this.productLabel = productLabel;
    return this;
  }

   /**
   * Get productLabel
   * @return productLabel
  **/
  @javax.annotation.Nullable
  public String getProductLabel() {
    return productLabel;
  }

  public void setProductLabel(String productLabel) {
    this.productLabel = productLabel;
  }


  public Workflowv3EntityDefinition templateOrigin(String templateOrigin) {
    this.templateOrigin = templateOrigin;
    return this;
  }

   /**
   * Get templateOrigin
   * @return templateOrigin
  **/
  @javax.annotation.Nullable
  public String getTemplateOrigin() {
    return templateOrigin;
  }

  public void setTemplateOrigin(String templateOrigin) {
    this.templateOrigin = templateOrigin;
  }


  public Workflowv3EntityDefinition workflow(Workflowv3ProductWorkflow workflow) {
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @javax.annotation.Nullable
  public Workflowv3ProductWorkflow getWorkflow() {
    return workflow;
  }

  public void setWorkflow(Workflowv3ProductWorkflow workflow) {
    this.workflow = workflow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Workflowv3EntityDefinition workflowv3EntityDefinition = (Workflowv3EntityDefinition) o;
    return Objects.equals(this.disabled, workflowv3EntityDefinition.disabled) &&
        Objects.equals(this.entityId, workflowv3EntityDefinition.entityId) &&
        Objects.equals(this.entityLabel, workflowv3EntityDefinition.entityLabel) &&
        Objects.equals(this.featureFlag, workflowv3EntityDefinition.featureFlag) &&
        Objects.equals(this.preventDelete, workflowv3EntityDefinition.preventDelete) &&
        Objects.equals(this.privilegeId, workflowv3EntityDefinition.privilegeId) &&
        Objects.equals(this.privilegeType, workflowv3EntityDefinition.privilegeType) &&
        Objects.equals(this.productId, workflowv3EntityDefinition.productId) &&
        Objects.equals(this.productLabel, workflowv3EntityDefinition.productLabel) &&
        Objects.equals(this.templateOrigin, workflowv3EntityDefinition.templateOrigin) &&
        Objects.equals(this.workflow, workflowv3EntityDefinition.workflow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabled, entityId, entityLabel, featureFlag, preventDelete, privilegeId, privilegeType, productId, productLabel, templateOrigin, workflow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Workflowv3EntityDefinition {\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityLabel: ").append(toIndentedString(entityLabel)).append("\n");
    sb.append("    featureFlag: ").append(toIndentedString(featureFlag)).append("\n");
    sb.append("    preventDelete: ").append(toIndentedString(preventDelete)).append("\n");
    sb.append("    privilegeId: ").append(toIndentedString(privilegeId)).append("\n");
    sb.append("    privilegeType: ").append(toIndentedString(privilegeType)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productLabel: ").append(toIndentedString(productLabel)).append("\n");
    sb.append("    templateOrigin: ").append(toIndentedString(templateOrigin)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("disabled");
    openapiFields.add("entity_id");
    openapiFields.add("entity_label");
    openapiFields.add("feature_flag");
    openapiFields.add("prevent_delete");
    openapiFields.add("privilege_id");
    openapiFields.add("privilege_type");
    openapiFields.add("product_id");
    openapiFields.add("product_label");
    openapiFields.add("template_origin");
    openapiFields.add("workflow");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Workflowv3EntityDefinition
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Workflowv3EntityDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Workflowv3EntityDefinition is not found in the empty JSON string", Workflowv3EntityDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Workflowv3EntityDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Workflowv3EntityDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("entity_id") != null && !jsonObj.get("entity_id").isJsonNull()) && !jsonObj.get("entity_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_id").toString()));
      }
      if ((jsonObj.get("entity_label") != null && !jsonObj.get("entity_label").isJsonNull()) && !jsonObj.get("entity_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entity_label").toString()));
      }
      if ((jsonObj.get("feature_flag") != null && !jsonObj.get("feature_flag").isJsonNull()) && !jsonObj.get("feature_flag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `feature_flag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("feature_flag").toString()));
      }
      if ((jsonObj.get("privilege_id") != null && !jsonObj.get("privilege_id").isJsonNull()) && !jsonObj.get("privilege_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privilege_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privilege_id").toString()));
      }
      if ((jsonObj.get("privilege_type") != null && !jsonObj.get("privilege_type").isJsonNull()) && !jsonObj.get("privilege_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privilege_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privilege_type").toString()));
      }
      if ((jsonObj.get("product_id") != null && !jsonObj.get("product_id").isJsonNull()) && !jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if ((jsonObj.get("product_label") != null && !jsonObj.get("product_label").isJsonNull()) && !jsonObj.get("product_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_label").toString()));
      }
      if ((jsonObj.get("template_origin") != null && !jsonObj.get("template_origin").isJsonNull()) && !jsonObj.get("template_origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_origin").toString()));
      }
      // validate the optional field `workflow`
      if (jsonObj.get("workflow") != null && !jsonObj.get("workflow").isJsonNull()) {
        Workflowv3ProductWorkflow.validateJsonElement(jsonObj.get("workflow"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Workflowv3EntityDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Workflowv3EntityDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Workflowv3EntityDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Workflowv3EntityDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<Workflowv3EntityDefinition>() {
           @Override
           public void write(JsonWriter out, Workflowv3EntityDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Workflowv3EntityDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Workflowv3EntityDefinition given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Workflowv3EntityDefinition
  * @throws IOException if the JSON string is invalid with respect to Workflowv3EntityDefinition
  */
  public static Workflowv3EntityDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Workflowv3EntityDefinition.class);
  }

 /**
  * Convert an instance of Workflowv3EntityDefinition to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

