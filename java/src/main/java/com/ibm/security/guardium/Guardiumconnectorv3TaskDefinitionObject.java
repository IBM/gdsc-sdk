/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Object hold task definition info.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T18:44:53.377644Z[UTC]", comments = "Generator version: 7.6.0")
public class Guardiumconnectorv3TaskDefinitionObject {
  public static final String SERIALIZED_NAME_EXECUTION_TRIGGER = "execution_trigger";
  @SerializedName(SERIALIZED_NAME_EXECUTION_TRIGGER)
  private Integer executionTrigger;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private String interval;

  public static final String SERIALIZED_NAME_IS_BLOCKER_TASK = "is_blocker_task";
  @SerializedName(SERIALIZED_NAME_IS_BLOCKER_TASK)
  private Integer isBlockerTask;

  public static final String SERIALIZED_NAME_TASK_TYPE = "task_type";
  @SerializedName(SERIALIZED_NAME_TASK_TYPE)
  private String taskType;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public Guardiumconnectorv3TaskDefinitionObject() {
  }

  public Guardiumconnectorv3TaskDefinitionObject executionTrigger(Integer executionTrigger) {
    this.executionTrigger = executionTrigger;
    return this;
  }

   /**
   * Tells GDP when to send data.
   * @return executionTrigger
  **/
  @javax.annotation.Nullable
  public Integer getExecutionTrigger() {
    return executionTrigger;
  }

  public void setExecutionTrigger(Integer executionTrigger) {
    this.executionTrigger = executionTrigger;
  }


  public Guardiumconnectorv3TaskDefinitionObject interval(String interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Task interval.
   * @return interval
  **/
  @javax.annotation.Nullable
  public String getInterval() {
    return interval;
  }

  public void setInterval(String interval) {
    this.interval = interval;
  }


  public Guardiumconnectorv3TaskDefinitionObject isBlockerTask(Integer isBlockerTask) {
    this.isBlockerTask = isBlockerTask;
    return this;
  }

   /**
   * Is the task a blocker task.
   * @return isBlockerTask
  **/
  @javax.annotation.Nullable
  public Integer getIsBlockerTask() {
    return isBlockerTask;
  }

  public void setIsBlockerTask(Integer isBlockerTask) {
    this.isBlockerTask = isBlockerTask;
  }


  public Guardiumconnectorv3TaskDefinitionObject taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Task type.
   * @return taskType
  **/
  @javax.annotation.Nullable
  public String getTaskType() {
    return taskType;
  }

  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }


  public Guardiumconnectorv3TaskDefinitionObject version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Task version.
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Guardiumconnectorv3TaskDefinitionObject guardiumconnectorv3TaskDefinitionObject = (Guardiumconnectorv3TaskDefinitionObject) o;
    return Objects.equals(this.executionTrigger, guardiumconnectorv3TaskDefinitionObject.executionTrigger) &&
        Objects.equals(this.interval, guardiumconnectorv3TaskDefinitionObject.interval) &&
        Objects.equals(this.isBlockerTask, guardiumconnectorv3TaskDefinitionObject.isBlockerTask) &&
        Objects.equals(this.taskType, guardiumconnectorv3TaskDefinitionObject.taskType) &&
        Objects.equals(this.version, guardiumconnectorv3TaskDefinitionObject.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executionTrigger, interval, isBlockerTask, taskType, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Guardiumconnectorv3TaskDefinitionObject {\n");
    sb.append("    executionTrigger: ").append(toIndentedString(executionTrigger)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    isBlockerTask: ").append(toIndentedString(isBlockerTask)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("execution_trigger");
    openapiFields.add("interval");
    openapiFields.add("is_blocker_task");
    openapiFields.add("task_type");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Guardiumconnectorv3TaskDefinitionObject
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Guardiumconnectorv3TaskDefinitionObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Guardiumconnectorv3TaskDefinitionObject is not found in the empty JSON string", Guardiumconnectorv3TaskDefinitionObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Guardiumconnectorv3TaskDefinitionObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Guardiumconnectorv3TaskDefinitionObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("interval") != null && !jsonObj.get("interval").isJsonNull()) && !jsonObj.get("interval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interval").toString()));
      }
      if ((jsonObj.get("task_type") != null && !jsonObj.get("task_type").isJsonNull()) && !jsonObj.get("task_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_type").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Guardiumconnectorv3TaskDefinitionObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Guardiumconnectorv3TaskDefinitionObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Guardiumconnectorv3TaskDefinitionObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Guardiumconnectorv3TaskDefinitionObject.class));

       return (TypeAdapter<T>) new TypeAdapter<Guardiumconnectorv3TaskDefinitionObject>() {
           @Override
           public void write(JsonWriter out, Guardiumconnectorv3TaskDefinitionObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Guardiumconnectorv3TaskDefinitionObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Guardiumconnectorv3TaskDefinitionObject given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Guardiumconnectorv3TaskDefinitionObject
  * @throws IOException if the JSON string is invalid with respect to Guardiumconnectorv3TaskDefinitionObject
  */
  public static Guardiumconnectorv3TaskDefinitionObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Guardiumconnectorv3TaskDefinitionObject.class);
  }

 /**
  * Convert an instance of Guardiumconnectorv3TaskDefinitionObject to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

