/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.Groupbuilderv3GroupMember;
import com.ibm.security.guardium.Groupbuilderv3LdapConfig;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Group info for compliance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T18:44:53.377644Z[UTC]", comments = "Generator version: 7.6.0")
public class Complianceacceleratorv3Group {
  public static final String SERIALIZED_NAME_DESC = "desc";
  @SerializedName(SERIALIZED_NAME_DESC)
  private String desc;

  public static final String SERIALIZED_NAME_GROUP_TYPE_ID = "group_type_id";
  @SerializedName(SERIALIZED_NAME_GROUP_TYPE_ID)
  private Integer groupTypeId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LDAP_CONFIG = "ldap_config";
  @SerializedName(SERIALIZED_NAME_LDAP_CONFIG)
  private Groupbuilderv3LdapConfig ldapConfig;

  public static final String SERIALIZED_NAME_MEMBERS = "members";
  @SerializedName(SERIALIZED_NAME_MEMBERS)
  private List<Groupbuilderv3GroupMember> members = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMBERS_TO_ADD = "members_to_add";
  @SerializedName(SERIALIZED_NAME_MEMBERS_TO_ADD)
  private List<String> membersToAdd = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMBERS_TO_DELETE = "members_to_delete";
  @SerializedName(SERIALIZED_NAME_MEMBERS_TO_DELETE)
  private List<Groupbuilderv3GroupMember> membersToDelete = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private Boolean parent;

  public Complianceacceleratorv3Group() {
  }

  public Complianceacceleratorv3Group desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @javax.annotation.Nullable
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }


  public Complianceacceleratorv3Group groupTypeId(Integer groupTypeId) {
    this.groupTypeId = groupTypeId;
    return this;
  }

   /**
   * Group type ID.
   * @return groupTypeId
  **/
  @javax.annotation.Nullable
  public Integer getGroupTypeId() {
    return groupTypeId;
  }

  public void setGroupTypeId(Integer groupTypeId) {
    this.groupTypeId = groupTypeId;
  }


  public Complianceacceleratorv3Group id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id of group.
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public Complianceacceleratorv3Group ldapConfig(Groupbuilderv3LdapConfig ldapConfig) {
    this.ldapConfig = ldapConfig;
    return this;
  }

   /**
   * Get ldapConfig
   * @return ldapConfig
  **/
  @javax.annotation.Nullable
  public Groupbuilderv3LdapConfig getLdapConfig() {
    return ldapConfig;
  }

  public void setLdapConfig(Groupbuilderv3LdapConfig ldapConfig) {
    this.ldapConfig = ldapConfig;
  }


  public Complianceacceleratorv3Group members(List<Groupbuilderv3GroupMember> members) {
    this.members = members;
    return this;
  }

  public Complianceacceleratorv3Group addMembersItem(Groupbuilderv3GroupMember membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * Group members.
   * @return members
  **/
  @javax.annotation.Nullable
  public List<Groupbuilderv3GroupMember> getMembers() {
    return members;
  }

  public void setMembers(List<Groupbuilderv3GroupMember> members) {
    this.members = members;
  }


  public Complianceacceleratorv3Group membersToAdd(List<String> membersToAdd) {
    this.membersToAdd = membersToAdd;
    return this;
  }

  public Complianceacceleratorv3Group addMembersToAddItem(String membersToAddItem) {
    if (this.membersToAdd == null) {
      this.membersToAdd = new ArrayList<>();
    }
    this.membersToAdd.add(membersToAddItem);
    return this;
  }

   /**
   * Members of the groups to be stored.
   * @return membersToAdd
  **/
  @javax.annotation.Nullable
  public List<String> getMembersToAdd() {
    return membersToAdd;
  }

  public void setMembersToAdd(List<String> membersToAdd) {
    this.membersToAdd = membersToAdd;
  }


  public Complianceacceleratorv3Group membersToDelete(List<Groupbuilderv3GroupMember> membersToDelete) {
    this.membersToDelete = membersToDelete;
    return this;
  }

  public Complianceacceleratorv3Group addMembersToDeleteItem(Groupbuilderv3GroupMember membersToDeleteItem) {
    if (this.membersToDelete == null) {
      this.membersToDelete = new ArrayList<>();
    }
    this.membersToDelete.add(membersToDeleteItem);
    return this;
  }

   /**
   * Member ids to be deleted.
   * @return membersToDelete
  **/
  @javax.annotation.Nullable
  public List<Groupbuilderv3GroupMember> getMembersToDelete() {
    return membersToDelete;
  }

  public void setMembersToDelete(List<Groupbuilderv3GroupMember> membersToDelete) {
    this.membersToDelete = membersToDelete;
  }


  public Complianceacceleratorv3Group name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of group.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Complianceacceleratorv3Group parent(Boolean parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  public Boolean getParent() {
    return parent;
  }

  public void setParent(Boolean parent) {
    this.parent = parent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Complianceacceleratorv3Group complianceacceleratorv3Group = (Complianceacceleratorv3Group) o;
    return Objects.equals(this.desc, complianceacceleratorv3Group.desc) &&
        Objects.equals(this.groupTypeId, complianceacceleratorv3Group.groupTypeId) &&
        Objects.equals(this.id, complianceacceleratorv3Group.id) &&
        Objects.equals(this.ldapConfig, complianceacceleratorv3Group.ldapConfig) &&
        Objects.equals(this.members, complianceacceleratorv3Group.members) &&
        Objects.equals(this.membersToAdd, complianceacceleratorv3Group.membersToAdd) &&
        Objects.equals(this.membersToDelete, complianceacceleratorv3Group.membersToDelete) &&
        Objects.equals(this.name, complianceacceleratorv3Group.name) &&
        Objects.equals(this.parent, complianceacceleratorv3Group.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desc, groupTypeId, id, ldapConfig, members, membersToAdd, membersToDelete, name, parent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Complianceacceleratorv3Group {\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    groupTypeId: ").append(toIndentedString(groupTypeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ldapConfig: ").append(toIndentedString(ldapConfig)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    membersToAdd: ").append(toIndentedString(membersToAdd)).append("\n");
    sb.append("    membersToDelete: ").append(toIndentedString(membersToDelete)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("desc");
    openapiFields.add("group_type_id");
    openapiFields.add("id");
    openapiFields.add("ldap_config");
    openapiFields.add("members");
    openapiFields.add("members_to_add");
    openapiFields.add("members_to_delete");
    openapiFields.add("name");
    openapiFields.add("parent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Complianceacceleratorv3Group
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Complianceacceleratorv3Group.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Complianceacceleratorv3Group is not found in the empty JSON string", Complianceacceleratorv3Group.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Complianceacceleratorv3Group.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Complianceacceleratorv3Group` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("desc") != null && !jsonObj.get("desc").isJsonNull()) && !jsonObj.get("desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("desc").toString()));
      }
      // validate the optional field `ldap_config`
      if (jsonObj.get("ldap_config") != null && !jsonObj.get("ldap_config").isJsonNull()) {
        Groupbuilderv3LdapConfig.validateJsonElement(jsonObj.get("ldap_config"));
      }
      if (jsonObj.get("members") != null && !jsonObj.get("members").isJsonNull()) {
        JsonArray jsonArraymembers = jsonObj.getAsJsonArray("members");
        if (jsonArraymembers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("members").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `members` to be an array in the JSON string but got `%s`", jsonObj.get("members").toString()));
          }

          // validate the optional field `members` (array)
          for (int i = 0; i < jsonArraymembers.size(); i++) {
            Groupbuilderv3GroupMember.validateJsonElement(jsonArraymembers.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("members_to_add") != null && !jsonObj.get("members_to_add").isJsonNull() && !jsonObj.get("members_to_add").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `members_to_add` to be an array in the JSON string but got `%s`", jsonObj.get("members_to_add").toString()));
      }
      if (jsonObj.get("members_to_delete") != null && !jsonObj.get("members_to_delete").isJsonNull()) {
        JsonArray jsonArraymembersToDelete = jsonObj.getAsJsonArray("members_to_delete");
        if (jsonArraymembersToDelete != null) {
          // ensure the json data is an array
          if (!jsonObj.get("members_to_delete").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `members_to_delete` to be an array in the JSON string but got `%s`", jsonObj.get("members_to_delete").toString()));
          }

          // validate the optional field `members_to_delete` (array)
          for (int i = 0; i < jsonArraymembersToDelete.size(); i++) {
            Groupbuilderv3GroupMember.validateJsonElement(jsonArraymembersToDelete.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Complianceacceleratorv3Group.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Complianceacceleratorv3Group' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Complianceacceleratorv3Group> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Complianceacceleratorv3Group.class));

       return (TypeAdapter<T>) new TypeAdapter<Complianceacceleratorv3Group>() {
           @Override
           public void write(JsonWriter out, Complianceacceleratorv3Group value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Complianceacceleratorv3Group read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Complianceacceleratorv3Group given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Complianceacceleratorv3Group
  * @throws IOException if the JSON string is invalid with respect to Complianceacceleratorv3Group
  */
  public static Complianceacceleratorv3Group fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Complianceacceleratorv3Group.class);
  }

 /**
  * Convert an instance of Complianceacceleratorv3Group to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

