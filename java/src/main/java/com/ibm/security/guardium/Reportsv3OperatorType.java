/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * OperatorType - available field operators.
 */
@JsonAdapter(Reportsv3OperatorType.Adapter.class)
public enum Reportsv3OperatorType {
  
  UNDEFINED_OPERATOR_TYPE("UNDEFINED_OPERATOR_TYPE"),
  
  IN_GROUP("IN_GROUP"),
  
  IS_NULL("IS_NULL"),
  
  IS_NOT_NULL("IS_NOT_NULL"),
  
  LESS_THAN("LESS_THAN"),
  
  LESS_THAN_OR_EQUAL("LESS_THAN_OR_EQUAL"),
  
  GREATER_THAN("GREATER_THAN"),
  
  GREATER_THAN_OR_EQUAL("GREATER_THAN_OR_EQUAL"),
  
  EQUAL("EQUAL"),
  
  NOT_EQUAL("NOT_EQUAL"),
  
  LIKE("LIKE"),
  
  NOT_IN_GROUP("NOT_IN_GROUP"),
  
  NOT_LIKE("NOT_LIKE"),
  
  LIKE_GROUP("LIKE_GROUP"),
  
  NOT_LIKE_GROUP("NOT_LIKE_GROUP"),
  
  IN_LIST("IN_LIST"),
  
  IN_REPORT("IN_REPORT"),
  
  NOT_IN_REPORT("NOT_IN_REPORT");

  private String value;

  Reportsv3OperatorType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Reportsv3OperatorType fromValue(String value) {
    for (Reportsv3OperatorType b : Reportsv3OperatorType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Reportsv3OperatorType> {
    @Override
    public void write(final JsonWriter jsonWriter, final Reportsv3OperatorType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Reportsv3OperatorType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Reportsv3OperatorType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Reportsv3OperatorType.fromValue(value);
  }
}

