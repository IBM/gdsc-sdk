/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ibm.security.guardium.ProtobufAny;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Qspmdatamanagerv3MasterDataModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-27T16:17:29.841502Z[UTC]", comments = "Generator version: 7.6.0")
public class Qspmdatamanagerv3MasterDataModel {
  public static final String SERIALIZED_NAME_CREATION_TS = "creation_ts";
  @SerializedName(SERIALIZED_NAME_CREATION_TS)
  private OffsetDateTime creationTs;

  public static final String SERIALIZED_NAME_REF_DESC = "ref_desc";
  @SerializedName(SERIALIZED_NAME_REF_DESC)
  private String refDesc;

  public static final String SERIALIZED_NAME_REF_HAS_SCHEMA = "ref_has_schema";
  @SerializedName(SERIALIZED_NAME_REF_HAS_SCHEMA)
  private Boolean refHasSchema;

  public static final String SERIALIZED_NAME_REF_ID = "ref_id";
  @SerializedName(SERIALIZED_NAME_REF_ID)
  private String refId;

  public static final String SERIALIZED_NAME_REF_NAME = "ref_name";
  @SerializedName(SERIALIZED_NAME_REF_NAME)
  private String refName;

  public static final String SERIALIZED_NAME_REF_SCHEMA = "ref_schema";
  @SerializedName(SERIALIZED_NAME_REF_SCHEMA)
  private ProtobufAny refSchema;

  public static final String SERIALIZED_NAME_REF_TYPE = "ref_type";
  @SerializedName(SERIALIZED_NAME_REF_TYPE)
  private String refType;

  public static final String SERIALIZED_NAME_REF_VALUE = "ref_value";
  @SerializedName(SERIALIZED_NAME_REF_VALUE)
  private String refValue;

  public static final String SERIALIZED_NAME_REF_VERSION = "ref_version";
  @SerializedName(SERIALIZED_NAME_REF_VERSION)
  private String refVersion;

  public static final String SERIALIZED_NAME_UPDATION_TS = "updation_ts";
  @SerializedName(SERIALIZED_NAME_UPDATION_TS)
  private OffsetDateTime updationTs;

  public Qspmdatamanagerv3MasterDataModel() {
  }

  public Qspmdatamanagerv3MasterDataModel creationTs(OffsetDateTime creationTs) {
    this.creationTs = creationTs;
    return this;
  }

   /**
   * Get creationTs
   * @return creationTs
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTs() {
    return creationTs;
  }

  public void setCreationTs(OffsetDateTime creationTs) {
    this.creationTs = creationTs;
  }


  public Qspmdatamanagerv3MasterDataModel refDesc(String refDesc) {
    this.refDesc = refDesc;
    return this;
  }

   /**
   * Get refDesc
   * @return refDesc
  **/
  @javax.annotation.Nullable
  public String getRefDesc() {
    return refDesc;
  }

  public void setRefDesc(String refDesc) {
    this.refDesc = refDesc;
  }


  public Qspmdatamanagerv3MasterDataModel refHasSchema(Boolean refHasSchema) {
    this.refHasSchema = refHasSchema;
    return this;
  }

   /**
   * Get refHasSchema
   * @return refHasSchema
  **/
  @javax.annotation.Nullable
  public Boolean getRefHasSchema() {
    return refHasSchema;
  }

  public void setRefHasSchema(Boolean refHasSchema) {
    this.refHasSchema = refHasSchema;
  }


  public Qspmdatamanagerv3MasterDataModel refId(String refId) {
    this.refId = refId;
    return this;
  }

   /**
   * Get refId
   * @return refId
  **/
  @javax.annotation.Nullable
  public String getRefId() {
    return refId;
  }

  public void setRefId(String refId) {
    this.refId = refId;
  }


  public Qspmdatamanagerv3MasterDataModel refName(String refName) {
    this.refName = refName;
    return this;
  }

   /**
   * Get refName
   * @return refName
  **/
  @javax.annotation.Nullable
  public String getRefName() {
    return refName;
  }

  public void setRefName(String refName) {
    this.refName = refName;
  }


  public Qspmdatamanagerv3MasterDataModel refSchema(ProtobufAny refSchema) {
    this.refSchema = refSchema;
    return this;
  }

   /**
   * Get refSchema
   * @return refSchema
  **/
  @javax.annotation.Nullable
  public ProtobufAny getRefSchema() {
    return refSchema;
  }

  public void setRefSchema(ProtobufAny refSchema) {
    this.refSchema = refSchema;
  }


  public Qspmdatamanagerv3MasterDataModel refType(String refType) {
    this.refType = refType;
    return this;
  }

   /**
   * Get refType
   * @return refType
  **/
  @javax.annotation.Nullable
  public String getRefType() {
    return refType;
  }

  public void setRefType(String refType) {
    this.refType = refType;
  }


  public Qspmdatamanagerv3MasterDataModel refValue(String refValue) {
    this.refValue = refValue;
    return this;
  }

   /**
   * Get refValue
   * @return refValue
  **/
  @javax.annotation.Nullable
  public String getRefValue() {
    return refValue;
  }

  public void setRefValue(String refValue) {
    this.refValue = refValue;
  }


  public Qspmdatamanagerv3MasterDataModel refVersion(String refVersion) {
    this.refVersion = refVersion;
    return this;
  }

   /**
   * Get refVersion
   * @return refVersion
  **/
  @javax.annotation.Nullable
  public String getRefVersion() {
    return refVersion;
  }

  public void setRefVersion(String refVersion) {
    this.refVersion = refVersion;
  }


  public Qspmdatamanagerv3MasterDataModel updationTs(OffsetDateTime updationTs) {
    this.updationTs = updationTs;
    return this;
  }

   /**
   * Get updationTs
   * @return updationTs
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getUpdationTs() {
    return updationTs;
  }

  public void setUpdationTs(OffsetDateTime updationTs) {
    this.updationTs = updationTs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Qspmdatamanagerv3MasterDataModel qspmdatamanagerv3MasterDataModel = (Qspmdatamanagerv3MasterDataModel) o;
    return Objects.equals(this.creationTs, qspmdatamanagerv3MasterDataModel.creationTs) &&
        Objects.equals(this.refDesc, qspmdatamanagerv3MasterDataModel.refDesc) &&
        Objects.equals(this.refHasSchema, qspmdatamanagerv3MasterDataModel.refHasSchema) &&
        Objects.equals(this.refId, qspmdatamanagerv3MasterDataModel.refId) &&
        Objects.equals(this.refName, qspmdatamanagerv3MasterDataModel.refName) &&
        Objects.equals(this.refSchema, qspmdatamanagerv3MasterDataModel.refSchema) &&
        Objects.equals(this.refType, qspmdatamanagerv3MasterDataModel.refType) &&
        Objects.equals(this.refValue, qspmdatamanagerv3MasterDataModel.refValue) &&
        Objects.equals(this.refVersion, qspmdatamanagerv3MasterDataModel.refVersion) &&
        Objects.equals(this.updationTs, qspmdatamanagerv3MasterDataModel.updationTs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTs, refDesc, refHasSchema, refId, refName, refSchema, refType, refValue, refVersion, updationTs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Qspmdatamanagerv3MasterDataModel {\n");
    sb.append("    creationTs: ").append(toIndentedString(creationTs)).append("\n");
    sb.append("    refDesc: ").append(toIndentedString(refDesc)).append("\n");
    sb.append("    refHasSchema: ").append(toIndentedString(refHasSchema)).append("\n");
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    refName: ").append(toIndentedString(refName)).append("\n");
    sb.append("    refSchema: ").append(toIndentedString(refSchema)).append("\n");
    sb.append("    refType: ").append(toIndentedString(refType)).append("\n");
    sb.append("    refValue: ").append(toIndentedString(refValue)).append("\n");
    sb.append("    refVersion: ").append(toIndentedString(refVersion)).append("\n");
    sb.append("    updationTs: ").append(toIndentedString(updationTs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creation_ts");
    openapiFields.add("ref_desc");
    openapiFields.add("ref_has_schema");
    openapiFields.add("ref_id");
    openapiFields.add("ref_name");
    openapiFields.add("ref_schema");
    openapiFields.add("ref_type");
    openapiFields.add("ref_value");
    openapiFields.add("ref_version");
    openapiFields.add("updation_ts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Qspmdatamanagerv3MasterDataModel
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Qspmdatamanagerv3MasterDataModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Qspmdatamanagerv3MasterDataModel is not found in the empty JSON string", Qspmdatamanagerv3MasterDataModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Qspmdatamanagerv3MasterDataModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Qspmdatamanagerv3MasterDataModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ref_desc") != null && !jsonObj.get("ref_desc").isJsonNull()) && !jsonObj.get("ref_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_desc").toString()));
      }
      if ((jsonObj.get("ref_id") != null && !jsonObj.get("ref_id").isJsonNull()) && !jsonObj.get("ref_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_id").toString()));
      }
      if ((jsonObj.get("ref_name") != null && !jsonObj.get("ref_name").isJsonNull()) && !jsonObj.get("ref_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_name").toString()));
      }
      // validate the optional field `ref_schema`
      if (jsonObj.get("ref_schema") != null && !jsonObj.get("ref_schema").isJsonNull()) {
        ProtobufAny.validateJsonElement(jsonObj.get("ref_schema"));
      }
      if ((jsonObj.get("ref_type") != null && !jsonObj.get("ref_type").isJsonNull()) && !jsonObj.get("ref_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_type").toString()));
      }
      if ((jsonObj.get("ref_value") != null && !jsonObj.get("ref_value").isJsonNull()) && !jsonObj.get("ref_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_value").toString()));
      }
      if ((jsonObj.get("ref_version") != null && !jsonObj.get("ref_version").isJsonNull()) && !jsonObj.get("ref_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ref_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ref_version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Qspmdatamanagerv3MasterDataModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Qspmdatamanagerv3MasterDataModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Qspmdatamanagerv3MasterDataModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Qspmdatamanagerv3MasterDataModel.class));

       return (TypeAdapter<T>) new TypeAdapter<Qspmdatamanagerv3MasterDataModel>() {
           @Override
           public void write(JsonWriter out, Qspmdatamanagerv3MasterDataModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Qspmdatamanagerv3MasterDataModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Qspmdatamanagerv3MasterDataModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Qspmdatamanagerv3MasterDataModel
  * @throws IOException if the JSON string is invalid with respect to Qspmdatamanagerv3MasterDataModel
  */
  public static Qspmdatamanagerv3MasterDataModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Qspmdatamanagerv3MasterDataModel.class);
  }

 /**
  * Convert an instance of Qspmdatamanagerv3MasterDataModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

