/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets VulnerabilityType
 */
@JsonAdapter(VulnerabilityType.Adapter.class)
public enum VulnerabilityType {
  
  PUBLIC_FACING("public-facing"),
  
  NO_BACKUP("no-backup"),
  
  UNENCRYPTED("unencrypted"),
  
  COPIED_SENSITIVITIES("copied-sensitivities"),
  
  COPIED_SENSITIVITIES_FLOW("copied-sensitivities-flow"),
  
  CROSS_LOCATION("cross-location"),
  
  POTENTIAL_CROSS_LOCATION("potential-cross-location"),
  
  POTENTIAL_CROSS_ACCOUNT("potential-cross-account"),
  
  TRANSITIVE_DATA_FLOW("transitive-data-flow"),
  
  ACTUAL_CROSS_COUNTRY_DATA_TRANSACTION("actual-cross-country-data-transaction"),
  
  DEFAULT_WRITE_ENTITLEMENTS("default-write-entitlements"),
  
  CROSS_ACCOUNT("cross-account"),
  
  POTENTIAL_EXTERNAL_SHARING("potential-external-sharing"),
  
  EXTERNAL_SHARING("external-sharing");

  private String value;

  VulnerabilityType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static VulnerabilityType fromValue(String value) {
    for (VulnerabilityType b : VulnerabilityType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<VulnerabilityType> {
    @Override
    public void write(final JsonWriter jsonWriter, final VulnerabilityType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VulnerabilityType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return VulnerabilityType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    VulnerabilityType.fromValue(value);
  }
}

