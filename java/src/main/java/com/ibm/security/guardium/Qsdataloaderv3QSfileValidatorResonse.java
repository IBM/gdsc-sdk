/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Qsdataloaderv3QSfileValidatorResonse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-24T18:44:53.377644Z[UTC]", comments = "Generator version: 7.6.0")
public class Qsdataloaderv3QSfileValidatorResonse {
  public static final String SERIALIZED_NAME_ALL_FILE_VALID = "all_file_valid";
  @SerializedName(SERIALIZED_NAME_ALL_FILE_VALID)
  private Boolean allFileValid;

  public static final String SERIALIZED_NAME_APPLICATION_FILE_NAME_MESSAGE = "application_file_name_message";
  @SerializedName(SERIALIZED_NAME_APPLICATION_FILE_NAME_MESSAGE)
  private String applicationFileNameMessage;

  public static final String SERIALIZED_NAME_EXPLORER_FILE_NAME_MESSAGE = "explorer_file_name_message";
  @SerializedName(SERIALIZED_NAME_EXPLORER_FILE_NAME_MESSAGE)
  private String explorerFileNameMessage;

  public static final String SERIALIZED_NAME_NETWORK_FILE_NAME_MESSAGE = "network_file_name_message";
  @SerializedName(SERIALIZED_NAME_NETWORK_FILE_NAME_MESSAGE)
  private String networkFileNameMessage;

  public static final String SERIALIZED_NAME_POLICY_FILE_NAME_MESSAGE = "policy_file_name_message";
  @SerializedName(SERIALIZED_NAME_POLICY_FILE_NAME_MESSAGE)
  private String policyFileNameMessage;

  public Qsdataloaderv3QSfileValidatorResonse() {
  }

  public Qsdataloaderv3QSfileValidatorResonse allFileValid(Boolean allFileValid) {
    this.allFileValid = allFileValid;
    return this;
  }

   /**
   * Get allFileValid
   * @return allFileValid
  **/
  @javax.annotation.Nullable
  public Boolean getAllFileValid() {
    return allFileValid;
  }

  public void setAllFileValid(Boolean allFileValid) {
    this.allFileValid = allFileValid;
  }


  public Qsdataloaderv3QSfileValidatorResonse applicationFileNameMessage(String applicationFileNameMessage) {
    this.applicationFileNameMessage = applicationFileNameMessage;
    return this;
  }

   /**
   * Get applicationFileNameMessage
   * @return applicationFileNameMessage
  **/
  @javax.annotation.Nullable
  public String getApplicationFileNameMessage() {
    return applicationFileNameMessage;
  }

  public void setApplicationFileNameMessage(String applicationFileNameMessage) {
    this.applicationFileNameMessage = applicationFileNameMessage;
  }


  public Qsdataloaderv3QSfileValidatorResonse explorerFileNameMessage(String explorerFileNameMessage) {
    this.explorerFileNameMessage = explorerFileNameMessage;
    return this;
  }

   /**
   * Get explorerFileNameMessage
   * @return explorerFileNameMessage
  **/
  @javax.annotation.Nullable
  public String getExplorerFileNameMessage() {
    return explorerFileNameMessage;
  }

  public void setExplorerFileNameMessage(String explorerFileNameMessage) {
    this.explorerFileNameMessage = explorerFileNameMessage;
  }


  public Qsdataloaderv3QSfileValidatorResonse networkFileNameMessage(String networkFileNameMessage) {
    this.networkFileNameMessage = networkFileNameMessage;
    return this;
  }

   /**
   * Get networkFileNameMessage
   * @return networkFileNameMessage
  **/
  @javax.annotation.Nullable
  public String getNetworkFileNameMessage() {
    return networkFileNameMessage;
  }

  public void setNetworkFileNameMessage(String networkFileNameMessage) {
    this.networkFileNameMessage = networkFileNameMessage;
  }


  public Qsdataloaderv3QSfileValidatorResonse policyFileNameMessage(String policyFileNameMessage) {
    this.policyFileNameMessage = policyFileNameMessage;
    return this;
  }

   /**
   * Get policyFileNameMessage
   * @return policyFileNameMessage
  **/
  @javax.annotation.Nullable
  public String getPolicyFileNameMessage() {
    return policyFileNameMessage;
  }

  public void setPolicyFileNameMessage(String policyFileNameMessage) {
    this.policyFileNameMessage = policyFileNameMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Qsdataloaderv3QSfileValidatorResonse qsdataloaderv3QSfileValidatorResonse = (Qsdataloaderv3QSfileValidatorResonse) o;
    return Objects.equals(this.allFileValid, qsdataloaderv3QSfileValidatorResonse.allFileValid) &&
        Objects.equals(this.applicationFileNameMessage, qsdataloaderv3QSfileValidatorResonse.applicationFileNameMessage) &&
        Objects.equals(this.explorerFileNameMessage, qsdataloaderv3QSfileValidatorResonse.explorerFileNameMessage) &&
        Objects.equals(this.networkFileNameMessage, qsdataloaderv3QSfileValidatorResonse.networkFileNameMessage) &&
        Objects.equals(this.policyFileNameMessage, qsdataloaderv3QSfileValidatorResonse.policyFileNameMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allFileValid, applicationFileNameMessage, explorerFileNameMessage, networkFileNameMessage, policyFileNameMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Qsdataloaderv3QSfileValidatorResonse {\n");
    sb.append("    allFileValid: ").append(toIndentedString(allFileValid)).append("\n");
    sb.append("    applicationFileNameMessage: ").append(toIndentedString(applicationFileNameMessage)).append("\n");
    sb.append("    explorerFileNameMessage: ").append(toIndentedString(explorerFileNameMessage)).append("\n");
    sb.append("    networkFileNameMessage: ").append(toIndentedString(networkFileNameMessage)).append("\n");
    sb.append("    policyFileNameMessage: ").append(toIndentedString(policyFileNameMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("all_file_valid");
    openapiFields.add("application_file_name_message");
    openapiFields.add("explorer_file_name_message");
    openapiFields.add("network_file_name_message");
    openapiFields.add("policy_file_name_message");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Qsdataloaderv3QSfileValidatorResonse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Qsdataloaderv3QSfileValidatorResonse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Qsdataloaderv3QSfileValidatorResonse is not found in the empty JSON string", Qsdataloaderv3QSfileValidatorResonse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Qsdataloaderv3QSfileValidatorResonse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Qsdataloaderv3QSfileValidatorResonse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("application_file_name_message") != null && !jsonObj.get("application_file_name_message").isJsonNull()) && !jsonObj.get("application_file_name_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `application_file_name_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("application_file_name_message").toString()));
      }
      if ((jsonObj.get("explorer_file_name_message") != null && !jsonObj.get("explorer_file_name_message").isJsonNull()) && !jsonObj.get("explorer_file_name_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `explorer_file_name_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("explorer_file_name_message").toString()));
      }
      if ((jsonObj.get("network_file_name_message") != null && !jsonObj.get("network_file_name_message").isJsonNull()) && !jsonObj.get("network_file_name_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network_file_name_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network_file_name_message").toString()));
      }
      if ((jsonObj.get("policy_file_name_message") != null && !jsonObj.get("policy_file_name_message").isJsonNull()) && !jsonObj.get("policy_file_name_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_file_name_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_file_name_message").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Qsdataloaderv3QSfileValidatorResonse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Qsdataloaderv3QSfileValidatorResonse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Qsdataloaderv3QSfileValidatorResonse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Qsdataloaderv3QSfileValidatorResonse.class));

       return (TypeAdapter<T>) new TypeAdapter<Qsdataloaderv3QSfileValidatorResonse>() {
           @Override
           public void write(JsonWriter out, Qsdataloaderv3QSfileValidatorResonse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Qsdataloaderv3QSfileValidatorResonse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Qsdataloaderv3QSfileValidatorResonse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Qsdataloaderv3QSfileValidatorResonse
  * @throws IOException if the JSON string is invalid with respect to Qsdataloaderv3QSfileValidatorResonse
  */
  public static Qsdataloaderv3QSfileValidatorResonse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Qsdataloaderv3QSfileValidatorResonse.class);
  }

 /**
  * Convert an instance of Qsdataloaderv3QSfileValidatorResonse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

