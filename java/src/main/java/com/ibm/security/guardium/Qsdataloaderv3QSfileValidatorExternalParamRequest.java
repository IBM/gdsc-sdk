/*
 * IBM Guardium Data Security Center
 * Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.security.guardium;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.security.JSON;

/**
 * Qsdataloaderv3QSfileValidatorExternalParamRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-27T16:17:29.841502Z[UTC]", comments = "Generator version: 7.6.0")
public class Qsdataloaderv3QSfileValidatorExternalParamRequest {
  public static final String SERIALIZED_NAME_APPLICATION_FILE_NAME = "application_file_name";
  @SerializedName(SERIALIZED_NAME_APPLICATION_FILE_NAME)
  private String applicationFileName;

  public static final String SERIALIZED_NAME_BUCKET_NAME = "bucket_name";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_EXPLORER_FILE_NAME = "explorer_file_name";
  @SerializedName(SERIALIZED_NAME_EXPLORER_FILE_NAME)
  private String explorerFileName;

  public static final String SERIALIZED_NAME_FOLDER_NAME = "folder_name";
  @SerializedName(SERIALIZED_NAME_FOLDER_NAME)
  private String folderName;

  public static final String SERIALIZED_NAME_NETWORK_FILE_NAME = "network_file_name";
  @SerializedName(SERIALIZED_NAME_NETWORK_FILE_NAME)
  private String networkFileName;

  public static final String SERIALIZED_NAME_POLICY_FILE_NAME = "policy_file_name";
  @SerializedName(SERIALIZED_NAME_POLICY_FILE_NAME)
  private String policyFileName;

  public Qsdataloaderv3QSfileValidatorExternalParamRequest() {
  }

  public Qsdataloaderv3QSfileValidatorExternalParamRequest applicationFileName(String applicationFileName) {
    this.applicationFileName = applicationFileName;
    return this;
  }

   /**
   * Get applicationFileName
   * @return applicationFileName
  **/
  @javax.annotation.Nullable
  public String getApplicationFileName() {
    return applicationFileName;
  }

  public void setApplicationFileName(String applicationFileName) {
    this.applicationFileName = applicationFileName;
  }


  public Qsdataloaderv3QSfileValidatorExternalParamRequest bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @javax.annotation.Nullable
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }


  public Qsdataloaderv3QSfileValidatorExternalParamRequest explorerFileName(String explorerFileName) {
    this.explorerFileName = explorerFileName;
    return this;
  }

   /**
   * Get explorerFileName
   * @return explorerFileName
  **/
  @javax.annotation.Nullable
  public String getExplorerFileName() {
    return explorerFileName;
  }

  public void setExplorerFileName(String explorerFileName) {
    this.explorerFileName = explorerFileName;
  }


  public Qsdataloaderv3QSfileValidatorExternalParamRequest folderName(String folderName) {
    this.folderName = folderName;
    return this;
  }

   /**
   * Get folderName
   * @return folderName
  **/
  @javax.annotation.Nullable
  public String getFolderName() {
    return folderName;
  }

  public void setFolderName(String folderName) {
    this.folderName = folderName;
  }


  public Qsdataloaderv3QSfileValidatorExternalParamRequest networkFileName(String networkFileName) {
    this.networkFileName = networkFileName;
    return this;
  }

   /**
   * Get networkFileName
   * @return networkFileName
  **/
  @javax.annotation.Nullable
  public String getNetworkFileName() {
    return networkFileName;
  }

  public void setNetworkFileName(String networkFileName) {
    this.networkFileName = networkFileName;
  }


  public Qsdataloaderv3QSfileValidatorExternalParamRequest policyFileName(String policyFileName) {
    this.policyFileName = policyFileName;
    return this;
  }

   /**
   * Get policyFileName
   * @return policyFileName
  **/
  @javax.annotation.Nullable
  public String getPolicyFileName() {
    return policyFileName;
  }

  public void setPolicyFileName(String policyFileName) {
    this.policyFileName = policyFileName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Qsdataloaderv3QSfileValidatorExternalParamRequest qsdataloaderv3QSfileValidatorExternalParamRequest = (Qsdataloaderv3QSfileValidatorExternalParamRequest) o;
    return Objects.equals(this.applicationFileName, qsdataloaderv3QSfileValidatorExternalParamRequest.applicationFileName) &&
        Objects.equals(this.bucketName, qsdataloaderv3QSfileValidatorExternalParamRequest.bucketName) &&
        Objects.equals(this.explorerFileName, qsdataloaderv3QSfileValidatorExternalParamRequest.explorerFileName) &&
        Objects.equals(this.folderName, qsdataloaderv3QSfileValidatorExternalParamRequest.folderName) &&
        Objects.equals(this.networkFileName, qsdataloaderv3QSfileValidatorExternalParamRequest.networkFileName) &&
        Objects.equals(this.policyFileName, qsdataloaderv3QSfileValidatorExternalParamRequest.policyFileName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationFileName, bucketName, explorerFileName, folderName, networkFileName, policyFileName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Qsdataloaderv3QSfileValidatorExternalParamRequest {\n");
    sb.append("    applicationFileName: ").append(toIndentedString(applicationFileName)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    explorerFileName: ").append(toIndentedString(explorerFileName)).append("\n");
    sb.append("    folderName: ").append(toIndentedString(folderName)).append("\n");
    sb.append("    networkFileName: ").append(toIndentedString(networkFileName)).append("\n");
    sb.append("    policyFileName: ").append(toIndentedString(policyFileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("application_file_name");
    openapiFields.add("bucket_name");
    openapiFields.add("explorer_file_name");
    openapiFields.add("folder_name");
    openapiFields.add("network_file_name");
    openapiFields.add("policy_file_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Qsdataloaderv3QSfileValidatorExternalParamRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Qsdataloaderv3QSfileValidatorExternalParamRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Qsdataloaderv3QSfileValidatorExternalParamRequest is not found in the empty JSON string", Qsdataloaderv3QSfileValidatorExternalParamRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Qsdataloaderv3QSfileValidatorExternalParamRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Qsdataloaderv3QSfileValidatorExternalParamRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("application_file_name") != null && !jsonObj.get("application_file_name").isJsonNull()) && !jsonObj.get("application_file_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `application_file_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("application_file_name").toString()));
      }
      if ((jsonObj.get("bucket_name") != null && !jsonObj.get("bucket_name").isJsonNull()) && !jsonObj.get("bucket_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket_name").toString()));
      }
      if ((jsonObj.get("explorer_file_name") != null && !jsonObj.get("explorer_file_name").isJsonNull()) && !jsonObj.get("explorer_file_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `explorer_file_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("explorer_file_name").toString()));
      }
      if ((jsonObj.get("folder_name") != null && !jsonObj.get("folder_name").isJsonNull()) && !jsonObj.get("folder_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder_name").toString()));
      }
      if ((jsonObj.get("network_file_name") != null && !jsonObj.get("network_file_name").isJsonNull()) && !jsonObj.get("network_file_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network_file_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network_file_name").toString()));
      }
      if ((jsonObj.get("policy_file_name") != null && !jsonObj.get("policy_file_name").isJsonNull()) && !jsonObj.get("policy_file_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy_file_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy_file_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Qsdataloaderv3QSfileValidatorExternalParamRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Qsdataloaderv3QSfileValidatorExternalParamRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Qsdataloaderv3QSfileValidatorExternalParamRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Qsdataloaderv3QSfileValidatorExternalParamRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<Qsdataloaderv3QSfileValidatorExternalParamRequest>() {
           @Override
           public void write(JsonWriter out, Qsdataloaderv3QSfileValidatorExternalParamRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Qsdataloaderv3QSfileValidatorExternalParamRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Qsdataloaderv3QSfileValidatorExternalParamRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Qsdataloaderv3QSfileValidatorExternalParamRequest
  * @throws IOException if the JSON string is invalid with respect to Qsdataloaderv3QSfileValidatorExternalParamRequest
  */
  public static Qsdataloaderv3QSfileValidatorExternalParamRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Qsdataloaderv3QSfileValidatorExternalParamRequest.class);
  }

 /**
  * Convert an instance of Qsdataloaderv3QSfileValidatorExternalParamRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

